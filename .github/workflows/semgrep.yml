# Name of Semgrep-Actions workflow 
name: semgrep-scan

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan mainline branches and report all findings: 
  push:
    branches: ["ci_dev", "ci_temporary", "main", "opensource_gsf"]
  schedule:
    - cron: '0 */12 * * *' 

defaults:
  run:
    shell: bash


permissions:
  id-token: write
  pull-requests: write
  contents: read

# All test scripts split in individual .sh files and moved to .github/workflow scripts
env:
  COMMAND-PYTEST: chmod +x ./pytest_check.sh && ./pytest_check.sh
  COMMAND-LINT: chmod +x ./lint_check.sh && ./lint_check.sh
  COMMAND-E2E-CPU-TEST: chmod +x ./e2e_cpu_check.sh && ./e2e_cpu_check.sh
  COMMAND-E2E: chmod +x ./e2e_check.sh && ./e2e_check.sh
  COMMAND-E2E-MGPU: chmod +x ./e2e_mgpu_check.sh && ./e2e_mgpu_check.sh

jobs:
  semgrep:
    
    name: Scan
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: |
          pip install semgrep
          semgrep --version

      # Period (.) to run scan in the current directory to avoid blocking findings in the future use --exclude=+BLOCKING
      - name: Run Scan - 1 (Default Ruleset)
        run: semgrep --config=p/default .
      
      - name: Run Scan - 2 (Ruleset for Python)
        run: semgrep --config=p/python .
      
      - name: Run Scan - 3 (Ruleset for Dockerfile)
        run: semgrep --config=p/dockerfile .

      - name: Run Scan - 4 (Ruleset CWE TOP 25)
        run: semgrep --config=p/cwe-top-25 .

  lint_check:
    if: ${{ github.event.label.name != 'draft' && !startsWith(github.event.pull_request.title, '[Test-PR]')}}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::698571788627:role/github-oidc-role
          role-duration-seconds: 14400
          aws-region: us-east-1
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        shell: bash
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest
          pip3 install boto3
      - name: Submit Job (for Push)
        if: ${{ github.event_name == 'push' }}
        shell: bash
        run: |
          echo "Start submitting job - Push"  
          python3 ./submitJob.py --job-type CI-LINT-PUSH --name Graphstorm-LintTest-Push-'${{ github.ref }}' \
                                 --command "${{ env.COMMAND-LINT }}" \
                                 --remote https://github.com/'${{ github.repository }}' \
                                 --source-ref '${{ github.ref }}' \
                                 --wait
      - name: Submit Job (for Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo "Start submitting job - Pull Request"
          echo github.event.pull_request.title
          python3 ./submitJob.py --job-type CI-LINT-PUSH --name Graphstorm-LintTest-PR#-'${{ github.event.number }}' \
                                 --command "${{ env.COMMAND-LINT }}" \
                                 --remote https://github.com/'${{ github.event.pull_request.head.repo.full_name }}' \
                                 --source-ref '${{ github.event.pull_request.head.sha }}' \
                                 --wait

