Search.setIndex({"docnames": ["advanced/advanced-usages", "advanced/language-models", "advanced/own-models", "api/graphstorm", "api/graphstorm.customized", "api/graphstorm.dataloading", "api/graphstorm.evaluator", "api/graphstorm.inferer", "api/graphstorm.model", "api/graphstorm.trainer", "configuration/configuration-gconstruction", "configuration/configuration-partition", "configuration/configuration-run", "configuration/index", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader", "generated/graphstorm.dataloading.GSgnnEdgeInferData", "generated/graphstorm.dataloading.GSgnnEdgeTrainData", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader", "generated/graphstorm.dataloading.GSgnnNodeDataLoader", "generated/graphstorm.dataloading.GSgnnNodeInferData", "generated/graphstorm.dataloading.GSgnnNodeTrainData", "generated/graphstorm.eval.GSgnnAccEvaluator", "generated/graphstorm.eval.GSgnnInstanceEvaluator", "generated/graphstorm.eval.GSgnnLPEvaluator", "generated/graphstorm.eval.GSgnnMrrLPEvaluator", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator", "generated/graphstorm.eval.GSgnnRegressionEvaluator", "generated/graphstorm.gsf.get_feat_size", "generated/graphstorm.gsf.initialize", "generated/graphstorm.inference.GSgnnEdgePredictionInfer", "generated/graphstorm.inference.GSgnnLinkPredictionInfer", "generated/graphstorm.inference.GSgnnNodePredictionInfer", "generated/graphstorm.model.GSLMNodeEncoderInputLayer", "generated/graphstorm.model.GSNodeEncoderInputLayer", "generated/graphstorm.model.GSPureLMNodeInputLayer", "generated/graphstorm.model.GSgnnEdgeModelInterface", "generated/graphstorm.model.GSgnnLinkPredictionModelInterface", "generated/graphstorm.model.GSgnnModelBase", "generated/graphstorm.model.GSgnnNodeModelBase", "generated/graphstorm.model.GSgnnNodeModelInterface", "generated/graphstorm.model.RelGraphConvLayer", "generated/graphstorm.model.RelationalAttLayer", "generated/graphstorm.model.RelationalGATEncoder", "generated/graphstorm.model.RelationalGCNEncoder", "generated/graphstorm.model.SAGEConv", "generated/graphstorm.model.SAGEEncoder", "generated/graphstorm.trainer.GLEMNodePredictionTrainer", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer", "generated/graphstorm.trainer.GSgnnTrainer", "generated/graphstorm.utils.get_rank", "generated/graphstorm.utils.get_world_size", "index", "install/env-setup", "scale/distributed", "scale/sagemaker", "tutorials/own-data", "tutorials/quick-start"], "filenames": ["advanced/advanced-usages.rst", "advanced/language-models.rst", "advanced/own-models.rst", "api/graphstorm.rst", "api/graphstorm.customized.rst", "api/graphstorm.dataloading.rst", "api/graphstorm.evaluator.rst", "api/graphstorm.inferer.rst", "api/graphstorm.model.rst", "api/graphstorm.trainer.rst", "configuration/configuration-gconstruction.rst", "configuration/configuration-partition.rst", "configuration/configuration-run.rst", "configuration/index.rst", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnEdgeInferData.rst", "generated/graphstorm.dataloading.GSgnnEdgeTrainData.rst", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader.rst", "generated/graphstorm.dataloading.GSgnnNodeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnNodeInferData.rst", "generated/graphstorm.dataloading.GSgnnNodeTrainData.rst", "generated/graphstorm.eval.GSgnnAccEvaluator.rst", "generated/graphstorm.eval.GSgnnInstanceEvaluator.rst", "generated/graphstorm.eval.GSgnnLPEvaluator.rst", "generated/graphstorm.eval.GSgnnMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnRegressionEvaluator.rst", "generated/graphstorm.gsf.get_feat_size.rst", "generated/graphstorm.gsf.initialize.rst", "generated/graphstorm.inference.GSgnnEdgePredictionInfer.rst", "generated/graphstorm.inference.GSgnnLinkPredictionInfer.rst", "generated/graphstorm.inference.GSgnnNodePredictionInfer.rst", "generated/graphstorm.model.GSLMNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSPureLMNodeInputLayer.rst", "generated/graphstorm.model.GSgnnEdgeModelInterface.rst", "generated/graphstorm.model.GSgnnLinkPredictionModelInterface.rst", "generated/graphstorm.model.GSgnnModelBase.rst", "generated/graphstorm.model.GSgnnNodeModelBase.rst", "generated/graphstorm.model.GSgnnNodeModelInterface.rst", "generated/graphstorm.model.RelGraphConvLayer.rst", "generated/graphstorm.model.RelationalAttLayer.rst", "generated/graphstorm.model.RelationalGATEncoder.rst", "generated/graphstorm.model.RelationalGCNEncoder.rst", "generated/graphstorm.model.SAGEConv.rst", "generated/graphstorm.model.SAGEEncoder.rst", "generated/graphstorm.trainer.GLEMNodePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnTrainer.rst", "generated/graphstorm.utils.get_rank.rst", "generated/graphstorm.utils.get_world_size.rst", "index.rst", "install/env-setup.rst", "scale/distributed.rst", "scale/sagemaker.rst", "tutorials/own-data.rst", "tutorials/quick-start.rst"], "titles": ["GraphStorm Advanced Usages", "Use Text as Node Features", "Use Your Own Models", "graphstorm", "customized model APIs", "graphstorm.dataloading", "graphstorm.evaluator", "graphstorm.inferer", "graphstorm.model", "graphstorm.trainer", "Graph Construction", "Graph Partition", "Training and Inference", "GraphStorm Configurations", "GSgnnEdgeDataLoader", "GSgnnEdgeInferData", "GSgnnEdgeTrainData", "GSgnnLinkPredictionDataLoader", "GSgnnNodeDataLoader", "GSgnnNodeInferData", "GSgnnNodeTrainData", "GSgnnAccEvaluator", "GSgnnInstanceEvaluator", "GSgnnLPEvaluator", "GSgnnMrrLPEvaluator", "GSgnnPerEtypeMrrLPEvaluator", "GSgnnRegressionEvaluator", "graphstorm.gsf.get_feat_size", "graphstorm.gsf.initialize", "GSgnnEdgePredictionInfer", "GSgnnLinkPredictionInfer", "GSgnnNodePredictionInfer", "GSLMNodeEncoderInputLayer", "GSNodeEncoderInputLayer", "GSPureLMNodeInputLayer", "GSgnnEdgeModelInterface", "GSgnnLinkPredictionModelInterface", "GSgnnModelBase", "GSgnnNodeModelBase", "GSgnnNodeModelInterface", "RelGraphConvLayer", "RelationalAttLayer", "RelationalGATEncoder", "RelationalGCNEncoder", "SAGEConv", "SAGEEncoder", "GLEMNodePredictionTrainer", "GSgnnEdgePredictionTrainer", "GSgnnLinkPredictionTrainer", "GSgnnNodePredictionTrainer", "GSgnnTrainer", "graphstorm.utils.get_rank", "graphstorm.utils.get_world_size", "Welcome to the GraphStorm Documentation and Tutorials", "Environment Setup", "Use GraphStorm in a Distributed Cluster", "Use GraphStorm on SageMaker", "Use Your Own Data Tutorial", "Standalone Mode Quick Start Tutorial"], "terms": {"i": [0, 1, 2, 4, 10, 11, 12, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58], "wide": [0, 53], "emploi": 0, "pre": [0, 1, 12, 57], "techniqu": 0, "gener": [0, 1, 2, 10, 11, 24, 25, 29, 30, 31, 32, 50, 57, 58], "high": [0, 10], "qualiti": 0, "entiti": 0, "represent": 0, "applic": [0, 11, 12, 56], "divers": 0, "busi": [0, 57], "howev": [0, 1, 12], "implement": [0, 4, 12, 37, 38, 53, 57], "loop": [0, 1, 2, 12, 40, 41, 42], "task": [0, 1, 5, 7, 8, 10, 11, 13, 18, 19, 20, 21, 29, 30, 31, 55, 56, 57, 58], "need": [0, 1, 2, 11, 12, 13, 37, 38, 53, 54, 55, 56, 57, 58], "carefulli": 0, "handl": [0, 7, 9, 55], "problem": [0, 2, 12], "caus": [0, 1, 2, 55], "1": [0, 1, 10, 11, 12, 21, 22, 23, 24, 25, 26, 29, 30, 31, 42, 43, 45, 46, 49, 50, 55, 58], "includ": [0, 1, 2, 5, 12, 13, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 54, 56, 58], "target": [0, 2, 11, 12, 14, 15, 16, 17, 18, 19, 20, 31, 55, 57], "edg": [0, 2, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 29, 30, 35, 36, 38, 39, 47, 48, 53, 55, 56, 58], "messag": [0, 12, 14, 35, 36, 38, 39, 40, 41], "pass": [0, 2, 12, 14, 35, 36, 37, 38, 39, 40, 56], "2": [0, 1, 10, 12, 21, 22, 23, 24, 25, 26, 29, 30, 31, 46, 47, 48, 49, 53, 55], "valid": [0, 2, 10, 11, 12, 16, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 56, 57, 58], "test": [0, 2, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 46, 47, 48, 49, 54, 55, 56, 57, 58], "dure": [0, 1, 10, 12, 14, 17, 21, 22, 23, 26], "thi": [0, 1, 2, 10, 11, 12, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58], "paper": [0, 1, 2, 10, 11, 55, 57], "provid": [0, 2, 6, 10, 11, 12, 13, 37, 53, 54, 55, 56, 57, 58], "more": [0, 1, 2, 12, 24, 25, 53, 55, 56, 57], "detail": [0, 2, 10, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 56, 57], "support": [0, 1, 2, 10, 11, 12, 21, 22, 23, 24, 25, 26, 37, 38, 46, 47, 48, 49, 50, 53, 54, 57], "avoid": [0, 7, 9, 10, 12, 17, 30], "theses": 0, "To": [0, 1, 2, 12, 55, 56], "user": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 32, 33, 37, 38, 53, 54, 55, 56, 57, 58], "set": [0, 1, 2, 3, 5, 8, 10, 11, 12, 15, 16, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58], "exclude_training_target": [0, 12, 14, 17], "true": [0, 1, 2, 10, 11, 12, 14, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 55, 57], "reverse_edge_types_map": [0, 12, 14, 17], "when": [0, 1, 2, 12, 24, 25, 32, 33, 35, 37, 38, 39, 46, 47, 48, 49, 55, 56], "launch": [0, 2, 11, 54], "These": [0, 2, 13, 57], "two": [0, 1, 2, 10, 11, 12, 21, 22, 23, 24, 25, 26, 30, 35, 36, 39, 54, 55, 56, 57], "argument": [0, 1, 13, 54, 55, 56, 57, 58], "tell": [0, 56], "exclud": [0, 12, 14, 17], "correspond": [0, 2, 10, 12, 55, 56], "revers": [0, 10, 11, 12, 14, 17, 24, 25], "do": [0, 1, 2, 10, 12, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 46, 47, 48, 49, 50, 55, 56, 57, 58], "explan": [0, 56, 57], "can": [0, 1, 2, 3, 10, 11, 12, 15, 16, 19, 29, 30, 31, 32, 33, 37, 38, 48, 53, 54, 55, 56, 57, 58], "found": [0, 2, 57], "infer": [0, 1, 10, 11, 13, 15, 19, 28, 29, 30, 31, 35, 36, 39, 46, 47, 48, 49, 53, 55, 57], "configur": [0, 15, 16, 19, 20, 32, 34, 53, 56], "model": [0, 10, 11, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58], "mask": [0, 10, 17, 30, 48], "val_mask": [0, 2, 10, 57], "test_mask": [0, 2, 10, 57], "respect": [0, 12], "also": [0, 1, 2, 10, 37, 55, 57, 58], "all": [0, 1, 2, 12, 14, 25, 29, 31, 32, 33, 34, 35, 37, 38, 39, 46, 47, 48, 49, 50, 56, 57, 58], "other": [0, 1, 2, 12, 46, 47, 48, 49, 50, 55], "train_mask": [0, 2, 10, 17, 30, 48, 57], "reli": [0, 2, 23, 54, 56, 57, 58], "dgl": [0, 10, 11, 42, 43, 45, 54, 55, 58], "dataload": [0, 14, 15, 16, 17, 18, 19, 20, 30, 46, 47, 48, 49], "multilayerneighborsampl": 0, "sampl": [0, 2, 12, 14, 17, 18, 24, 25, 42, 43, 45, 57], "basic": [0, 2, 10, 38, 55, 57], "onli": [0, 2, 10, 11, 12, 13, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 55, 56, 57, 58], "effici": [0, 12, 24, 25], "graph": [0, 5, 6, 8, 12, 13, 15, 16, 17, 19, 20, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 48, 54, 58], "four": [0, 55, 56], "e": [0, 1, 2, 8, 10, 11, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58], "fast_uniform": 0, "fast_joint": 0, "fast_localuniform": 0, "fast_localjoint": 0, "less": [0, 11, 13, 24, 25], "precis": 0, "neighbor": [0, 12, 14, 17, 18], "behavior": [0, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "specif": [0, 2, 56], "regardless": 0, "ani": [0, 1, 2, 10, 12, 15, 19, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 53, 57, 58], "begin": [0, 2], "later": [0, 2, 12, 54, 57], "remov": [0, 11, 12, 46, 47, 48, 49, 50], "In": [0, 1, 2, 10, 12, 13, 32, 33, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58], "theori": 0, "subgraph": [0, 42, 43, 45], "mai": [0, 1, 2, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 57, 58], "have": [0, 1, 2, 10, 11, 12, 15, 16, 19, 20, 32, 33, 34, 55, 56, 57, 58], "node": [0, 2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 55, 56, 58], "than": [0, 10, 11, 12, 54, 55, 57], "expect": 0, "some": [0, 1, 2, 12, 37, 38, 55, 56, 57], "them": [0, 1, 10, 32, 33, 37, 38, 55, 56, 57], "would": [0, 56], "hundr": [0, 12], "million": 0, "small": [0, 2, 12, 55], "g": [0, 1, 2, 3, 8, 10, 11, 12, 15, 16, 19, 20, 27, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58], "each": [0, 1, 10, 12, 14, 17, 18, 23, 24, 25, 27, 32, 33, 34, 40, 41, 42, 43, 44, 45, 55, 57, 58], "10": [0, 1, 10, 12, 55, 56, 57, 58], "impact": 0, "neglig": 0, "With": [0, 1, 2, 56, 57], "0": [0, 1, 2, 10, 11, 12, 21, 22, 23, 24, 25, 26, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58], "4": [0, 1, 12, 54, 55, 56, 57], "4x": 0, "over": [0, 56], "localuniform": [0, 12], "layer": [0, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56], "rgcn": [0, 2, 55, 57, 58], "mag": [0, 55, 56], "dataset": [0, 11, 14, 17, 18, 20, 24, 25, 30, 48, 55, 57, 58], "g5": 0, "48x": 0, "instanc": [0, 2, 12, 37, 38, 54, 56, 58], "mani": [1, 2, 12], "real": [1, 10, 55, 56], "world": [1, 52], "content": [1, 55, 56, 57, 58], "titl": [1, 10], "descript": [1, 2, 12, 55, 56], "product": [1, 54, 56], "question": 1, "comment": 1, "from": [1, 2, 8, 10, 12, 37, 38, 46, 47, 48, 49, 50, 56, 57], "leverag": [1, 2, 53, 55, 56, 57], "lm": [1, 10, 12, 32, 34], "huggingfac": [1, 10], "emb": [1, 2, 12, 37, 38, 46, 47, 48, 49, 50, 56, 57], "embed": [1, 2, 8, 10, 11, 12, 17, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 48, 56, 57], "train": [1, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 25, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53], "There": [1, 2, 10, 12, 53, 54, 56, 57], "ar": [1, 2, 10, 11, 12, 15, 16, 17, 19, 20, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58], "mode": [1, 2, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 53, 55, 56], "input": [1, 2, 11, 12, 15, 16, 19, 20, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 58], "speed": [1, 2, 10, 53], "fast": 1, "memori": [1, 2, 10, 12, 55], "consumpt": 1, "lower": [1, 2, 12], "case": [1, 2, 8, 12, 13, 24, 25, 32, 33, 46, 47, 48, 49, 50, 53, 56], "fit": [1, 22, 23, 24, 25, 46, 47, 48, 49], "well": [1, 54], "fail": [1, 2], "improv": [1, 12], "perform": [1, 2, 11, 12, 13, 29, 30, 31, 37, 38, 46, 47, 48, 49, 50, 53, 57, 58], "co": [1, 12], "gml": [1, 2, 6, 13, 53, 57, 58], "same": [1, 10, 12, 23, 34, 55, 56, 57], "consum": [1, 12, 55], "much": 1, "particularli": [1, 2, 58], "gpu": [1, 2, 12, 54, 55, 56, 58], "take": [1, 2, 12, 35, 36, 37, 38, 39, 55, 56, 57, 58], "longer": 1, "time": [1, 10, 12, 55, 57], "complet": [1, 55, 56], "follow": [1, 2, 3, 10, 12, 16, 53, 54, 55, 56, 57, 58], "procedur": 1, "your": [1, 10, 53, 54, 55, 56, 58], "own": [1, 10, 53, 56, 58], "tutori": [1, 2, 10, 54, 55, 56], "minor": 1, "chang": [1, 2, 12, 54, 57], "step": [1, 11, 12, 53, 54, 55, 58], "tool": [1, 2, 10, 11, 12, 54, 55, 56, 57, 58], "token": [1, 10, 11, 56], "3": [1, 12, 21, 22, 23, 24, 25, 26, 31, 54, 55, 56], "If": [1, 2, 4, 7, 9, 10, 11, 12, 14, 17, 18, 21, 25, 40, 54, 55, 56, 57, 58], "command": [1, 2, 12, 53, 54, 55, 56, 57, 58], "below": [1, 2, 10, 12, 54, 55, 56, 57, 58], "should": [1, 2, 7, 9, 10, 11, 12, 34, 37, 38, 54, 55, 56, 57, 58], "run": [1, 12, 14, 17, 18, 35, 37, 38, 53, 54, 55, 57, 58], "docker": [1, 53, 55, 57, 58], "contain": [1, 2, 3, 8, 10, 12, 36, 37, 46, 47, 48, 49, 50, 56, 57, 58], "pleas": [1, 2, 10, 12, 53, 54, 55, 56, 57, 58], "refer": [1, 2, 10, 55, 56, 57, 58], "environ": [1, 3, 53, 55, 56, 57, 58], "setup": [1, 3, 15, 16, 19, 53, 57, 58], "you": [1, 11, 12, 53, 54, 55, 56, 57, 58], "up": [1, 2, 10, 53, 55, 57], "pip": [1, 56, 57, 58], "packag": [1, 3, 57, 58], "replac": [1, 54, 55, 56, 57, 58], "occurr": [1, 57, 58], "2222": [1, 2, 54, 55, 57, 58], "ssh": [1, 2, 12, 55, 57, 58], "port": [1, 2, 12, 54, 56, 57, 58], "22": [1, 54, 56, 57, 58], "clone": [1, 56, 57, 58], "toolkit": [1, 57, 58], "acm": [1, 2], "demonstr": [1, 2, 55, 57, 58], "how": [1, 10, 11, 12, 53, 55, 56, 57, 58], "first": [1, 2, 12, 53, 54, 55, 56, 57, 58], "go": [1, 57], "exampl": [1, 2, 11, 12, 53, 54, 55, 56, 58], "folder": [1, 2, 10, 11, 12, 46, 47, 48, 49, 50, 54, 56, 57, 58], "cd": [1, 54, 56, 57], "Then": [1, 2, 12, 54, 55, 56, 57, 58], "creat": [1, 2, 56, 57, 58], "requir": [1, 10, 11, 12, 13, 14, 17, 18, 34, 54, 55, 56, 58], "raw_w_text": 1, "format": [1, 11, 12, 24, 25, 55, 58], "python3": [1, 2, 54, 55, 56, 57, 58], "m": [1, 2, 55, 57, 58], "acm_data": [1, 57], "py": [1, 2, 55, 56, 57, 58], "output": [1, 2, 11, 12, 34, 40, 41, 42, 43, 44, 45, 55, 56, 58], "path": [1, 2, 10, 11, 12, 15, 16, 19, 20, 28, 29, 30, 31, 37, 38, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58], "tmp": [1, 10, 57, 58], "acm_raw": [1, 57], "type": [1, 2, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58], "onc": [1, 2, 12, 53, 55, 56, 57, 58], "success": 1, "file": [1, 10, 11, 12, 15, 16, 19, 20, 28, 29, 30, 31, 46, 47, 48, 49, 54, 58], "under": [1, 10, 53, 55, 56, 57], "similar": [1, 2, 10, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55, 56, 57], "But": [1, 2, 12], "config": [1, 2, 10, 12, 55, 57, 58], "json": [1, 2, 55, 58], "few": [1, 55], "extra": [1, 12, 34, 54], "line": [1, 2, 10, 12, 57], "list": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 50, 56, 57], "column": [1, 10, 57], "specifi": [1, 2, 10, 11, 12, 32, 33, 55, 56, 57, 58], "thei": [1, 10, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55, 57], "process": [1, 7, 9, 10, 12, 24, 25, 51, 53, 54, 57], "contruct": 1, "The": [1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 54, 55, 56, 58], "snippet": 1, "show": [1, 2, 10, 57, 58], "inform": [1, 2, 10, 12, 17, 30, 55, 56], "author": [1, 2, 10, 11, 55, 57], "It": [1, 10, 12, 15, 16, 19, 20, 32, 33, 35, 36, 37, 39, 46, 47, 48, 49, 50, 53, 55, 57, 58], "indic": [1, 2, 10, 12, 14, 15, 16, 17, 18, 19, 30, 48], "": [1, 10, 12, 14, 15, 16, 17, 18, 19, 20, 27, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58], "name": [1, 2, 10, 11, 12, 15, 16, 19, 20, 27, 40, 41, 54, 55, 56, 57, 58], "base": [1, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57], "uncas": 1, "node_typ": [1, 2, 10, 57], "parquet": [1, 10, 57], "node_id_col": [1, 10, 57], "node_id": [1, 10, 57], "feature_col": [1, 10, 57], "feat": [1, 2, 10, 12, 32, 33, 55, 57], "feature_nam": [1, 2, 10, 57], "transform": 1, "tokenize_hf": [1, 10], "bert_model": [1, 10], "max_seq_length": [1, 10], "16": [1, 12, 32, 34], "we": [1, 2, 11, 12, 14, 24, 25, 32, 33, 35, 37, 38, 41, 48, 53, 54, 55, 56, 57], "gconstruct": [1, 57], "construct_graph": [1, 57], "conf": [1, 10, 57], "dir": [1, 10, 57], "acm_nc": [1, 2, 57], "num": [1, 2, 10, 11, 12, 42, 55, 56, 57, 58], "part": [1, 2, 10, 11, 12, 55, 57, 58], "outcom": [1, 55, 56, 58], "notic": [1, 2], "subject": [1, 2, 57], "three": [1, 2, 8, 10, 12, 29, 31, 54, 55, 56, 57, 58], "addit": [1, 10, 53, 55, 56], "input_id": 1, "attention_mask": 1, "token_type_id": 1, "which": [1, 2, 10, 12, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58], "yaml": [1, 12, 54, 55, 56, 58], "an": [1, 2, 12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 54, 55, 56, 58], "full": [1, 2, 12], "acm_lm_nc": 1, "locat": [1, 56], "use_your_own_data": [1, 57], "lm_model": 1, "node_lm_model": 1, "lm_type": 1, "model_nam": 1, "gradient_checkpoint": 1, "current": [1, 2, 10, 11, 12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 54, 57, 58], "version": [1, 2, 54, 55, 56, 57, 58], "sever": [1, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55], "repos": 1, "choos": [1, 10, 12], "roberta": [1, 10], "albert": [1, 10], "camembert": [1, 10], "erni": [1, 10], "ibert": [1, 10], "luke": [1, 10], "mega": [1, 10], "mpnet": [1, 10], "nezha": [1, 10], "qdqbert": [1, 10], "roc_bert": [1, 10], "valu": [1, 2, 10, 11, 12, 21, 24, 25, 26, 35, 56, 57], "must": [1, 2, 11, 12, 57], "one": [1, 2, 10, 11, 12, 35, 37, 38, 39, 55, 57, 58], "field": [1, 2, 10, 11, 12, 15, 16, 17, 19, 20, 55, 57], "here": [1, 2, 12, 55, 58], "abov": [1, 2, 54, 55, 56, 57, 58], "script": [1, 2, 11, 54, 56, 58], "ip_list": [1, 2, 55, 57, 58], "txt": [1, 2, 55, 57, 58], "standalon": [1, 53, 56], "touch": [1, 57, 58], "echo": [1, 57, 58], "127": [1, 54, 57, 58], "almost": 1, "except": [1, 2, 56], "gs_node_classif": [1, 55, 57, 58], "workspac": [1, 2, 10, 12, 55, 57, 58], "ip": [1, 2, 12, 54, 57, 58], "trainer": [1, 12, 14, 17, 18, 23, 46, 47, 48, 49, 50, 55, 57, 58], "server": [1, 2, 12, 55, 57, 58], "sampler": [1, 2, 12, 29, 30, 31, 46, 47, 48, 49, 55, 57, 58], "cf": [1, 55, 57, 58], "save": [1, 2, 11, 23, 29, 30, 31, 37, 38, 46, 47, 48, 49, 50, 55, 56, 57, 58], "comput": [1, 2, 10, 12, 17, 21, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 58], "And": [1, 2, 11, 12, 55, 56, 57], "concaten": 1, "togeth": [1, 12], "add": [1, 10, 11, 12, 32, 33, 42, 43, 56], "either": [1, 2, 10, 12, 46, 47, 48, 49, 50, 57], "determin": [1, 56], "mini": [1, 12, 29, 30, 31, 35, 36, 38, 39, 46, 47, 48, 49], "batch": [1, 12, 14, 17, 18, 29, 30, 31, 32, 34, 35, 36, 38, 39, 46, 47, 48, 49, 56], "per": [1, 12, 17, 25, 55, 57], "becaus": [1, 2, 11, 55, 56, 57, 58], "normal": [1, 2, 8, 10, 40, 41, 42, 43, 44, 45], "larg": [1, 2, 10, 12, 53, 56, 57], "could": [1, 2, 12, 46, 47, 48, 49, 50, 54, 55, 56, 57], "out": [1, 2], "oom": 1, "error": 1, "smaller": [1, 10], "number": [1, 2, 10, 11, 12, 17, 21, 22, 23, 24, 25, 26, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57], "reduc": [1, 12], "overal": [1, 12], "compar": [1, 2], "allow": [1, 10, 11, 12, 53], "anoth": [1, 54], "encod": [1, 10, 12, 32, 33, 42, 43, 45], "control": [1, 2, 11, 12], "whether": [1, 10, 14, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 35, 38, 39, 42, 43, 46, 47, 48, 49], "want": [1, 2, 4, 11, 12, 24, 25, 38, 53, 56, 57], "just": [1, 2, 41, 46, 47, 48, 49, 50], "awar": 1, "ha": [2, 10, 12, 21, 22, 23, 24, 25, 26, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58], "built": [2, 6, 53, 54, 55, 56, 57, 58], "rgat": [2, 57], "further": 2, "explor": 2, "differ": [2, 5, 6, 7, 8, 9, 12, 15, 16, 19, 20, 24, 25, 34, 55, 57], "eas": 2, "scalabl": [2, 53, 55], "accord": 2, "explain": [2, 10], "runnabl": 2, "hgt": 2, "befor": [2, 11, 12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 55, 56, 58], "make": [2, 11, 23, 35, 38, 39, 55, 56, 57, 58], "sure": [2, 23, 55, 56, 57, 58], "meet": 2, "framework": [2, 53, 56], "librari": [2, 56], "come": [2, 53], "distribut": [2, 7, 9, 10, 12, 19, 27, 28, 32, 33, 34, 43, 53, 54, 56, 58], "For": [2, 10, 11, 12, 41, 53, 54, 55, 56, 57], "reason": [2, 46, 47, 48, 49, 50], "via": [2, 12, 56], "guid": [2, 55], "commun": [2, 12, 55, 56], "materi": 2, "check": [2, 12, 21, 22, 23, 24, 25, 26, 54, 56, 57, 58], "exist": [2, 10, 57], "were": [2, 12, 56], "popular": 2, "academ": 2, "enterpris": [2, 53, 55], "level": [2, 10, 55], "rel": [2, 12], "lack": 2, "featur": [2, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 53, 56, 57, 58], "therefor": [2, 10, 55, 56, 57, 58], "implementor": 2, "feed": [2, 12], "entir": [2, 10, 46, 47, 48, 49, 50], "along": [2, 57], "its": [2, 10, 12, 56, 57, 58], "epoch": [2, 12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 55, 56, 57, 58], "deal": 2, "due": [2, 55], "limit": [2, 12, 55, 57], "slow": 2, "cpu": [2, 14, 15, 16, 17, 19, 20, 54, 56], "order": [2, 12, 56], "tackl": 2, "stochast": 2, "chapter": 2, "between": [2, 10, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55, 57, 58], "look": [2, 55, 56, 57], "end": [2, 12, 21, 22, 23, 24, 25, 26, 56], "_mb": 2, "string": [2, 10, 12, 21, 22, 23, 26, 56, 57], "like": [2, 12, 54, 55, 56, 57, 58], "dist": [2, 15, 16, 20], "graphsag": [2, 44, 45], "rest": [2, 56], "assum": [2, 12, 57], "execut": [2, 12, 56], "within": [2, 12, 37, 38, 55, 56, 57], "section": [2, 10, 55, 56], "prepar": [2, 15, 16, 19, 20, 53, 54, 55, 58], "plug": 2, "kei": [2, 10, 56, 57], "class": [2, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58], "gsgnnnodemodelbas": 2, "gsgnnedgemodelbas": [2, 47], "gsgnnlinkpredictionmodelbas": [2, 48], "inherit": [2, 37, 38], "depend": [2, 57, 58], "nn": [2, 12, 40, 41, 44], "modul": [2, 5, 8, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "def": 2, "__init__": 2, "self": [2, 12, 15, 16, 19, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "super": 2, "htg": 2, "forward": [2, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "out_kei": 2, "h": [2, 12, 42, 43, 45], "ntype": [2, 11, 12, 55, 57], "n_id": 2, "node_dict": 2, "f": [2, 54, 56], "gelu": 2, "adapt_w": 2, "inp": 2, "rang": [2, 53], "n_layer": 2, "gc": 2, "return": [2, 29, 31, 37, 42, 43, 45, 50], "origin": [2, 10, 11, 32, 33, 57], "Its": 2, "predict": [2, 8, 10, 11, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 29, 30, 31, 35, 36, 38, 39, 46, 47, 48, 49, 55, 56, 57, 58], "As": [2, 55, 56], "revis": 2, "shown": [2, 57, 58], "hgt_mb": 2, "block": [2, 10, 35, 36, 38, 39, 42, 43, 45], "n_feats_dict": 2, "out_ntyp": 2, "none": [2, 12, 14, 15, 16, 17, 18, 19, 20, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57], "emb_id": 2, "ntype_id_map": 2, "n_emb": 2, "ntype_emb": 2, "torch": [2, 12, 14, 17, 18, 28, 40, 41, 42, 43, 44, 45, 54], "tensor": [2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 57, 58], "num_nod": 2, "long": 2, "devic": [2, 14, 15, 16, 17, 18, 19, 20], "els": 2, "new": [2, 11, 12, 40, 41, 44, 54, 55, 56], "dictionari": [2, 10, 46, 47, 48, 49, 50, 57], "work": [2, 53, 54, 56], "pytorch": [2, 12, 15, 16, 19, 20, 46, 47, 48, 49, 50, 54, 58], "extens": 2, "node_feat": [2, 35, 36, 38, 39, 55, 57, 58], "edge_feat": [2, 10, 35, 36, 38, 39, 55, 57, 58], "label": [2, 10, 11, 12, 15, 16, 19, 20, 21, 22, 26, 35, 39, 55], "input_nod": [2, 15, 16, 19, 20, 32, 33, 34, 35, 36, 38, 39], "create_optim": [2, 38], "whose": [2, 10, 55, 57, 58], "associ": [2, 11, 57], "doe": [2, 12, 31, 37, 38, 55, 58], "NOT": [2, 10, 55, 57], "so": [2, 11, 12, 55, 56, 57], "leav": [2, 58], "option": [2, 10, 12, 29, 30, 31, 33, 40, 41, 42, 43, 44, 45, 56], "unlik": [2, 56], "common": [2, 57], "where": [2, 10, 12, 15, 16, 19, 20, 29, 30, 31, 35, 37, 38, 46, 47, 48, 49, 50, 54, 56], "logit": 2, "loss": [2, 12, 17, 35, 36, 39], "backward": 2, "oper": [2, 13, 54, 55, 56, 58], "instead": [2, 12, 37, 38, 55, 57], "outsid": 2, "our": [2, 56], "ad": [2, 12, 40, 41, 44], "gsmodel": 2, "compon": [2, 8], "_loss_fn": 2, "classifylossfunc": 2, "multilabel": [2, 12, 21, 57], "fals": [2, 12, 14, 17, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55, 57], "cuda": [2, 12], "expand": 2, "num_lay": [2, 12, 55, 57], "item": 2, "pred_loss": 2, "target_ntyp": [2, 12, 55, 57], "alreadi": [2, 11, 57], "classif": [2, 8, 10, 11, 21, 29, 31, 35, 55, 56, 58], "regress": [2, 8, 10, 11, 29, 31, 56, 57], "link": [2, 8, 11, 17, 24, 25, 30, 36, 48, 55, 56, 57], "easili": [2, 55], "import": [2, 3, 10, 55, 57], "free": [2, 53, 55], "even": [2, 12, 32, 33], "variabl": [2, 56], "result": [2, 8, 11, 12, 21, 22, 26, 29, 31, 35, 38, 39, 46, 47, 48, 49, 55, 56, 58], "second": [2, 58], "probabl": [2, 12], "return_proba": [2, 29, 31, 35, 38, 39, 46, 47, 49], "otherwis": [2, 11, 12, 35, 38, 39, 57], "raw": [2, 10, 55, 58], "purpos": 2, "code": [2, 3, 13, 53, 55, 56], "_": 2, "argmax": 2, "dim": 2, "softmax": 2, "defin": [2, 10, 11, 12, 21, 22, 23, 24, 25, 26, 35, 36, 37, 38, 39, 56, 58], "optim": [2, 12, 37, 38, 46, 47, 48, 49, 50, 58], "adam": [2, 12], "paramet": [2, 13, 57], "lr": [2, 12, 55, 57], "restore_model": [2, 37, 38, 46, 47, 48, 49, 50], "restore_model_path": [2, 12, 37, 38, 55, 57], "save_model": [2, 37, 38, 46, 47, 48, 49, 50], "model_path": [2, 37, 38, 46, 47, 48, 49, 50], "restor": [2, 37, 38, 46, 47, 48, 49, 50, 57, 58], "too": [2, 11, 57], "unimpl": 2, "readi": [2, 55], "next": [2, 57, 58], "trainingon": 2, "method": [2, 4, 6, 10, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 57, 58], "infernec": [2, 53], "proper": 2, "initi": [2, 3, 12, 55], "arg": 2, "ip_config": [2, 28], "backend": [2, 12, 28, 55, 56, 57], "gloo": [2, 12, 55, 56, 57], "address": [2, 54, 58], "machin": [2, 5, 6, 12, 13, 53, 54, 55, 56, 58], "cluster": [2, 12, 53, 56, 58], "find": [2, 53, 57], "quick": [2, 53, 55, 57], "load": [2, 12, 37, 38, 46, 47, 48, 49, 50, 55], "partit": [2, 10, 12, 13, 15, 16, 19, 20, 29, 30, 31, 54, 56], "gsgnnnodetraindata": 2, "gsgnnedgetraindata": [2, 48], "train_data": 2, "graph_nam": [2, 10, 15, 16, 19, 20], "part_config": [2, 15, 16, 19, 20], "train_ntyp": [2, 20], "node_feat_field": [2, 15, 16, 19, 20], "label_field": [2, 12, 15, 16, 19, 20, 55, 57], "consist": [2, 56], "label_col": [2, 10, 57], "gsgnnnodedataload": [2, 46, 49], "train_idx": [2, 57], "fanout": [2, 12, 14, 17, 18, 55, 56, 57], "batch_siz": [2, 12, 14, 17, 18, 55, 57], "train_task": [2, 14, 17, 18], "eval_dataload": 2, "val_idx": [2, 57], "eval_batch_s": [2, 12, 55], "test_dataload": 2, "test_idx": [2, 15, 19, 57], "henc": [2, 53, 57], "index": [2, 54, 57], "extract": [2, 15, 16, 19, 20, 57], "automat": [2, 55, 56, 57, 58], "construct": [2, 11, 13, 14, 17, 18, 55], "split_pct": [2, 10, 57], "properti": 2, "directli": [2, 3, 29, 30, 31, 48], "graph_data": 2, "scikit": 2, "creation": [2, 55], "easi": [2, 13, 55, 57, 58], "edge_dict": 2, "n_inp_dict": 2, "nfeat_dim": 2, "n_hid": 2, "hidden_s": [2, 12, 55, 57], "n_out": 2, "num_class": [2, 12, 55, 57], "num_head": [2, 12, 41, 42], "use_norm": 2, "alpha_l2norm": [2, 12, 57], "gsgnnnodepredictiontrain": [2, 46], "get_rank": [2, 3], "gsgnnaccevalu": 2, "eval_frequ": [2, 12, 21, 22, 23, 24, 25, 26], "eval_metr": [2, 12, 21, 22, 23, 26], "use_early_stop": [2, 12, 21, 22, 23, 24, 25, 26], "early_stop_burnin_round": [2, 12, 21, 22, 23, 24, 25, 26], "early_stop_round": [2, 12, 21, 22, 23, 24, 25, 26], "early_stop_strategi": [2, 12, 21, 22, 23, 24, 25, 26], "setup_evalu": 2, "progress": [2, 23], "gssagemakertasktrack": 2, "setup_task_track": 2, "help": [2, 11, 53, 56, 58], "metric": [2, 12, 21, 22, 23, 24, 25, 26, 57], "accuraci": [2, 12], "f1": 2, "mrr": [2, 12, 24, 25], "etc": [2, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 57], "select": [2, 10, 12, 25, 46, 47, 48, 49], "serv": [2, 53], "log": [2, 12, 58], "collector": 2, "last": [2, 12, 42, 43, 46, 47, 48, 49, 50, 57], "train_load": [2, 46, 47, 48, 49], "num_epoch": [2, 12, 46, 47, 48, 49, 55, 57], "val_load": [2, 46, 47, 48, 49], "test_load": [2, 46, 47, 48, 49], "save_model_path": [2, 12, 46, 47, 48, 49, 50, 55, 57], "use_mini_batch_inf": [2, 12, 29, 31, 46, 47, 48, 49, 57], "seen": 2, "artifact": [2, 12, 55, 56], "BUT": 2, "uncommonli": 2, "singl": [2, 10, 12, 53, 55, 56, 58], "frequent": 2, "occur": 2, "multipl": [2, 10, 12, 56, 57], "parallel": 2, "inner": [2, 41], "mechan": [2, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "One": [2, 12, 44], "wai": [2, 12, 24, 25, 56, 57], "solv": 2, "regular": [2, 12], "trainabl": [2, 32, 34], "blow": 2, "reg_loss": 2, "l2": [2, 12], "dens": [2, 12, 32, 33, 34, 37, 38], "d_para": 2, "squar": 2, "sum": [2, 11], "coeffici": [2, 12], "influenc": 2, "verbos": [2, 12, 55, 57], "local_rank": 2, "although": [2, 37, 38, 57], "anywher": 2, "A": [2, 8, 10, 12, 14, 17, 32, 33, 34, 37, 38, 46, 47, 48, 49, 50, 55, 56, 57], "__name__": 2, "__main__": 2, "argpars": 2, "argumentpars": 2, "add_argu": 2, "str": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "lambda": 2, "x": [2, 56], "default": [2, 10, 11, 12, 17, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 57, 58], "suppress": 2, "print": [2, 12], "int": [2, 14, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "rank": [2, 10, 23, 24, 25, 29, 30, 31, 46, 47, 48, 49, 50, 51], "v2": 2, "local": [2, 12, 15, 16, 19, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57], "accordingli": [2, 57], "variou": [2, 12, 53, 55], "perspect": 2, "gsf": [2, 55, 56, 57], "model_encoder_typ": [2, 12, 55, 57], "50": [2, 57], "256": [2, 57], "null": [2, 55, 57], "topk_model_to_sav": [2, 12, 46, 47, 48, 49, 50], "7": [2, 54, 56, 58], "save_embeds_path": [2, 57], "save_prediction_path": [2, 12, 29, 31], "hyperparam": [2, 55, 57], "dropout": [2, 12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 55, 57], "0001": [2, 12, 57], "20": [2, 12], "1024": [2, 12, 57], "wd_l2norm": [2, 12, 55, 57], "num_bas": [2, 12, 40, 43, 55, 57], "use_self_loop": [2, 12, 42, 43, 55, 57], "sparse_optimizer_lr": [2, 12, 57], "1e": [2, 55, 57], "use_node_embed": [2, 12, 32, 33, 55, 57], "node_classif": [2, 12, 55, 57], "14": [2, 57], "read": [2, 53, 57], "gsconfig": 2, "object": [2, 10, 14, 17, 18, 22, 23, 35, 36, 39, 43, 50], "parse_arg": 2, "still": 2, "let": [2, 12], "hgt_nc": 2, "relat": [2, 10, 12, 32, 33, 34, 40, 41, 42, 43, 54, 56, 57], "customized_model": 2, "head": [2, 12, 41, 42], "8": [2, 10, 11, 12, 57, 58], "try": 2, "readm": 2, "function": [3, 12, 22, 23, 24, 25, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 57], "us": [3, 7, 8, 9, 10, 11, 12, 13, 17, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 46, 47, 48, 49, 53, 54, 58], "graphstorm": [4, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58], "best": [4, 12, 25, 46, 47, 48, 49, 50, 53, 58], "practic": [4, 57], "extend": 4, "eval": [4, 12, 21, 22, 23, 24, 25, 26, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "gsgnninstanceevalu": [4, 21, 26], "abstract": [4, 11, 22, 23, 35, 36, 37, 38, 39], "learn": [5, 6, 12, 13, 53, 54, 56, 58], "assembl": [7, 9], "pipelin": [7, 9, 10, 53], "possibl": [7, 9, 55], "alwai": [7, 9], "convert": [8, 10, 57], "data": [8, 10, 12, 15, 16, 17, 19, 20, 24, 25, 30, 46, 47, 48, 49, 53, 54, 55], "textur": 8, "neural": [8, 12, 33, 58], "network": [8, 12, 33, 41, 54, 55, 56, 58], "decod": [8, 12, 24, 25, 37, 38, 46, 47, 48, 49, 50, 56], "traing": 9, "simulten": 10, "increas": [10, 12], "assign": [10, 54, 56, 57], "remap": 10, "boolean": [10, 11, 57], "decid": [10, 12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50], "renam": 10, "id": [10, 15, 16, 19, 20, 29, 30, 31, 32, 33, 34, 55, 56, 57, 58], "given": [10, 11, 12, 29, 30, 31, 46, 47, 48, 49, 50, 55], "distdgl": [10, 55], "accept": [10, 12], "separ": [10, 12], "space": [10, 12, 55, 57], "skip": 10, "nonexist": 10, "endpoint": 10, "don": 10, "t": [10, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 54], "ext": 10, "mem": 10, "directori": 10, "store": [10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 26, 29, 30, 31, 55, 56, 57], "suggest": [10, 12, 54, 55, 56, 57], "ssd": 10, "extern": 10, "size": [10, 12, 14, 17, 18, 27, 32, 33, 34, 40, 41, 42, 44, 52, 55, 56], "minim": 10, "dimens": [10, 12, 32, 33, 34, 42, 43, 45], "64": 10, "describ": [10, 56, 57], "get": [10, 15, 16, 19, 20, 23, 27, 32, 33, 34, 51, 52, 54], "highest": 10, "most": [10, 13, 57], "think": 10, "wildcard": 10, "file_nam": 10, "hdf5": [10, 57], "split": [10, 11, 55, 58], "similarli": [10, 57], "source_id_col": [10, 57], "sourc": [10, 56], "dest_id_col": [10, 57], "destin": 10, "element": [10, 12, 56, 57], "write": [10, 11, 53, 55, 57], "prefix": 10, "becom": [10, 57], "out_dtyp": 10, "cast": 10, "appli": [10, 12, 40], "now": [10, 12, 55], "flaot16": 10, "float32": 10, "actual": [10, 56], "task_typ": [10, 12, 57], "link_predict": [10, 12, 56], "80": 10, "vector": 10, "multi": [10, 12, 21, 41, 56], "dimension": 10, "reconstruct": 10, "matrix": 10, "larger": [10, 12, 54], "capac": [10, 55], "primit": 10, "integ": [10, 11, 12, 57], "float": [10, 11, 12, 21, 22, 23, 24, 25, 26, 32, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "point": [10, 12, 56], "text": [10, 11, 12, 32, 34, 53, 55], "dict": [10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "bert": [10, 11, 12, 53], "maxim": 10, "sequenc": [10, 57], "length": 10, "bert_hf": 10, "numer": 10, "max_min": 10, "val": [10, 11], "min": 10, "max": [10, 12, 46, 47, 48, 49], "maximum": [10, 29, 31, 35, 38, 39, 46, 47, 49], "minimum": 10, "max_min_norm": 10, "max_bound": 10, "min_bound": 10, "gauss": 10, "map": [10, 12, 14, 17, 29, 30, 31, 55, 57, 58], "gaussian": 10, "http": [10, 54, 56], "www": 10, "kaggl": 10, "com": [10, 54, 56], "c": 10, "porto": 10, "seguro": 10, "safe": 10, "driver": 10, "discuss": 10, "44629": 10, "250927": 10, "rank_gauss": 10, "epsilon": 10, "inf": [10, 12], "categor": 10, "categori": [10, 55], "to_categor": 10, "By": [10, 12, 17, 30, 48, 56], "output_format": 10, "dglgraph": [10, 15, 16, 20, 35, 36], "meta": [10, 58], "after": [10, 12, 40, 55, 56, 58], "node_map": [10, 55, 57, 58], "pt": [10, 55, 57, 58], "edge_map": [10, 55, 57, 58], "partitoin": 10, "1d": 10, "shuffl": 10, "record": [10, 55, 57], "ogrigin": [10, 55, 57], "move": [10, 55, 57], "delet": [10, 55, 57], "paper_id": 10, "dummi": 10, "paper_nod": 10, "paper_titl": 10, "512": 10, "src_paper_id": 10, "dest_paper_id": 10, "cite": [10, 57], "paer": 10, "citation_tim": 10, "who": [11, 37, 38, 53, 57], "familiar": [11, 53, 57], "know": 11, "filepath": [11, 55, 57, 58], "far": 11, "nlabel": [11, 55, 57], "nodetyp": 11, "labelnam": [11, 57], "etyp": [11, 12, 24, 25, 55], "canon": [11, 12, 25, 57], "src_ntype": 11, "dst_ntype": 11, "elabel": 11, "pct": [11, 55], "percentag": 11, "train_pct": 11, "val_pct": 11, "retain": 11, "keep": [11, 12, 55], "rememb": [11, 57], "might": [11, 57], "nois": 11, "queri": [11, 12], "click": [11, 12], "asin": [11, 12], "purchas": 11, "rev": [11, 12], "dozen": 12, "document": [12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 54, 55, 56], "updat": [12, 54], "pars": 12, "overwrit": 12, "consid": 12, "hint": 12, "absolut": [12, 54, 56], "thread": 12, "omp": 12, "host": [12, 54, 55, 56], "usernam": [12, 56], "issu": [12, 55], "structur": [12, 35, 36, 39, 55, 57, 58], "csr": 12, "csc": [12, 55], "coo": [12, 55], "env": [12, 56], "ld_library_path": 12, "nccl_debug": 12, "extra_env": 12, "usr": 12, "lib64": 12, "info": 12, "No": 12, "gnn": [12, 17, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 57, 58], "involv": 12, "configuraiton": 12, "nccl": 12, "non": [12, 57], "compos": 12, "convolut": [12, 40, 44], "attent": [12, 41, 42], "mlp": 12, "learnabl": [12, 32, 33, 57], "final": 12, "project": [12, 32, 33], "node_feat_nam": [12, 27, 57], "fname": 12, "b": 12, "ntype0": 12, "feat0": 12, "ntype1": 12, "feata": 12, "note": [12, 23], "charact": 12, "put": [12, 55, 57], "start": [12, 21, 22, 23, 24, 25, 26, 55, 57], "hyphon": 12, "attach": 12, "mean": [12, 44, 45, 46, 47, 48, 49, 50], "hidden": [12, 42, 43, 45, 56], "128": [12, 55, 56, 57], "special": 12, "filter": 12, "weight": [12, 17, 40], "matric": 12, "share": [12, 56], "divis": 12, "statu": [12, 58], "fine": 12, "tune": 12, "see": [12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 56], "retriev": [12, 15, 16, 19, 20], "restore_optimizer_path": 12, "checkpoint": [12, 37, 38], "save_embed_path": [12, 29, 30, 31, 55], "save_model_frequ": [12, 46, 47, 48, 49], "iter": [12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 56], "posit": [12, 17, 24, 25, 36, 57], "n": [12, 46, 47, 48, 49, 54], "everi": [12, 37, 38], "1000": 12, "frequenc": [12, 21, 22, 23, 24, 25, 26], "top": [12, 46, 47, 48, 49, 50], "disk": [12, 56], "huge": 12, "k": [12, 46, 47, 48, 49, 50], "topk": 12, "save_perf_results_path": [12, 46, 47, 48, 49], "perf": 12, "task_track": 12, "tracker": 12, "formal": [12, 56, 57], "report": 12, "sagemaker_task_track": 12, "captur": 12, "those": [12, 56], "through": [12, 56], "sagemak": [12, 53, 54], "monitor": 12, "analyz": 12, "job": [12, 55, 56, 57, 58], "amazon": [12, 53, 54], "cloudwatch": 12, "log_report_frequ": 12, "graphstom": 12, "restore_model_lay": 12, "graphml": 12, "equal": [12, 43, 45], "ith": 12, "being": 12, "0th": 12, "1st": [12, 46, 47, 48, 49, 50], "etype2": 12, "etype3": 12, "etype1": 12, "th": 12, "srcntype": 12, "dstntype": 12, "5": [12, 14, 17, 18, 55], "rate": [12, 40, 41, 44], "max_grad_norm": [12, 46, 47, 48, 49], "gradient": [12, 46, 47, 48, 49], "clip": [12, 46, 47, 48, 49], "magnitud": 12, "prevent": 12, "explod": 12, "stabil": [12, 46, 47, 48, 49], "converg": 12, "grad": [12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "norm": [12, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "grad_norm_typ": [12, 46, 47, 48, 49], "global": 12, "multipli": 12, "suppos": [12, 56], "2048": 12, "spars": [12, 32, 33, 34, 37, 38], "decai": 12, "wd": 12, "l2norm": 12, "re": 12, "scale": [12, 55], "regularization_loss": 12, "00001": 12, "alpha": 12, "num_ffn_layers_in_input": [12, 33], "greater": 12, "zero": 12, "feedforward": [12, 33], "ffn": 12, "num_ffn_layers_in_gnn": [12, 40, 41, 42, 43, 44, 45], "num_ffn_layers_in_decod": 12, "effect": [12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "mlpedgedecod": 12, "mlpefeatedgedecod": 12, "input_activ": 12, "activ": [12, 32, 33, 40, 41, 42, 43, 44, 45], "relu": [12, 33, 40, 41, 44, 45], "gnn_norm": 12, "batchnorm": [12, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "layernorm": 12, "finish": [12, 58], "exit": [12, 54, 58], "earlier": 12, "trigger": 12, "criteria": 12, "round": [12, 21, 22, 23, 24, 25, 26], "call": [12, 22, 23, 24, 25, 37, 38, 56], "strategi": [12, 21, 22, 23, 24, 25, 26], "consecutive_increas": [12, 21, 22, 23, 24, 25, 26], "score": [12, 21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50], "averag": [12, 41], "average_increas": [12, 21, 22, 23, 24, 25, 26], "consecut": 12, "decreas": 12, "burn": [12, 21, 22, 23, 24, 25, 26], "period": 12, "100": [12, 57], "burnin": 12, "enabl": [12, 53], "speedup": 12, "10000": 12, "eval_fanout": [12, 55], "wast": 12, "resourc": [12, 55, 56, 58], "prefer": [12, 57], "recomput": 12, "thousand": 12, "middl": [12, 57], "sy": 12, "maxsiz": 12, "system": [12, 54, 56], "no_valid": [12, 55], "lm_tune_lr": [12, 57], "lm_train_nod": 12, "lm_infer_batch_s": [12, 32, 34], "32": 12, "freeze_lm_encoder_epoch": 12, "warmup": 12, "freez": [12, 46, 47, 48, 49], "rich": 12, "node_regress": 12, "edge_classif": 12, "edge_regress": 12, "treat": [12, 32], "major": 12, "precision_recal": 12, "roc_auc": 12, "f1_score": 12, "per_class_f1_scor": 12, "rmse": 12, "mse": [12, 26], "mae": 12, "access": [12, 55, 56], "target_etyp": [12, 57], "color": 12, "cardin": 12, "multilabel_weight": 12, "bcewithlogitsloss": 12, "pos_weight": 12, "repres": 12, "answer": 12, "imbalance_class_weight": 12, "manual": 12, "rescal": 12, "imbalanc": 12, "crossentropyloss": 12, "imbal": 12, "movi": 12, "search": [12, 57], "src_node_typ": 12, "relation_typ": 12, "dst_node_typ": 12, "remove_target_edge_typ": [12, 14], "reverse_rel": 12, "tail": 12, "reverse_edge_type_map": 12, "both": [12, 53, 54, 57], "certain": [12, 23, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "train_etyp": [12, 16, 57], "contrast": 12, "decoder_typ": 12, "densebidecod": 12, "mlpdecod": 12, "bi": 12, "linear": [12, 32, 33, 40], "gcmc": 12, "simpli": 12, "multilay": 12, "perceptron": 12, "num_decoder_basi": 12, "basi": 12, "decoder_edge_feat": [12, 14], "enhanc": [12, 53], "Or": 12, "count": [12, 56], "price": 12, "fanm": 12, "eval_etyp": [12, 15, 16, 57], "downstream": [12, 57], "care": [12, 37, 38], "about": [12, 55, 57, 58], "train_negative_sampl": 12, "neg": [12, 17, 24, 25, 36, 57], "uniform": 12, "joint": 12, "all_etype_uniform": 12, "all_etype_joint": 12, "eval_negative_sampl": 12, "num_negative_edg": [12, 17], "num_negative_edges_ev": [12, 24, 25], "lp_decoder_typ": [12, 24, 25, 55], "dot_product": [12, 55, 56], "distmult": 12, "lp": [12, 55, 56], "gamma": 12, "margin": 12, "12": [12, 55], "lp_loss_func": 12, "builtin": 12, "cross_entropi": 12, "logsigmoid": 12, "func": [12, 32, 33], "lp_edge_weight_for_loss": [12, 17], "rel0": 12, "weight0": 12, "rel1": 12, "weight1": 12, "design": [13, 53, 57, 58], "fulfil": 13, "target_idx": [14, 17, 18], "construct_feat_ntyp": [14, 17, 18], "construct_feat_fanout": [14, 17, 18], "minibatch": [14, 17, 18], "gsgnnedgedata": [14, 15, 16, 17, 24, 25], "bool": [14, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49], "edge_feat_field": [15, 16, 19, 20], "tupl": [15, 16, 25], "evalu": [15, 16, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58], "get_edge_feat": [15, 16, 19, 20], "input_edg": [15, 16, 19, 20], "get_label": [15, 16, 19, 20], "eid": [15, 16], "get_node_feat": [15, 16, 19, 20], "prepare_data": [15, 16, 19, 20], "_test_idx": [15, 16, 19], "empti": [15, 16, 19], "_train_idx": 16, "_val_idx": 16, "edge_mask_for_gnn_embed": [17, 30, 48], "uniformli": 17, "leak": [17, 30], "gsgnnnodedata": [18, 19, 20], "eval_ntyp": [19, 20], "nid": [19, 20], "seed": [19, 20], "distgraph": [19, 27, 32, 33, 34, 43], "earli": [21, 22, 23, 24, 25, 26], "stop": [21, 22, 23, 24, 25, 26, 58], "condit": [21, 22, 23, 24, 25, 26], "compute_scor": [21, 22, 24, 25, 26], "pred": [21, 22, 26], "redict": [21, 22, 26], "do_ev": [21, 22, 23, 24, 25, 26], "total_it": [21, 22, 23, 24, 25, 26], "epoch_end": [21, 22, 23, 24, 25, 26], "total": [21, 22, 23, 24, 25, 26, 43, 45, 46, 47, 48, 49], "been": [21, 22, 23, 24, 25, 26, 46, 47, 48, 49, 50, 54, 55, 57], "taken": [21, 22, 23, 24, 25, 26], "val_pr": [21, 22, 26], "test_pr": [21, 22, 26], "val_label": [21, 22, 26], "test_label": [21, 22, 26], "inter": [21, 22, 23, 24, 25, 26, 56], "templat": [22, 23], "gsgnnlinkpredictionmodel": [22, 23, 24, 25], "evalut": [22, 23, 24, 25], "eval_scor": [22, 23], "test_scor": [22, 23, 24, 25], "val_scor": [23, 24, 25, 46, 47, 48, 49, 50], "gsgnnlpevalu": 24, "todo": [24, 25], "futur": [24, 25], "accur": [24, 25], "val_mrr": [24, 25], "test_mrr": [24, 25], "major_etyp": 25, "gsgnnmrrlpevalu": 25, "context": 28, "gsinfer": [29, 30, 31], "highlevel": [29, 30, 31, 48], "wrapper": [29, 30, 31, 48], "gsgnnnodemodel": [29, 30, 31, 46, 49], "loader": [29, 30, 31], "node_id_mapping_fil": [29, 30, 31], "edge_id_mapping_fil": 29, "thing": [29, 30, 31], "gsedgedataload": 29, "algorithm": [29, 30, 31], "gsgnndata": 30, "gsgnnlinkpredictiontestdataload": 30, "gsnodedataload": [31, 46, 47, 48, 49], "node_lm_config": [32, 34], "feat_siz": [32, 33], "embed_s": [32, 33], "num_train": [32, 34], "gsnodeencoderinputlay": 32, "languag": [32, 33, 34, 46, 47, 48, 49], "heterogen": [32, 33, 34, 57], "textual": 32, "combin": [32, 33], "static": [32, 34], "individu": [32, 33], "avail": [32, 33, 55, 57], "particular": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "affect": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "equival": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "disabl": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "doc": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 56], "comparison": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "confus": [32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45], "input_feat": [32, 33, 34], "get_general_dense_paramet": [32, 33, 34], "get_lm_dense_paramet": [32, 33, 34], "get_sparse_param": [32, 33, 34], "force_no_embed": 33, "ffn_activ": [33, 40, 44], "gsnodeinputlay": [33, 34], "forc": 33, "callabl": [33, 40, 41, 44], "gslmnodeencoderinputlay": 34, "ignor": [34, 37, 38, 57], "interfac": [35, 36, 39, 53], "main": [35, 36, 39], "batch_graph": 35, "dglblock": [35, 36, 38, 39], "pos_graph": 36, "neg_graph": 36, "util": [37, 56], "overridden": [37, 38], "subclass": [37, 38], "recip": [37, 38], "afterward": [37, 38], "sinc": [37, 38], "former": [37, 38], "regist": [37, 38], "hook": [37, 38], "while": [37, 38], "latter": [37, 38], "silent": [37, 38], "model_layer_to_load": [37, 38, 46, 47, 48, 49, 50], "state": [37, 38, 46, 47, 48, 49, 50], "gsgnnmodelbas": 38, "gsgnnnodemodelinterfac": 38, "in_feat": [40, 41, 44], "out_feat": [40, 41, 44], "rel_nam": [40, 41], "bia": [40, 41, 44], "self_loop": [40, 41], "ngnn": [40, 41, 42, 43, 44, 45], "ffn_actic": [40, 41, 44], "dglheterograph": [40, 41, 42, 44], "fnn_activ": 41, "aggreg": 41, "cross": 41, "h_dim": [42, 43, 45], "out_dim": [42, 43, 45], "num_hidden_lay": [42, 43, 45], "last_layer_act": [42, 43], "graphconvencod": [42, 43, 45], "mfg": [42, 43, 45], "conv": [43, 45], "selfloop": 43, "aggregator_typ": [44, 45], "gcn": 44, "pool": 44, "lstm": 44, "_n": [44, 45], "total_step": [46, 47, 48, 49], "validi": [46, 47, 48, 49], "freeze_input_layer_epoch": [46, 47, 48, 49], "commonli": [46, 47, 48, 49, 54, 57], "ensur": [46, 47, 48, 49], "get_best_model_path": [46, 47, 48, 49, 50], "remove_saved_model": [46, 47, 48, 49, 50], "previous": [46, 47, 48, 49, 50, 56], "save_topk_model": [46, 47, 48, 49, 50], "i_th": [46, 47, 48, 49, 50], "epoch_th": [46, 47, 48, 49, 50], "evluat": [46, 47, 48, 49, 50], "gsgnntrainer": [47, 48, 49], "gsgnnedgedataload": 47, "gsgnnlinkpredictiondataload": 48, "gsgnn": 50, "gsgnnmodel": 50, "simplifi": 53, "develop": [53, 54, 56], "deploy": 53, "industri": 53, "measur": 53, "billon": 53, "collect": 53, "elimin": 53, "moreov": 53, "customiz": 53, "offer": 53, "program": 53, "custom": [53, 54, 56], "manner": 53, "bring": [53, 56], "beginn": 53, "cover": 53, "build": [53, 55, 57], "imag": [53, 55, 57], "successfulli": [53, 54, 55, 56], "usag": 53, "achiev": [53, 58], "experienc": [53, 57], "wish": 53, "veri": [53, 57], "modifi": 53, "boost": 53, "page": [53, 57], "softwar": 53, "redistribut": 53, "term": 53, "apach": 53, "licens": 53, "join": 53, "u": [53, 56], "github": [53, 54, 56], "packcag": 54, "signl": 54, "good": 54, "linux": [54, 56], "o": 54, "ubuntu": [54, 55], "04": 54, "python": [54, 56, 57, 58], "nvidia": [54, 55, 56], "pip3": 54, "v1": 54, "13": 54, "core": 54, "cu116": 54, "url": [54, 56], "download": [54, 55], "org": 54, "whl": 54, "cu117": 54, "ai": 54, "wheel": 54, "repo": 54, "html": 54, "intern": 54, "keygen": 54, "rsa": 54, "id_rsa": 54, "cat": 54, "pub": 54, "authorized_kei": 54, "everyth": 54, "right": 54, "enter": 54, "shell": 54, "facilit": 54, "graphstrom": 54, "training_script": [54, 55, 56, 58], "inference_script": 54, "examplar": 54, "obtain": 54, "git": [54, 56], "awslab": [54, 56], "aw": [54, 55, 56, 58], "ec2": [54, 55, 56], "without": [54, 55, 56], "preinstal": 54, "sudo": 54, "apt": 54, "io": 54, "deep": [54, 56], "ami": 54, "bash": [54, 55, 56], "build_docker_oss4loc": 54, "sh": [54, 56], "tag": [54, 56], "l": [54, 56], "succe": [54, 55], "previou": [54, 55], "v": [54, 55], "dev": [54, 55], "shm": [54, 55], "d": [54, 55], "daemon": [54, 55], "connect": [54, 55], "exec": [54, 55], "bin": [54, 55, 58], "prompt": 54, "root": 54, "ogb": [55, 56], "enough": 55, "short": 55, "instal": [55, 56], "ef": 55, "instruct": 55, "digitalocean": 55, "linod": 55, "tecmint": 55, "howtoforg": 55, "client": 55, "filesystem": 55, "path_to_data": [55, 56], "privat": [55, 58], "insteand": 55, "public": [55, 57], "constraint": 55, "password": [55, 56], "open": 55, "pick": 55, "p": [55, 58], "172": 55, "38": 55, "143": 55, "login": [55, 56], "65536": 55, "gen_mag_dataset": 55, "savepath": 55, "partition_graph_lp": [55, 57], "balanc": 55, "ogbn_mag_lp_3p": [55, 56], "diagram": [55, 57], "part0": [55, 57, 58], "part1": 55, "part2": 55, "37": 55, "11": 55, "221": 55, "gs_link_predict": 55, "gsgnn_lp": [55, 56], "mag_lp": [55, 56], "That": [55, 58], "conduct": 55, "tra": 55, "collabor": 55, "capabl": [55, 56], "hardli": 55, "nearli": 55, "800gb": 55, "r6a": 55, "32xlarg": 55, "1tb": 55, "least": 55, "300gb": 55, "better": 55, "ntask": 55, "ogbn_dataset": 55, "partition_graph": [55, 57, 58], "ogbn_papers100m_3p": 55, "hour": 55, "around": [55, 58], "700gb": 55, "peak": 55, "copi": [55, 56, 57], "ident": 55, "ogbn_papers100m_nc_p3": 55, "evaluation_frequ": 55, "500": 55, "mini_batch_inf": 55, "001": 55, "15": 55, "sparse_optim": 55, "six": [55, 57], "minut": 55, "g4dn": [55, 58], "12xlarg": [55, 58], "48": 55, "intel": 55, "xeon": 55, "vcpu": 55, "t4": 55, "192gb": 55, "45": 55, "ml": 56, "devop": 56, "elast": 56, "registri": 56, "s3": 56, "guidelin": 56, "byoc": 56, "account": 56, "ak": 56, "secur": 56, "sk": 56, "authent": 56, "cli": 56, "pull": 56, "region": 56, "east": 56, "stdin": 56, "763104351884": 56, "dkr": 56, "amazonaw": 56, "build_docker_sagemak": 56, "docker_typ": 56, "docker_nam": 56, "docker_tag": 56, "uri": 56, "aws_account_id": 56, "888888888888": 56, "sm": 56, "push": 56, "submit": 56, "api": 56, "request": 56, "properli": 56, "c5": 56, "xlarg": 56, "experi": 56, "deploi": 56, "mainli": 56, "tester": 56, "simul": 56, "storag": 56, "introduc": 56, "bucket": 56, "cp": 56, "recurs": 56, "path_to_training_config": 56, "diffenc": 56, "launch_train": 56, "amazon_ecr_image_uri": 56, "entri": 56, "train_entri": 56, "role": 56, "role_arn": 56, "path_to_save_trained_model": 56, "ogbn": [56, 58], "arn": 56, "iam": 56, "account_id": 56, "amazonsagemak": 56, "executionrol": 56, "20220627t143571": 56, "launch_inf": 56, "infer_entri": 56, "path_to_save_generated_node_embed": 56, "path_to_save_prediction_result": 56, "difffer": 56, "plu": 56, "999": 56, "emul": 56, "never": 56, "offici": 56, "great": 56, "intro": 56, "worker": 56, "virtual": 56, "close": 56, "pythonpath": 56, "export": 56, "path_to_graphstorm": 56, "spin": 56, "resembl": 56, "gf": 56, "algo": 56, "container_nam": 56, "hostnam": 56, "xxx": 56, "sm_training_env": 56, "current_host": 56, "world_siz": 56, "master_addr": 56, "aws_region": 56, "west": 56, "working_dir": 56, "opt": 56, "entrypoint": 56, "generate_sagemaker_docker_compos": 56, "pyyaml": 56, "commnd": 56, "secret": 56, "session": 56, "toekn": 56, "sagemaker_train": 56, "sagemaker_inf": 56, "logic": [56, 57], "aws_access_kei": 56, "aws_secret_access_kei": 56, "aws_session_token": 56, "graphstorm_docker_imag": 56, "map_lp": 56, "luanch": 56, "var": 56, "interact": 56, "assess": 56, "down": 56, "big": 57, "row": [57, 58], "what": 57, "succeed": 57, "author_writing_pap": 57, "paper_cited_pap": 57, "paper_citing_pap": 57, "paper_i": 57, "about_subject": 57, "paper_written": 57, "by_author": 57, "subject_has_pap": 57, "examplari": 57, "source_id": 57, "dest_id": 57, "written": 57, "simpl": 57, "custom_split_filenam": 57, "49": 57, "99": 57, "30": 57, "59": 57, "60": 57, "69": 57, "70": 57, "51": 57, "52": 57, "correspondingli": 57, "match": 57, "correct": [57, 58], "eventu": 57, "billion": 57, "heterograph": 57, "nodetypenam": 57, "featurenam": 57, "nodefeaturetensor": 57, "edgetypenam": 57, "edgefeaturetensor": 57, "predictnodetypenam": 57, "nodelabeltensor": 57, "predictedgetypenam": 57, "edgelabeltensor": 57, "trainingnodeindexetensor": 57, "validationnodeindexetensor": 57, "testnodeindexetensor": 57, "save_graph": 57, "convent": 57, "datasetnam": 57, "give": [57, 58], "ogbn_mag": 57, "acm_dgl": 57, "reus": 57, "forget": 57, "doubl": 57, "recommend": 57, "highli": 57, "truli": 57, "besid": 57, "white": 57, "rather": 57, "200": 57, "bert_infer_b": 57, "quickli": 58, "nc": 58, "ogbn_arxiv_nc_1p": 58, "sub": 58, "gsgnn_np": 58, "arxiv_nc": 58, "node_sparse_emb": 58, "9": 58, "learnt": 58, "gprahstorm": 58, "ago": 58}, "objects": {"graphstorm.dataloading": [[14, 0, 1, "", "GSgnnEdgeDataLoader"], [15, 0, 1, "", "GSgnnEdgeInferData"], [16, 0, 1, "", "GSgnnEdgeTrainData"], [17, 0, 1, "", "GSgnnLinkPredictionDataLoader"], [18, 0, 1, "", "GSgnnNodeDataLoader"], [19, 0, 1, "", "GSgnnNodeInferData"], [20, 0, 1, "", "GSgnnNodeTrainData"]], "graphstorm.dataloading.GSgnnEdgeInferData": [[15, 1, 1, "", "get_edge_feats"], [15, 1, 1, "", "get_labels"], [15, 1, 1, "", "get_node_feats"], [15, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnEdgeTrainData": [[16, 1, 1, "", "get_edge_feats"], [16, 1, 1, "", "get_labels"], [16, 1, 1, "", "get_node_feats"], [16, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnNodeInferData": [[19, 1, 1, "", "get_edge_feats"], [19, 1, 1, "", "get_labels"], [19, 1, 1, "", "get_node_feats"], [19, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnNodeTrainData": [[20, 1, 1, "", "get_edge_feats"], [20, 1, 1, "", "get_labels"], [20, 1, 1, "", "get_node_feats"], [20, 1, 1, "", "prepare_data"]], "graphstorm.eval": [[21, 0, 1, "", "GSgnnAccEvaluator"], [22, 0, 1, "", "GSgnnInstanceEvaluator"], [23, 0, 1, "", "GSgnnLPEvaluator"], [24, 0, 1, "", "GSgnnMrrLPEvaluator"], [25, 0, 1, "", "GSgnnPerEtypeMrrLPEvaluator"], [26, 0, 1, "", "GSgnnRegressionEvaluator"]], "graphstorm.eval.GSgnnAccEvaluator": [[21, 1, 1, "", "compute_score"], [21, 1, 1, "", "do_eval"], [21, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnInstanceEvaluator": [[22, 1, 1, "", "compute_score"], [22, 1, 1, "", "do_eval"], [22, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnLPEvaluator": [[23, 1, 1, "", "do_eval"], [23, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnMrrLPEvaluator": [[24, 1, 1, "", "compute_score"], [24, 1, 1, "", "do_eval"], [24, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator": [[25, 1, 1, "", "compute_score"], [25, 1, 1, "", "do_eval"], [25, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnRegressionEvaluator": [[26, 1, 1, "", "compute_score"], [26, 1, 1, "", "do_eval"], [26, 1, 1, "", "evaluate"]], "graphstorm.gsf": [[27, 2, 1, "", "get_feat_size"], [28, 2, 1, "", "initialize"]], "graphstorm.inference": [[29, 0, 1, "", "GSgnnEdgePredictionInfer"], [30, 0, 1, "", "GSgnnLinkPredictionInfer"], [31, 0, 1, "", "GSgnnNodePredictionInfer"]], "graphstorm.inference.GSgnnEdgePredictionInfer": [[29, 1, 1, "", "infer"]], "graphstorm.inference.GSgnnLinkPredictionInfer": [[30, 1, 1, "", "infer"]], "graphstorm.inference.GSgnnNodePredictionInfer": [[31, 1, 1, "", "infer"]], "graphstorm.model": [[32, 0, 1, "", "GSLMNodeEncoderInputLayer"], [33, 0, 1, "", "GSNodeEncoderInputLayer"], [34, 0, 1, "", "GSPureLMNodeInputLayer"], [35, 0, 1, "", "GSgnnEdgeModelInterface"], [36, 0, 1, "", "GSgnnLinkPredictionModelInterface"], [37, 0, 1, "", "GSgnnModelBase"], [38, 0, 1, "", "GSgnnNodeModelBase"], [39, 0, 1, "", "GSgnnNodeModelInterface"], [40, 0, 1, "", "RelGraphConvLayer"], [41, 0, 1, "", "RelationalAttLayer"], [42, 0, 1, "", "RelationalGATEncoder"], [43, 0, 1, "", "RelationalGCNEncoder"], [44, 0, 1, "", "SAGEConv"], [45, 0, 1, "", "SAGEEncoder"]], "graphstorm.model.GSLMNodeEncoderInputLayer": [[32, 1, 1, "", "eval"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_general_dense_parameters"], [32, 1, 1, "", "get_lm_dense_parameters"], [32, 1, 1, "", "get_sparse_params"]], "graphstorm.model.GSNodeEncoderInputLayer": [[33, 1, 1, "", "eval"], [33, 1, 1, "", "forward"], [33, 1, 1, "", "get_general_dense_parameters"], [33, 1, 1, "", "get_lm_dense_parameters"], [33, 1, 1, "", "get_sparse_params"]], "graphstorm.model.GSPureLMNodeInputLayer": [[34, 1, 1, "", "eval"], [34, 1, 1, "", "forward"], [34, 1, 1, "", "get_general_dense_parameters"], [34, 1, 1, "", "get_lm_dense_parameters"], [34, 1, 1, "", "get_sparse_params"]], "graphstorm.model.GSgnnEdgeModelInterface": [[35, 1, 1, "", "forward"], [35, 1, 1, "", "predict"]], "graphstorm.model.GSgnnLinkPredictionModelInterface": [[36, 1, 1, "", "forward"]], "graphstorm.model.GSgnnModelBase": [[37, 1, 1, "", "eval"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "restore_model"], [37, 1, 1, "", "save_model"]], "graphstorm.model.GSgnnNodeModelBase": [[38, 1, 1, "", "eval"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "predict"], [38, 1, 1, "", "restore_model"], [38, 1, 1, "", "save_model"]], "graphstorm.model.GSgnnNodeModelInterface": [[39, 1, 1, "", "forward"], [39, 1, 1, "", "predict"]], "graphstorm.model.RelGraphConvLayer": [[40, 1, 1, "", "eval"], [40, 1, 1, "", "forward"]], "graphstorm.model.RelationalAttLayer": [[41, 1, 1, "", "eval"], [41, 1, 1, "", "forward"]], "graphstorm.model.RelationalGATEncoder": [[42, 1, 1, "", "eval"], [42, 1, 1, "", "forward"]], "graphstorm.model.RelationalGCNEncoder": [[43, 1, 1, "", "eval"], [43, 1, 1, "", "forward"]], "graphstorm.model.SAGEConv": [[44, 1, 1, "", "eval"], [44, 1, 1, "", "forward"]], "graphstorm.model.SAGEEncoder": [[45, 1, 1, "", "eval"], [45, 1, 1, "", "forward"]], "graphstorm.trainer": [[46, 0, 1, "", "GLEMNodePredictionTrainer"], [47, 0, 1, "", "GSgnnEdgePredictionTrainer"], [48, 0, 1, "", "GSgnnLinkPredictionTrainer"], [49, 0, 1, "", "GSgnnNodePredictionTrainer"], [50, 0, 1, "", "GSgnnTrainer"]], "graphstorm.trainer.GLEMNodePredictionTrainer": [[46, 1, 1, "", "eval"], [46, 1, 1, "", "fit"], [46, 1, 1, "", "get_best_model_path"], [46, 1, 1, "", "remove_saved_model"], [46, 1, 1, "", "restore_model"], [46, 1, 1, "", "save_model"], [46, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnEdgePredictionTrainer": [[47, 1, 1, "", "eval"], [47, 1, 1, "", "fit"], [47, 1, 1, "", "get_best_model_path"], [47, 1, 1, "", "remove_saved_model"], [47, 1, 1, "", "restore_model"], [47, 1, 1, "", "save_model"], [47, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnLinkPredictionTrainer": [[48, 1, 1, "", "eval"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "get_best_model_path"], [48, 1, 1, "", "remove_saved_model"], [48, 1, 1, "", "restore_model"], [48, 1, 1, "", "save_model"], [48, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnNodePredictionTrainer": [[49, 1, 1, "", "eval"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "get_best_model_path"], [49, 1, 1, "", "remove_saved_model"], [49, 1, 1, "", "restore_model"], [49, 1, 1, "", "save_model"], [49, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnTrainer": [[50, 1, 1, "", "get_best_model_path"], [50, 1, 1, "", "remove_saved_model"], [50, 1, 1, "", "restore_model"], [50, 1, 1, "", "save_model"], [50, 1, 1, "", "save_topk_models"]], "graphstorm.utils": [[51, 2, 1, "", "get_rank"], [52, 2, 1, "", "get_world_size"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"graphstorm": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 27, 28, 51, 52, 53, 54, 55, 56], "advanc": [0, 53], "usag": 0, "prevent": 0, "inform": [0, 57], "leakag": 0, "link": [0, 12], "predict": [0, 12], "speedup": 0, "train": [0, 2, 12, 55, 56, 57, 58], "us": [1, 2, 55, 56, 57], "text": 1, "node": [1, 10, 12, 57], "featur": [1, 10], "prepar": [1, 56, 57], "raw": [1, 57], "data": [1, 2, 56, 57, 58], "construct": [1, 10, 57], "graph": [1, 2, 10, 11, 53, 55, 56, 57], "languag": [1, 12], "model": [1, 2, 4, 8, 12], "configur": [1, 2, 10, 12, 13, 54, 55, 57], "launch": [1, 12, 55, 56, 57, 58], "trainig": 1, "without": 1, "fine": 1, "tune": 1, "bert": 1, "both": 1, "gnn": [1, 2], "onli": 1, "your": [2, 57], "own": [2, 57], "prerequisit": [2, 54, 56], "dgl": [2, 57], "implement": 2, "modifi": [2, 57], "you": 2, "mini": 2, "batch": 2, "infer": [2, 7, 12, 56, 58], "learn": 2, "how": 2, "run": [2, 56], "docker": [2, 54, 56], "environ": [2, 12, 54], "modif": 2, "requir": [2, 57], "custom": [2, 4, 57], "step": [2, 56, 57], "1": [2, 54, 56, 57], "convert": 2, "format": [2, 10, 57], "2": [2, 54, 56, 57], "api": [2, 4], "3": [2, 57], "flow": 2, "start": [2, 53, 56, 58], "process": [2, 55], "": [2, 57], "iniatil": 2, "replac": 2, "dataload": [2, 4, 5], "dataset": [2, 5], "trainer": [2, 9], "wrap": 2, "attach": 2, "evalu": [2, 4, 6, 12], "task": [2, 9, 12], "tracker": 2, "fit": 2, "function": 2, "4": 2, "handl": 2, "unus": 2, "weight": 2, "error": 2, "5": 2, "add": 2, "few": 2, "addit": 2, "argument": [2, 10, 11, 12, 17], "python": 2, "main": 2, "6": 2, "setup": [2, 54, 55, 56], "yaml": [2, 57], "file": [2, 55, 56, 57], "put": 2, "everyth": 2, "togeth": 2, "them": 2, "input": [8, 10, 57], "layer": 8, "encod": 8, "base": 9, "class": 9, "method": 9, "construct_graph": 10, "py": [10, 11], "json": [10, 57], "explan": 10, "edg": [10, 12, 57], "transform": 10, "output": [10, 57], "an": [10, 57], "exampl": [10, 57], "partit": [11, 55, 57, 58], "partition_graph": 11, "partition_graph_lp": 11, "built": 12, "specif": 12, "rgcn": 12, "rgat": 12, "save": 12, "restor": 12, "hyper": 12, "paramet": [12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "earli": 12, "stop": 12, "gener": [12, 56], "classif": [12, 57], "regress": 12, "gsgnnedgedataload": 14, "gsgnnedgeinferdata": 15, "return": [15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 46, 47, 48, 49], "arguement": [15, 16, 19, 20], "gsgnnedgetraindata": 16, "gsgnnlinkpredictiondataload": 17, "gsgnnnodedataload": 18, "gsgnnnodeinferdata": 19, "gsgnnnodetraindata": 20, "gsgnnaccevalu": 21, "gsgnninstanceevalu": 22, "gsgnnlpevalu": 23, "gsgnnmrrlpevalu": 24, "gsgnnperetypemrrlpevalu": 25, "gsgnnregressionevalu": 26, "gsf": [27, 28], "get_feat_s": 27, "initi": 28, "gsgnnedgepredictioninf": 29, "gsgnnlinkpredictioninf": 30, "gsgnnnodepredictioninf": 31, "gslmnodeencoderinputlay": 32, "gsnodeencoderinputlay": 33, "gspurelmnodeinputlay": 34, "gsgnnedgemodelinterfac": 35, "gsgnnlinkpredictionmodelinterfac": 36, "gsgnnmodelbas": 37, "gsgnnnodemodelbas": 38, "gsgnnnodemodelinterfac": 39, "relgraphconvlay": 40, "relationalattlay": 41, "relationalgatencod": 42, "relationalgcnencod": 43, "sageconv": 44, "sageencod": 45, "glemnodepredictiontrain": 46, "gsgnnedgepredictiontrain": 47, "gsgnnlinkpredictiontrain": 48, "gsgnnnodepredictiontrain": 49, "gsgnntrainer": 50, "util": [51, 52], "get_rank": 51, "get_world_s": 52, "welcom": 53, "document": 53, "tutori": [53, 57, 58], "get": [53, 56], "scale": 53, "giant": 53, "topic": 53, "contribut": 53, "pip": 54, "packag": 54, "instal": 54, "depend": 54, "ssh": 54, "No": 54, "password": 54, "login": 54, "clone": 54, "toolkit": 54, "option": [54, 57], "build": [54, 56], "imag": [54, 56], "from": 54, "sourc": 54, "code": 54, "creat": [54, 55], "contain": [54, 55], "distribut": 55, "cluster": 55, "instanc": 55, "share": 55, "system": 55, "mount": 55, "nf": 55, "folder": 55, "ip": 55, "address": 55, "check": 55, "port": 55, "statu": 55, "collect": 55, "list": 55, "One": 55, "larg": 55, "ogbn": 55, "papers100m": 55, "all": 55, "sagemak": 56, "compat": 56, "upload": 56, "amazon": 56, "ecr": 56, "repositori": 56, "servic": 56, "compos": 56, "clean": [56, 58], "up": [56, 58], "The": 57, "label": 57, "split": 57, "acm": 57, "includ": 57, "script": 57, "standalon": 58, "mode": 58, "quick": 58, "download": 58, "ogb": 58, "arxiv": 58}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"GraphStorm Advanced Usages": [[0, "graphstorm-advanced-usages"]], "Prevent Information Leakage in Link Prediction": [[0, "prevent-information-leakage-in-link-prediction"]], "Speedup Link Prediction Training": [[0, "speedup-link-prediction-training"]], "Use Text as Node Features": [[1, "use-text-as-node-features"]], "Prepare Raw Data": [[1, "prepare-raw-data"]], "Construct Graph": [[1, "construct-graph"]], "GraphStorm Language Model Configuration": [[1, "graphstorm-language-model-configuration"]], "Launch GraphStorm Trainig without Fine-tuning BERT Models": [[1, "launch-graphstorm-trainig-without-fine-tuning-bert-models"]], "Launch GraphStorm Trainig for both BERT and GNN Models": [[1, "launch-graphstorm-trainig-for-both-bert-and-gnn-models"]], "Only Use BERT Models": [[1, "only-use-bert-models"]], "Use Your Own Models": [[2, "use-your-own-models"]], "Prerequisites": [[2, "prerequisites"], [54, "prerequisites"], [54, "id1"], [56, "prerequisites"]], "Use DGL to implement your GNN models": [[2, "use-dgl-to-implement-your-gnn-models"]], "Modify you GNN models to use mini-batch training/inference": [[2, "modify-you-gnn-models-to-use-mini-batch-training-inference"]], "Learn how to run GraphStorm in a Docker environment": [[2, "learn-how-to-run-graphstorm-in-a-docker-environment"]], "Modifications required for customer models": [[2, "modifications-required-for-customer-models"]], "Step 1: Convert your graph data into required format": [[2, "step-1-convert-your-graph-data-into-required-format"]], "Step 2: Modify your GNN model to use the GraphStorm APIs": [[2, "step-2-modify-your-gnn-model-to-use-the-graphstorm-apis"]], "Step 3. Modify the training/inference flow with the GraphStorm APIs": [[2, "step-3-modify-the-training-inference-flow-with-the-graphstorm-apis"]], "Start training process with GraphStorm\u2019s iniatilization": [[2, "start-training-process-with-graphstorm-s-iniatilization"]], "Replace DGL DataLoader with the GraphStorm\u2019s dataset and dataloader": [[2, "replace-dgl-dataloader-with-the-graphstorm-s-dataset-and-dataloader"]], "Use GraphStorm\u2019s model trainer to wrap your model and attach evaluator and task tracker to it": [[2, "use-graphstorm-s-model-trainer-to-wrap-your-model-and-attach-evaluator-and-task-tracker-to-it"]], "Use trainer\u2019s fit() function to run training": [[2, "use-trainer-s-fit-function-to-run-training"]], "Step 4. Handle the unused weights error": [[2, "step-4-handle-the-unused-weights-error"]], "Step 5. Add a few additional arguments for the Python main function": [[2, "step-5-add-a-few-additional-arguments-for-the-python-main-function"]], "Step 6. Setup GraphStorm configuration YAML file": [[2, "step-6-setup-graphstorm-configuration-yaml-file"]], "Put Everything Together and Run them": [[2, "put-everything-together-and-run-them"]], "graphstorm": [[3, "graphstorm"]], "customized model APIs": [[4, "customized-model-apis"]], "Dataloaders": [[4, "dataloaders"], [5, "dataloaders"]], "Models": [[4, "models"]], "Evaluators": [[4, "evaluators"]], "graphstorm.dataloading": [[5, "graphstorm-dataloading"]], "DataSets": [[5, "datasets"]], "graphstorm.evaluator": [[6, "graphstorm-evaluator"]], "graphstorm.inferer": [[7, "graphstorm-inferer"]], "graphstorm.model": [[8, "graphstorm-model"]], "Model input layers": [[8, "model-input-layers"]], "Model encoders and layers": [[8, "model-encoders-and-layers"]], "graphstorm.trainer": [[9, "graphstorm-trainer"]], "Base class": [[9, "base-class"]], "Task classes": [[9, "task-classes"]], "Method classes": [[9, "method-classes"]], "Graph Construction": [[10, "graph-construction"]], "construct_graph.py arguments": [[10, "construct-graph-py-arguments"]], "Configuration JSON Explanations": [[10, "configuration-json-explanations"]], "nodes": [[10, "nodes"]], "edges": [[10, "edges"]], "Input formats": [[10, "input-formats"]], "Feature transformation": [[10, "feature-transformation"]], "Output": [[10, "output"]], "An example": [[10, "an-example"]], "Graph Partition": [[11, "graph-partition"]], "partition_graph.py arguments": [[11, "partition-graph-py-arguments"]], "partition_graph_lp.py arguments": [[11, "partition-graph-lp-py-arguments"]], "Training and Inference": [[12, "training-and-inference"]], "Launch Arguments": [[12, "launch-arguments"]], "Environment Configurations": [[12, "environment-configurations"]], "Model Configurations": [[12, "model-configurations"]], "Built-in Model Specific Configurations": [[12, "built-in-model-specific-configurations"]], "RGCN": [[12, "rgcn"]], "RGAT": [[12, "rgat"]], "Model Save/Restore Configurations": [[12, "model-save-restore-configurations"]], "Model Training Hyper-parameters Configurations": [[12, "model-training-hyper-parameters-configurations"]], "Early stop configurations": [[12, "early-stop-configurations"]], "Model Evaluation Configurations": [[12, "model-evaluation-configurations"]], "Language Model Specific Configurations": [[12, "language-model-specific-configurations"]], "Task Specific Configurations": [[12, "task-specific-configurations"]], "General Configurations": [[12, "general-configurations"]], "Classification and Regression Task": [[12, "classification-and-regression-task"]], "Node Classification/Regression Specific": [[12, "node-classification-regression-specific"]], "Edge Classification/Regression Specific": [[12, "edge-classification-regression-specific"]], "Link Prediction Task": [[12, "link-prediction-task"]], "GraphStorm Configurations": [[13, "graphstorm-configurations"]], "GSgnnEdgeDataLoader": [[14, "gsgnnedgedataloader"]], "Parameters": [[14, "parameters"], [15, "parameters"], [15, "id1"], [15, "id2"], [15, "id4"], [16, "parameters"], [16, "id1"], [16, "id2"], [16, "id4"], [18, "parameters"], [19, "parameters"], [19, "id1"], [19, "id2"], [19, "id4"], [20, "parameters"], [20, "id1"], [20, "id2"], [20, "id4"], [21, "parameters"], [21, "id1"], [21, "id2"], [21, "id4"], [22, "parameters"], [22, "id1"], [22, "id2"], [22, "id3"], [23, "parameters"], [23, "id1"], [23, "id2"], [24, "parameters"], [24, "id1"], [24, "id2"], [24, "id4"], [25, "parameters"], [25, "id1"], [25, "id2"], [25, "id4"], [26, "parameters"], [26, "id1"], [26, "id2"], [26, "id4"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [29, "id1"], [30, "parameters"], [30, "id1"], [31, "parameters"], [31, "id1"], [32, "parameters"], [32, "id1"], [33, "parameters"], [33, "id1"], [34, "parameters"], [34, "id1"], [35, "parameters"], [35, "id1"], [36, "parameters"], [37, "parameters"], [37, "id1"], [38, "parameters"], [38, "id1"], [38, "id2"], [39, "parameters"], [39, "id1"], [40, "parameters"], [40, "id1"], [41, "parameters"], [41, "id1"], [42, "parameters"], [43, "parameters"], [43, "id1"], [44, "parameters"], [44, "id1"], [45, "parameters"], [45, "id1"], [46, "parameters"], [46, "id1"], [46, "id2"], [46, "id3"], [46, "id4"], [46, "id5"], [47, "parameters"], [47, "id1"], [47, "id2"], [47, "id3"], [47, "id4"], [47, "id5"], [48, "parameters"], [48, "id1"], [48, "id2"], [48, "id3"], [48, "id4"], [48, "id5"], [49, "parameters"], [49, "id1"], [49, "id2"], [49, "id3"], [49, "id4"], [49, "id5"], [50, "parameters"], [50, "id1"], [50, "id2"], [50, "id3"]], "GSgnnEdgeInferData": [[15, "gsgnnedgeinferdata"]], "Returns": [[15, "returns"], [15, "id3"], [15, "id5"], [16, "returns"], [16, "id3"], [16, "id5"], [19, "returns"], [19, "id3"], [19, "id5"], [20, "returns"], [20, "id3"], [20, "id5"], [21, "returns"], [21, "id3"], [21, "id5"], [22, "returns"], [22, "id4"], [23, "returns"], [23, "id3"], [24, "returns"], [24, "id3"], [24, "id5"], [25, "returns"], [25, "id3"], [25, "id5"], [26, "returns"], [26, "id3"], [26, "id5"], [27, "returns"], [32, "returns"], [32, "id2"], [32, "id3"], [32, "id4"], [33, "returns"], [33, "id2"], [33, "id3"], [34, "returns"], [34, "id2"], [34, "id3"], [34, "id4"], [35, "returns"], [35, "id2"], [36, "returns"], [38, "returns"], [39, "returns"], [39, "id2"], [40, "returns"], [41, "returns"], [44, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"]], "Arguement": [[15, "arguement"], [16, "arguement"], [19, "arguement"], [20, "arguement"]], "GSgnnEdgeTrainData": [[16, "gsgnnedgetraindata"]], "GSgnnLinkPredictionDataLoader": [[17, "gsgnnlinkpredictiondataloader"]], "Argument": [[17, "argument"]], "GSgnnNodeDataLoader": [[18, "gsgnnnodedataloader"]], "GSgnnNodeInferData": [[19, "gsgnnnodeinferdata"]], "GSgnnNodeTrainData": [[20, "gsgnnnodetraindata"]], "GSgnnAccEvaluator": [[21, "gsgnnaccevaluator"]], "GSgnnInstanceEvaluator": [[22, "gsgnninstanceevaluator"]], "GSgnnLPEvaluator": [[23, "gsgnnlpevaluator"]], "GSgnnMrrLPEvaluator": [[24, "gsgnnmrrlpevaluator"]], "GSgnnPerEtypeMrrLPEvaluator": [[25, "gsgnnperetypemrrlpevaluator"]], "GSgnnRegressionEvaluator": [[26, "gsgnnregressionevaluator"]], "graphstorm.gsf.get_feat_size": [[27, "graphstorm-gsf-get-feat-size"]], "graphstorm.gsf.initialize": [[28, "graphstorm-gsf-initialize"]], "GSgnnEdgePredictionInfer": [[29, "gsgnnedgepredictioninfer"]], "GSgnnLinkPredictionInfer": [[30, "gsgnnlinkpredictioninfer"]], "GSgnnNodePredictionInfer": [[31, "gsgnnnodepredictioninfer"]], "GSLMNodeEncoderInputLayer": [[32, "gslmnodeencoderinputlayer"]], "GSNodeEncoderInputLayer": [[33, "gsnodeencoderinputlayer"]], "GSPureLMNodeInputLayer": [[34, "gspurelmnodeinputlayer"]], "GSgnnEdgeModelInterface": [[35, "gsgnnedgemodelinterface"]], "GSgnnLinkPredictionModelInterface": [[36, "gsgnnlinkpredictionmodelinterface"]], "GSgnnModelBase": [[37, "gsgnnmodelbase"]], "GSgnnNodeModelBase": [[38, "gsgnnnodemodelbase"]], "GSgnnNodeModelInterface": [[39, "gsgnnnodemodelinterface"]], "RelGraphConvLayer": [[40, "relgraphconvlayer"]], "RelationalAttLayer": [[41, "relationalattlayer"]], "RelationalGATEncoder": [[42, "relationalgatencoder"]], "RelationalGCNEncoder": [[43, "relationalgcnencoder"]], "SAGEConv": [[44, "sageconv"]], "SAGEEncoder": [[45, "sageencoder"]], "GLEMNodePredictionTrainer": [[46, "glemnodepredictiontrainer"]], "GSgnnEdgePredictionTrainer": [[47, "gsgnnedgepredictiontrainer"]], "GSgnnLinkPredictionTrainer": [[48, "gsgnnlinkpredictiontrainer"]], "GSgnnNodePredictionTrainer": [[49, "gsgnnnodepredictiontrainer"]], "GSgnnTrainer": [[50, "gsgnntrainer"]], "graphstorm.utils.get_rank": [[51, "graphstorm-utils-get-rank"]], "graphstorm.utils.get_world_size": [[52, "graphstorm-utils-get-world-size"]], "Welcome to the GraphStorm Documentation and Tutorials": [[53, "welcome-to-the-graphstorm-documentation-and-tutorials"]], "Getting Started": [[53, "getting-started"]], "Scale to Giant Graphs": [[53, "scale-to-giant-graphs"]], "Advanced Topics": [[53, "advanced-topics"]], "Contribution": [[53, "contribution"]], "Environment Setup": [[54, "environment-setup"]], "1. Setup GraphStorm with pip Packages": [[54, "setup-graphstorm-with-pip-packages"]], "Install GraphStorm": [[54, "install-graphstorm"]], "Install Dependencies": [[54, "install-dependencies"]], "Configure SSH No-password login": [[54, "configure-ssh-no-password-login"]], "Clone GraphStorm Toolkits (Optional)": [[54, "clone-graphstorm-toolkits-optional"]], "2. Setup GraphStorm Docker Environment": [[54, "setup-graphstorm-docker-environment"]], "Build a GraphStorm Docker image from source code": [[54, "build-a-graphstorm-docker-image-from-source-code"]], "Create a GraphStorm Container": [[54, "create-a-graphstorm-container"]], "Use GraphStorm in a Distributed Cluster": [[55, "use-graphstorm-in-a-distributed-cluster"]], "Create a GraphStorm Cluster": [[55, "create-a-graphstorm-cluster"], [55, "id4"]], "Setup the instance of a cluster": [[55, "setup-the-instance-of-a-cluster"]], "Setup of a shared file system for the cluster": [[55, "setup-of-a-shared-file-system-for-the-cluster"]], "Create GraphStorm container by mounting the NFS folder": [[55, "create-graphstorm-container-by-mounting-the-nfs-folder"]], "Setup the IP address file and check port status": [[55, "setup-the-ip-address-file-and-check-port-status"]], "Collect the IP list": [[55, "collect-the-ip-list"]], "Check port": [[55, "check-port"]], "Partition a Graph": [[55, "partition-a-graph"]], "Launch Training on One Container": [[55, "launch-training-on-one-container"]], "Train a Large Graph (OGBN-Papers100M)": [[55, "train-a-large-graph-ogbn-papers100m"]], "Process and Partition a Graph": [[55, "process-and-partition-a-graph"]], "Distribute Partitioned Graphs and Configurations to all Instances": [[55, "distribute-partitioned-graphs-and-configurations-to-all-instances"]], "Launch Training in One Container": [[55, "launch-training-in-one-container"]], "Use GraphStorm on SageMaker": [[56, "use-graphstorm-on-sagemaker"]], "Setup GraphStorm SageMaker Docker Image": [[56, "setup-graphstorm-sagemaker-docker-image"]], "Step 1: Build a SageMaker-compatible Docker image": [[56, "step-1-build-a-sagemaker-compatible-docker-image"]], "Step 2: Upload Docker Images to Amazon ECR Repository": [[56, "step-2-upload-docker-images-to-amazon-ecr-repository"]], "Run GraphStorm on SageMaker": [[56, "run-graphstorm-on-sagemaker"]], "Run GraphStorm with Amazon SageMaker service": [[56, "run-graphstorm-with-amazon-sagemaker-service"]], "Prepare graph data": [[56, "prepare-graph-data"]], "Launch training": [[56, "launch-training"]], "Launch inference": [[56, "launch-inference"], [58, "launch-inference"]], "Run GraphStorm SageMaker with Docker Compose": [[56, "run-graphstorm-sagemaker-with-docker-compose"]], "Get Started": [[56, "get-started"]], "Generate a Docker Compose file": [[56, "generate-a-docker-compose-file"]], "Run GraphStorm on Docker Compose for Training": [[56, "run-graphstorm-on-docker-compose-for-training"]], "Run GraphStorm on Docker Compose for Inference": [[56, "run-graphstorm-on-docker-compose-for-inference"]], "Clean Up": [[56, "clean-up"], [58, "clean-up"]], "Use Your Own Data Tutorial": [[57, "use-your-own-data-tutorial"]], "Step 1: Prepare Your Own Graph Data": [[57, "step-1-prepare-your-own-graph-data"]], "Option 1: Required raw data format": [[57, "option-1-required-raw-data-format"]], "The input configuration JSON": [[57, "the-input-configuration-json"]], "Customized label split": [[57, "customized-label-split"]], "Input raw node/edge data files": [[57, "input-raw-node-edge-data-files"]], "Outputs of graph construction": [[57, "outputs-of-graph-construction"]], "Option 2: Required DGL graph": [[57, "option-2-required-dgl-graph"]], "Required DGL graph format": [[57, "required-dgl-graph-format"]], "The ACM graph data example": [[57, "the-acm-graph-data-example"]], "Partition the DGL ACM graph for node classification": [[57, "partition-the-dgl-acm-graph-for-node-classification"]], "Step 2: Modify the YAML configuration file to include your own data\u2019s information": [[57, "step-2-modify-the-yaml-configuration-file-to-include-your-own-data-s-information"]], "An example ACM  YAML file for node classification": [[57, "an-example-acm-yaml-file-for-node-classification"]], "Step 3: Launch training script on your own graphs": [[57, "step-3-launch-training-script-on-your-own-graphs"]], "Standalone Mode Quick Start Tutorial": [[58, "standalone-mode-quick-start-tutorial"]], "Download  and Partition OGB-arxiv Data": [[58, "download-and-partition-ogb-arxiv-data"]], "Launch Training": [[58, "launch-training"]]}, "indexentries": {"gsgnnedgedataloader (class in graphstorm.dataloading)": [[14, "graphstorm.dataloading.GSgnnEdgeDataLoader"]], "gsgnnedgeinferdata (class in graphstorm.dataloading)": [[15, "graphstorm.dataloading.GSgnnEdgeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[15, "graphstorm.dataloading.GSgnnEdgeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[15, "graphstorm.dataloading.GSgnnEdgeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[15, "graphstorm.dataloading.GSgnnEdgeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[15, "graphstorm.dataloading.GSgnnEdgeInferData.prepare_data"]], "gsgnnedgetraindata (class in graphstorm.dataloading)": [[16, "graphstorm.dataloading.GSgnnEdgeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[16, "graphstorm.dataloading.GSgnnEdgeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgetraindata method)": [[16, "graphstorm.dataloading.GSgnnEdgeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[16, "graphstorm.dataloading.GSgnnEdgeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgetraindata method)": [[16, "graphstorm.dataloading.GSgnnEdgeTrainData.prepare_data"]], "gsgnnlinkpredictiondataloader (class in graphstorm.dataloading)": [[17, "graphstorm.dataloading.GSgnnLinkPredictionDataLoader"]], "gsgnnnodedataloader (class in graphstorm.dataloading)": [[18, "graphstorm.dataloading.GSgnnNodeDataLoader"]], "gsgnnnodeinferdata (class in graphstorm.dataloading)": [[19, "graphstorm.dataloading.GSgnnNodeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[19, "graphstorm.dataloading.GSgnnNodeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[19, "graphstorm.dataloading.GSgnnNodeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[19, "graphstorm.dataloading.GSgnnNodeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[19, "graphstorm.dataloading.GSgnnNodeInferData.prepare_data"]], "gsgnnnodetraindata (class in graphstorm.dataloading)": [[20, "graphstorm.dataloading.GSgnnNodeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[20, "graphstorm.dataloading.GSgnnNodeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodetraindata method)": [[20, "graphstorm.dataloading.GSgnnNodeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[20, "graphstorm.dataloading.GSgnnNodeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodetraindata method)": [[20, "graphstorm.dataloading.GSgnnNodeTrainData.prepare_data"]], "gsgnnaccevaluator (class in graphstorm.eval)": [[21, "graphstorm.eval.GSgnnAccEvaluator"]], "compute_score() (graphstorm.eval.gsgnnaccevaluator method)": [[21, "graphstorm.eval.GSgnnAccEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnaccevaluator method)": [[21, "graphstorm.eval.GSgnnAccEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnaccevaluator method)": [[21, "graphstorm.eval.GSgnnAccEvaluator.evaluate"]], "gsgnninstanceevaluator (class in graphstorm.eval)": [[22, "graphstorm.eval.GSgnnInstanceEvaluator"]], "compute_score() (graphstorm.eval.gsgnninstanceevaluator method)": [[22, "graphstorm.eval.GSgnnInstanceEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnninstanceevaluator method)": [[22, "graphstorm.eval.GSgnnInstanceEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnninstanceevaluator method)": [[22, "graphstorm.eval.GSgnnInstanceEvaluator.evaluate"]], "gsgnnlpevaluator (class in graphstorm.eval)": [[23, "graphstorm.eval.GSgnnLPEvaluator"]], "do_eval() (graphstorm.eval.gsgnnlpevaluator method)": [[23, "graphstorm.eval.GSgnnLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnlpevaluator method)": [[23, "graphstorm.eval.GSgnnLPEvaluator.evaluate"]], "gsgnnmrrlpevaluator (class in graphstorm.eval)": [[24, "graphstorm.eval.GSgnnMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnMrrLPEvaluator.evaluate"]], "gsgnnperetypemrrlpevaluator (class in graphstorm.eval)": [[25, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[25, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[25, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[25, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.evaluate"]], "gsgnnregressionevaluator (class in graphstorm.eval)": [[26, "graphstorm.eval.GSgnnRegressionEvaluator"]], "compute_score() (graphstorm.eval.gsgnnregressionevaluator method)": [[26, "graphstorm.eval.GSgnnRegressionEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnregressionevaluator method)": [[26, "graphstorm.eval.GSgnnRegressionEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnregressionevaluator method)": [[26, "graphstorm.eval.GSgnnRegressionEvaluator.evaluate"]], "get_feat_size() (in module graphstorm.gsf)": [[27, "graphstorm.gsf.get_feat_size"]], "initialize() (in module graphstorm.gsf)": [[28, "graphstorm.gsf.initialize"]], "gsgnnedgepredictioninfer (class in graphstorm.inference)": [[29, "graphstorm.inference.GSgnnEdgePredictionInfer"]], "infer() (graphstorm.inference.gsgnnedgepredictioninfer method)": [[29, "graphstorm.inference.GSgnnEdgePredictionInfer.infer"]], "gsgnnlinkpredictioninfer (class in graphstorm.inference)": [[30, "graphstorm.inference.GSgnnLinkPredictionInfer"]], "infer() (graphstorm.inference.gsgnnlinkpredictioninfer method)": [[30, "graphstorm.inference.GSgnnLinkPredictionInfer.infer"]], "gsgnnnodepredictioninfer (class in graphstorm.inference)": [[31, "graphstorm.inference.GSgnnNodePredictionInfer"]], "infer() (graphstorm.inference.gsgnnnodepredictioninfer method)": [[31, "graphstorm.inference.GSgnnNodePredictionInfer.infer"]], "gslmnodeencoderinputlayer (class in graphstorm.model)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer"]], "eval() (graphstorm.model.gslmnodeencoderinputlayer method)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer.eval"]], "forward() (graphstorm.model.gslmnodeencoderinputlayer method)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gslmnodeencoderinputlayer method)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gslmnodeencoderinputlayer method)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gslmnodeencoderinputlayer method)": [[32, "graphstorm.model.GSLMNodeEncoderInputLayer.get_sparse_params"]], "gsnodeencoderinputlayer (class in graphstorm.model)": [[33, "graphstorm.model.GSNodeEncoderInputLayer"]], "eval() (graphstorm.model.gsnodeencoderinputlayer method)": [[33, "graphstorm.model.GSNodeEncoderInputLayer.eval"]], "forward() (graphstorm.model.gsnodeencoderinputlayer method)": [[33, "graphstorm.model.GSNodeEncoderInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gsnodeencoderinputlayer method)": [[33, "graphstorm.model.GSNodeEncoderInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gsnodeencoderinputlayer method)": [[33, "graphstorm.model.GSNodeEncoderInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gsnodeencoderinputlayer method)": [[33, "graphstorm.model.GSNodeEncoderInputLayer.get_sparse_params"]], "gspurelmnodeinputlayer (class in graphstorm.model)": [[34, "graphstorm.model.GSPureLMNodeInputLayer"]], "eval() (graphstorm.model.gspurelmnodeinputlayer method)": [[34, "graphstorm.model.GSPureLMNodeInputLayer.eval"]], "forward() (graphstorm.model.gspurelmnodeinputlayer method)": [[34, "graphstorm.model.GSPureLMNodeInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gspurelmnodeinputlayer method)": [[34, "graphstorm.model.GSPureLMNodeInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gspurelmnodeinputlayer method)": [[34, "graphstorm.model.GSPureLMNodeInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gspurelmnodeinputlayer method)": [[34, "graphstorm.model.GSPureLMNodeInputLayer.get_sparse_params"]], "gsgnnedgemodelinterface (class in graphstorm.model)": [[35, "graphstorm.model.GSgnnEdgeModelInterface"]], "forward() (graphstorm.model.gsgnnedgemodelinterface method)": [[35, "graphstorm.model.GSgnnEdgeModelInterface.forward"]], "predict() (graphstorm.model.gsgnnedgemodelinterface method)": [[35, "graphstorm.model.GSgnnEdgeModelInterface.predict"]], "gsgnnlinkpredictionmodelinterface (class in graphstorm.model)": [[36, "graphstorm.model.GSgnnLinkPredictionModelInterface"]], "forward() (graphstorm.model.gsgnnlinkpredictionmodelinterface method)": [[36, "graphstorm.model.GSgnnLinkPredictionModelInterface.forward"]], "gsgnnmodelbase (class in graphstorm.model)": [[37, "graphstorm.model.GSgnnModelBase"]], "eval() (graphstorm.model.gsgnnmodelbase method)": [[37, "graphstorm.model.GSgnnModelBase.eval"]], "forward() (graphstorm.model.gsgnnmodelbase method)": [[37, "graphstorm.model.GSgnnModelBase.forward"]], "restore_model() (graphstorm.model.gsgnnmodelbase method)": [[37, "graphstorm.model.GSgnnModelBase.restore_model"]], "save_model() (graphstorm.model.gsgnnmodelbase method)": [[37, "graphstorm.model.GSgnnModelBase.save_model"]], "gsgnnnodemodelbase (class in graphstorm.model)": [[38, "graphstorm.model.GSgnnNodeModelBase"]], "eval() (graphstorm.model.gsgnnnodemodelbase method)": [[38, "graphstorm.model.GSgnnNodeModelBase.eval"]], "forward() (graphstorm.model.gsgnnnodemodelbase method)": [[38, "graphstorm.model.GSgnnNodeModelBase.forward"]], "predict() (graphstorm.model.gsgnnnodemodelbase method)": [[38, "graphstorm.model.GSgnnNodeModelBase.predict"]], "restore_model() (graphstorm.model.gsgnnnodemodelbase method)": [[38, "graphstorm.model.GSgnnNodeModelBase.restore_model"]], "save_model() (graphstorm.model.gsgnnnodemodelbase method)": [[38, "graphstorm.model.GSgnnNodeModelBase.save_model"]], "gsgnnnodemodelinterface (class in graphstorm.model)": [[39, "graphstorm.model.GSgnnNodeModelInterface"]], "forward() (graphstorm.model.gsgnnnodemodelinterface method)": [[39, "graphstorm.model.GSgnnNodeModelInterface.forward"]], "predict() (graphstorm.model.gsgnnnodemodelinterface method)": [[39, "graphstorm.model.GSgnnNodeModelInterface.predict"]], "relgraphconvlayer (class in graphstorm.model)": [[40, "graphstorm.model.RelGraphConvLayer"]], "eval() (graphstorm.model.relgraphconvlayer method)": [[40, "graphstorm.model.RelGraphConvLayer.eval"]], "forward() (graphstorm.model.relgraphconvlayer method)": [[40, "graphstorm.model.RelGraphConvLayer.forward"]], "relationalattlayer (class in graphstorm.model)": [[41, "graphstorm.model.RelationalAttLayer"]], "eval() (graphstorm.model.relationalattlayer method)": [[41, "graphstorm.model.RelationalAttLayer.eval"]], "forward() (graphstorm.model.relationalattlayer method)": [[41, "graphstorm.model.RelationalAttLayer.forward"]], "relationalgatencoder (class in graphstorm.model)": [[42, "graphstorm.model.RelationalGATEncoder"]], "eval() (graphstorm.model.relationalgatencoder method)": [[42, "graphstorm.model.RelationalGATEncoder.eval"]], "forward() (graphstorm.model.relationalgatencoder method)": [[42, "graphstorm.model.RelationalGATEncoder.forward"]], "relationalgcnencoder (class in graphstorm.model)": [[43, "graphstorm.model.RelationalGCNEncoder"]], "eval() (graphstorm.model.relationalgcnencoder method)": [[43, "graphstorm.model.RelationalGCNEncoder.eval"]], "forward() (graphstorm.model.relationalgcnencoder method)": [[43, "graphstorm.model.RelationalGCNEncoder.forward"]], "sageconv (class in graphstorm.model)": [[44, "graphstorm.model.SAGEConv"]], "eval() (graphstorm.model.sageconv method)": [[44, "graphstorm.model.SAGEConv.eval"]], "forward() (graphstorm.model.sageconv method)": [[44, "graphstorm.model.SAGEConv.forward"]], "sageencoder (class in graphstorm.model)": [[45, "graphstorm.model.SAGEEncoder"]], "eval() (graphstorm.model.sageencoder method)": [[45, "graphstorm.model.SAGEEncoder.eval"]], "forward() (graphstorm.model.sageencoder method)": [[45, "graphstorm.model.SAGEEncoder.forward"]], "glemnodepredictiontrainer (class in graphstorm.trainer)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer"]], "eval() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.eval"]], "fit() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.glemnodepredictiontrainer method)": [[46, "graphstorm.trainer.GLEMNodePredictionTrainer.save_topk_models"]], "gsgnnedgepredictiontrainer (class in graphstorm.trainer)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[47, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_topk_models"]], "gsgnnlinkpredictiontrainer (class in graphstorm.trainer)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[48, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_topk_models"]], "gsgnnnodepredictiontrainer (class in graphstorm.trainer)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_topk_models"]], "gsgnntrainer (class in graphstorm.trainer)": [[50, "graphstorm.trainer.GSgnnTrainer"]], "get_best_model_path() (graphstorm.trainer.gsgnntrainer method)": [[50, "graphstorm.trainer.GSgnnTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnntrainer method)": [[50, "graphstorm.trainer.GSgnnTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnntrainer method)": [[50, "graphstorm.trainer.GSgnnTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnntrainer method)": [[50, "graphstorm.trainer.GSgnnTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnntrainer method)": [[50, "graphstorm.trainer.GSgnnTrainer.save_topk_models"]], "get_rank() (in module graphstorm.utils)": [[51, "graphstorm.utils.get_rank"]], "get_world_size() (in module graphstorm.utils)": [[52, "graphstorm.utils.get_world_size"]]}})