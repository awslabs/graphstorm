Search.setIndex({"docnames": ["advanced/advanced-usages", "advanced/advanced-wholegraph", "advanced/language-models", "advanced/own-models", "api/graphstorm", "api/graphstorm.dataloading", "api/graphstorm.eval", "api/graphstorm.inference", "api/graphstorm.model", "api/graphstorm.trainer", "configuration/configuration-gconstruction", "configuration/configuration-partition", "configuration/configuration-run", "configuration/index", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader", "generated/graphstorm.dataloading.GSgnnEdgeDataLoaderBase", "generated/graphstorm.dataloading.GSgnnEdgeInferData", "generated/graphstorm.dataloading.GSgnnEdgeTrainData", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase", "generated/graphstorm.dataloading.GSgnnNodeDataLoader", "generated/graphstorm.dataloading.GSgnnNodeDataLoaderBase", "generated/graphstorm.dataloading.GSgnnNodeInferData", "generated/graphstorm.dataloading.GSgnnNodeTrainData", "generated/graphstorm.eval.GSgnnAccEvaluator", "generated/graphstorm.eval.GSgnnInstanceEvaluator", "generated/graphstorm.eval.GSgnnLPEvaluator", "generated/graphstorm.eval.GSgnnMrrLPEvaluator", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator", "generated/graphstorm.eval.GSgnnRegressionEvaluator", "generated/graphstorm.gsf.initialize", "generated/graphstorm.inference.GSgnnEdgePredictionInferrer", "generated/graphstorm.inference.GSgnnLinkPredictionInferrer", "generated/graphstorm.inference.GSgnnNodePredictionInferrer", "generated/graphstorm.model.GSLMNodeEncoderInputLayer", "generated/graphstorm.model.GSNodeEncoderInputLayer", "generated/graphstorm.model.GSPureLMNodeInputLayer", "generated/graphstorm.model.GSgnnEdgeModelBase", "generated/graphstorm.model.GSgnnLinkPredictionModelBase", "generated/graphstorm.model.GSgnnNodeModelBase", "generated/graphstorm.model.HGTEncoder", "generated/graphstorm.model.HGTLayer", "generated/graphstorm.model.RelGraphConvLayer", "generated/graphstorm.model.RelationalAttLayer", "generated/graphstorm.model.RelationalGATEncoder", "generated/graphstorm.model.RelationalGCNEncoder", "generated/graphstorm.model.SAGEConv", "generated/graphstorm.model.SAGEEncoder", "generated/graphstorm.trainer.GLEMNodePredictionTrainer", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer", "generated/graphstorm.utils.setup_device", "gs-processing/developer/developer-guide", "gs-processing/developer/input-configuration", "gs-processing/gs-processing-getting-started", "gs-processing/usage/amazon-sagemaker", "gs-processing/usage/distributed-processing-setup", "gs-processing/usage/example", "index", "install/env-setup", "scale/distributed", "scale/sagemaker", "tutorials/own-data", "tutorials/quick-start"], "filenames": ["advanced/advanced-usages.rst", "advanced/advanced-wholegraph.rst", "advanced/language-models.rst", "advanced/own-models.rst", "api/graphstorm.rst", "api/graphstorm.dataloading.rst", "api/graphstorm.eval.rst", "api/graphstorm.inference.rst", "api/graphstorm.model.rst", "api/graphstorm.trainer.rst", "configuration/configuration-gconstruction.rst", "configuration/configuration-partition.rst", "configuration/configuration-run.rst", "configuration/index.rst", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnEdgeDataLoaderBase.rst", "generated/graphstorm.dataloading.GSgnnEdgeInferData.rst", "generated/graphstorm.dataloading.GSgnnEdgeTrainData.rst", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader.rst", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase.rst", "generated/graphstorm.dataloading.GSgnnNodeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnNodeDataLoaderBase.rst", "generated/graphstorm.dataloading.GSgnnNodeInferData.rst", "generated/graphstorm.dataloading.GSgnnNodeTrainData.rst", "generated/graphstorm.eval.GSgnnAccEvaluator.rst", "generated/graphstorm.eval.GSgnnInstanceEvaluator.rst", "generated/graphstorm.eval.GSgnnLPEvaluator.rst", "generated/graphstorm.eval.GSgnnMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnRegressionEvaluator.rst", "generated/graphstorm.gsf.initialize.rst", "generated/graphstorm.inference.GSgnnEdgePredictionInferrer.rst", "generated/graphstorm.inference.GSgnnLinkPredictionInferrer.rst", "generated/graphstorm.inference.GSgnnNodePredictionInferrer.rst", "generated/graphstorm.model.GSLMNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSPureLMNodeInputLayer.rst", "generated/graphstorm.model.GSgnnEdgeModelBase.rst", "generated/graphstorm.model.GSgnnLinkPredictionModelBase.rst", "generated/graphstorm.model.GSgnnNodeModelBase.rst", "generated/graphstorm.model.HGTEncoder.rst", "generated/graphstorm.model.HGTLayer.rst", "generated/graphstorm.model.RelGraphConvLayer.rst", "generated/graphstorm.model.RelationalAttLayer.rst", "generated/graphstorm.model.RelationalGATEncoder.rst", "generated/graphstorm.model.RelationalGCNEncoder.rst", "generated/graphstorm.model.SAGEConv.rst", "generated/graphstorm.model.SAGEEncoder.rst", "generated/graphstorm.trainer.GLEMNodePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer.rst", "generated/graphstorm.utils.setup_device.rst", "gs-processing/developer/developer-guide.rst", "gs-processing/developer/input-configuration.rst", "gs-processing/gs-processing-getting-started.rst", "gs-processing/usage/amazon-sagemaker.rst", "gs-processing/usage/distributed-processing-setup.rst", "gs-processing/usage/example.rst", "index.rst", "install/env-setup.rst", "scale/distributed.rst", "scale/sagemaker.rst", "tutorials/own-data.rst", "tutorials/quick-start.rst"], "titles": ["GraphStorm Advanced Usages", "Use WholeGraph in GraphStorm", "Use Text as Node Features", "Use Your Own Models", "graphstorm", "graphstorm.dataloading", "graphstorm.eval", "graphstorm.inference", "graphstorm.model", "graphstorm.trainer", "Graph Construction", "Graph Partition", "Training and Inference", "GraphStorm Configurations", "GSgnnEdgeDataLoader", "GSgnnEdgeDataLoaderBase", "GSgnnEdgeInferData", "GSgnnEdgeTrainData", "GSgnnLinkPredictionDataLoader", "GSgnnLinkPredictionDataLoaderBase", "GSgnnNodeDataLoader", "GSgnnNodeDataLoaderBase", "GSgnnNodeInferData", "GSgnnNodeTrainData", "GSgnnAccEvaluator", "GSgnnInstanceEvaluator", "GSgnnLPEvaluator", "GSgnnMrrLPEvaluator", "GSgnnPerEtypeMrrLPEvaluator", "GSgnnRegressionEvaluator", "graphstorm.gsf.initialize", "GSgnnEdgePredictionInferrer", "GSgnnLinkPredictionInferrer", "GSgnnNodePredictionInferrer", "graphstorm.model.GSLMNodeEncoderInputLayer", "graphstorm.model.GSNodeEncoderInputLayer", "graphstorm.model.GSPureLMNodeInputLayer", "GSgnnEdgeModelBase", "GSgnnLinkPredictionModelBase", "GSgnnNodeModelBase", "graphstorm.model.HGTEncoder", "graphstorm.model.HGTLayer", "graphstorm.model.RelGraphConvLayer", "graphstorm.model.RelationalAttLayer", "graphstorm.model.RelationalGATEncoder", "graphstorm.model.RelationalGCNEncoder", "graphstorm.model.SAGEConv", "graphstorm.model.SAGEEncoder", "GLEMNodePredictionTrainer", "GSgnnEdgePredictionTrainer", "GSgnnLinkPredictionTrainer", "GSgnnNodePredictionTrainer", "graphstorm.utils.setup_device", "Developer Guide", "GraphStorm Processing Input Configuration", "GraphStorm Processing Getting Started", "Running distributed jobs on Amazon SageMaker", "GraphStorm Processing setup for Amazon SageMaker", "GraphStorm Processing Example", "Welcome to the GraphStorm Documentation and Tutorials", "Environment Setup", "Use GraphStorm in a Distributed Cluster", "Use GraphStorm on SageMaker", "Use Your Own Data Tutorial", "Standalone Mode Quick Start Tutorial"], "terms": {"i": [0, 1, 2, 3, 6, 8, 10, 11, 12, 13, 14, 18, 20, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "wide": [0, 59], "emploi": [0, 40, 44, 45, 47], "pre": [0, 2, 12, 56, 63], "techniqu": 0, "gener": [0, 1, 2, 3, 10, 11, 27, 28, 31, 32, 33, 34, 42, 55, 63, 64], "high": [0, 10, 31, 32, 33, 50], "qualiti": 0, "entiti": 0, "represent": [0, 46, 55], "applic": [0, 10, 11, 12, 58, 62], "divers": 0, "busi": [0, 63], "howev": [0, 2, 12], "implement": [0, 6, 8, 12, 15, 19, 21, 37, 38, 39, 41, 42, 46, 59, 63], "loop": [0, 2, 3, 12, 42, 43, 44], "task": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 20, 21, 22, 23, 24, 31, 32, 33, 48, 49, 51, 54, 58, 61, 63, 64], "need": [0, 1, 2, 3, 11, 12, 13, 37, 38, 39, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "carefulli": 0, "handl": [0, 7, 9, 53, 61], "problem": [0, 3, 12], "caus": [0, 2, 3, 61], "1": [0, 1, 2, 10, 11, 12, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 61, 64], "includ": [0, 1, 2, 3, 5, 12, 13, 14, 20, 37, 38, 39, 42, 43, 48, 49, 50, 51, 53, 54, 58, 60, 62, 64], "edg": [0, 1, 3, 6, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 31, 32, 37, 38, 39, 41, 42, 46, 49, 50, 55, 56, 58, 59, 61, 62, 64], "messag": [0, 1, 12, 14, 15, 18, 19, 20, 21, 37, 38, 39, 41, 42, 43], "pass": [0, 3, 12, 14, 15, 18, 19, 20, 21, 37, 38, 39, 42, 54, 55, 58], "2": [0, 2, 10, 12, 14, 18, 20, 24, 25, 26, 27, 28, 29, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61], "valid": [0, 3, 10, 11, 12, 17, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 54, 57, 62, 63, 64], "test": [0, 1, 3, 10, 11, 12, 16, 17, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 48, 49, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 64], "dure": [0, 2, 10, 12, 14, 18, 24, 25, 26, 29], "thi": [0, 1, 2, 3, 10, 11, 12, 15, 18, 19, 21, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "paper": [0, 1, 2, 3, 10, 11, 41, 42, 61, 63], "provid": [0, 1, 3, 6, 10, 11, 12, 13, 42, 46, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "more": [0, 2, 3, 12, 27, 28, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "detail": [0, 3, 10, 12, 24, 25, 29, 54, 55, 57, 58, 62, 63], "support": [0, 1, 2, 3, 10, 11, 12, 24, 25, 26, 27, 28, 29, 37, 38, 39, 48, 49, 50, 51, 57, 58, 59, 60, 62, 63], "avoid": [0, 7, 9, 10, 12, 18, 32, 56], "theses": 0, "To": [0, 1, 2, 3, 12, 14, 18, 20, 53, 55, 56, 57, 58, 61, 62], "user": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 21, 24, 25, 26, 27, 28, 29, 34, 35, 37, 38, 39, 54, 58, 59, 60, 61, 62, 63, 64], "set": [0, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64], "exclude_training_target": [0, 12, 14, 18], "true": [0, 2, 3, 10, 11, 12, 14, 18, 20, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 61, 62, 63], "reverse_edge_types_map": [0, 12, 14, 18], "when": [0, 1, 2, 3, 10, 12, 27, 28, 32, 34, 35, 37, 38, 39, 48, 49, 50, 51, 53, 54, 56, 61, 62], "launch": [0, 1, 3, 11, 58, 60], "These": [0, 3, 13, 53, 58, 63], "two": [0, 2, 3, 8, 10, 11, 12, 24, 25, 26, 27, 28, 29, 32, 49, 50, 51, 54, 58, 60, 61, 62, 63], "argument": [0, 1, 2, 13, 54, 57, 58, 60, 61, 63, 64], "tell": [0, 62], "exclud": [0, 12, 14, 18, 53], "correspond": [0, 3, 8, 10, 12, 42, 54, 55, 58, 61, 62], "revers": [0, 10, 11, 12, 14, 18, 27, 28], "do": [0, 2, 3, 10, 12, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 40, 44, 45, 47, 48, 49, 50, 51, 53, 56, 58, 61, 62, 63, 64], "explan": [0, 54, 62, 63], "can": [0, 1, 2, 3, 4, 10, 11, 12, 16, 17, 22, 31, 32, 33, 34, 35, 37, 38, 39, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "found": [0, 3, 63], "infer": [0, 2, 10, 11, 13, 16, 22, 30, 31, 32, 33, 40, 44, 45, 47, 48, 49, 50, 51, 59, 61, 63], "configur": [0, 16, 17, 22, 23, 34, 36, 55, 56, 57, 59, 62], "model": [0, 10, 11, 26, 28, 31, 32, 33, 37, 38, 39, 48, 49, 50, 51, 52, 54, 58, 59, 60, 61, 62, 63, 64], "mask": [0, 10, 18, 32, 50], "val_mask": [0, 1, 3, 10, 63], "test_mask": [0, 1, 3, 10, 63], "respect": [0, 12, 58], "also": [0, 1, 2, 3, 10, 37, 38, 39, 53, 54, 55, 57, 58, 61, 63, 64], "all": [0, 1, 2, 3, 12, 14, 28, 31, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 62, 63, 64], "other": [0, 1, 2, 3, 12, 37, 38, 39, 41, 46, 48, 49, 50, 51, 53, 54, 57, 58, 61, 62], "train_mask": [0, 1, 3, 10, 18, 32, 50, 63], "reli": [0, 3, 24, 25, 26, 29, 53, 54, 60, 62, 63, 64], "dgl": [0, 1, 10, 11, 37, 38, 39, 41, 55, 58, 60, 61, 62, 64], "dataload": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 34, 35, 36, 40, 44, 45, 47, 48, 49, 50, 51], "multilayerneighborsampl": 0, "sampl": [0, 3, 12, 14, 18, 19, 20, 27, 28, 63], "basic": [0, 3, 10, 37, 38, 39, 61, 63], "onli": [0, 1, 3, 10, 11, 12, 13, 36, 37, 38, 39, 46, 53, 54, 58, 61, 62, 63, 64], "effici": [0, 1, 12, 27, 28], "graph": [0, 1, 5, 6, 8, 12, 13, 14, 16, 17, 18, 20, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 55, 56, 58, 60, 64], "four": [0, 10, 18, 19, 61, 62], "e": [0, 1, 2, 3, 6, 8, 10, 11, 12, 30, 41, 42, 54, 56, 57, 60, 61, 62, 63, 64], "fast_uniform": 0, "fast_joint": 0, "fast_localuniform": 0, "fast_localjoint": 0, "less": [0, 11, 13, 27, 28], "precis": 0, "neighbor": [0, 12, 14, 18, 19, 20, 42], "behavior": [0, 12], "specif": [0, 1, 3, 24, 25, 29, 58, 60, 62], "regardless": 0, "ani": [0, 1, 2, 3, 10, 12, 16, 22, 37, 38, 39, 57, 58, 59, 62, 63, 64], "begin": [0, 3], "later": [0, 3, 12, 60, 63], "remov": [0, 1, 11, 12, 48, 49, 50, 51, 53, 58], "In": [0, 1, 2, 3, 10, 12, 13, 18, 34, 35, 37, 38, 39, 42, 48, 49, 50, 51, 54, 57, 58, 59, 61, 62, 63, 64], "theori": 0, "subgraph": [0, 14, 15, 18, 19, 20, 21], "mai": [0, 1, 2, 3, 8, 12, 37, 38, 39, 48, 49, 50, 51, 60, 61, 63, 64], "have": [0, 1, 2, 3, 10, 11, 12, 16, 17, 22, 23, 34, 35, 36, 42, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64], "than": [0, 10, 11, 12, 60, 61, 63], "expect": [0, 10, 53, 54, 55], "some": [0, 2, 3, 12, 37, 38, 39, 61, 62, 63], "them": [0, 2, 10, 34, 35, 55, 61, 62, 63], "would": [0, 5, 8, 53, 54, 58, 62], "hundr": [0, 12], "million": 0, "small": [0, 3, 12, 56, 58, 61], "g": [0, 1, 2, 3, 4, 8, 10, 11, 12, 16, 17, 22, 23, 30, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64], "each": [0, 1, 2, 10, 12, 14, 15, 18, 19, 20, 21, 26, 27, 28, 34, 35, 36, 41, 42, 43, 46, 54, 55, 58, 61, 62, 63, 64], "10": [0, 2, 10, 12, 14, 16, 17, 18, 20, 22, 23, 34, 36, 48, 49, 50, 51, 53, 61, 62, 63, 64], "impact": 0, "neglig": 0, "With": [0, 2, 3, 55, 56, 62, 63], "0": [0, 1, 2, 3, 10, 11, 12, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64], "4": [0, 1, 2, 12, 35, 40, 44, 45, 47, 56, 57, 58, 60, 61, 62, 63], "4x": 0, "over": [0, 14, 18, 20, 49, 51, 62], "localuniform": [0, 12], "layer": [0, 12, 14, 15, 18, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 62], "rgcn": [0, 3, 61, 63, 64], "mag": [0, 1, 61, 62], "dataset": [0, 1, 11, 14, 15, 18, 19, 20, 21, 23, 27, 28, 32, 48, 49, 50, 51, 56, 58, 61, 62, 63, 64], "g5": 0, "48x": 0, "instanc": [0, 1, 3, 12, 48, 56, 58, 60, 62, 64], "hetergeni": 0, "we": [0, 1, 2, 3, 10, 11, 12, 14, 18, 27, 28, 34, 35, 37, 38, 39, 43, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "often": [0, 1], "minim": [0, 10, 53], "object": [0, 3, 10, 14, 15, 18, 19, 20, 21, 25, 26, 45, 49, 50, 51, 62], "function": [0, 4, 12, 25, 26, 27, 28, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 63], "one": [0, 2, 3, 10, 11, 12, 24, 25, 29, 37, 38, 39, 54, 55, 58, 61, 63, 64], "achiev": [0, 1, 55, 59, 64], "goal": [0, 53], "The": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 64], "edit": 0, "target_ntyp": [0, 3, 12, 48, 61, 63], "config": [0, 2, 3, 10, 12, 53, 54, 55, 56, 58, 61, 63, 64], "yaml": [0, 1, 2, 12, 53, 60, 61, 62, 64], "file": [0, 1, 2, 10, 11, 12, 16, 17, 22, 23, 30, 31, 32, 33, 48, 49, 50, 51, 53, 54, 55, 60, 64], "defin": [0, 3, 10, 11, 12, 24, 25, 26, 27, 28, 29, 37, 38, 39, 42, 49, 50, 51, 54, 62, 64], "mutipl": 0, "For": [0, 1, 3, 10, 11, 12, 24, 25, 29, 37, 38, 39, 43, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "exampl": [0, 1, 2, 3, 11, 12, 24, 25, 29, 56, 59, 60, 61, 62, 64], "follow": [0, 1, 2, 3, 4, 10, 12, 17, 41, 42, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64], "jointli": 0, "optim": [0, 1, 3, 12, 37, 38, 39, 48, 49, 50, 51, 64], "movi": [0, 12, 54, 58], "evuat": 0, "singl": [0, 1, 3, 10, 12, 54, 55, 56, 58, 59, 60, 61, 62, 64], "evalu": [0, 16, 17, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 48, 49, 50, 51, 63, 64], "eval_target_ntyp": 0, "perform": [0, 2, 3, 11, 12, 13, 31, 32, 33, 48, 49, 50, 51, 53, 58, 59, 62, 63, 64], "our": [0, 3, 53, 56, 57, 58, 62], "current": [0, 1, 2, 3, 8, 10, 11, 12, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 62, 63, 64], "per": [0, 2, 12, 18, 28, 58, 61, 63], "decod": [0, 8, 12, 16, 17, 27, 28, 37, 38, 39, 48, 49, 50, 51, 62], "want": [0, 2, 3, 6, 10, 11, 12, 15, 19, 21, 27, 28, 37, 38, 39, 53, 55, 56, 59, 60, 62, 63], "us": [0, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 54, 56, 58, 59, 60, 64], "differ": [0, 1, 3, 5, 6, 7, 8, 9, 12, 16, 17, 22, 23, 27, 28, 36, 41, 54, 58, 61, 62, 63], "where": [0, 1, 3, 10, 12, 14, 16, 17, 18, 20, 22, 23, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 62], "output": [0, 1, 2, 3, 11, 12, 36, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 61, 62, 64], "dimens": [0, 10, 12, 34, 35, 36, 40, 41, 44, 45, 47], "mayb": 0, "num_class": [0, 3, 12, 61, 63], "creat": [0, 2, 3, 37, 38, 39, 49, 50, 51, 54, 55, 56, 57, 58, 62, 63, 64], "3": [0, 1, 2, 12, 24, 25, 26, 27, 28, 29, 40, 44, 45, 47, 54, 58, 60, 61, 62], "7": [0, 3, 53, 54, 60, 62, 64], "reweight": 0, "loss": [0, 3, 12, 37, 38, 39, 49, 51], "custom": [0, 5, 6, 15, 19, 21, 57, 59, 60, 62], "which": [0, 1, 2, 3, 10, 12, 14, 18, 20, 41, 42, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64], "multilabel": [0, 3, 12, 24, 40, 63], "multilabel_weight": [0, 12], "imbalance_class_weight": [0, 12], "ar": [0, 1, 2, 3, 10, 11, 12, 14, 16, 17, 18, 22, 23, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64], "illustr": 0, "doe": [0, 3, 12, 33, 37, 38, 39, 57, 58, 61, 64], "5": [0, 12, 14, 18, 20, 61], "fals": [0, 3, 12, 14, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 44, 45, 47, 50, 61, 63], "transfer": [1, 30], "most": [1, 10, 13, 53, 63], "expens": 1, "modul": [1, 3, 5, 8, 12, 42, 54], "deal": [1, 3], "240m": 1, "approxim": 1, "75": 1, "epoch": [1, 3, 12, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 61, 62, 63, 64], "time": [1, 2, 10, 12, 56, 61, 63], "spent": 1, "remot": 1, "machin": [1, 3, 5, 6, 12, 13, 53, 54, 55, 56, 59, 60, 61, 62, 64], "address": [1, 3, 60, 62, 64], "critic": 1, "bottleneck": [1, 58], "leverag": [1, 2, 3, 59, 61, 62, 63], "nvidia": [1, 60, 61, 62], "": [1, 2, 10, 12, 14, 16, 17, 18, 19, 20, 22, 23, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64], "librari": [1, 3, 53, 55, 57, 58, 62], "procedur": [1, 2], "copi": [1, 61, 62, 63], "cpu": [1, 3, 14, 16, 17, 18, 22, 23, 48, 51, 60, 62], "gpu": [1, 2, 3, 12, 60, 61, 62, 64], "local": [1, 3, 12, 16, 17, 22, 31, 32, 33, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 62, 63], "through": [1, 12, 62], "util": [1, 56, 62], "elast": [1, 55, 62], "fabric": 1, "adapt": 1, "network": [1, 8, 12, 35, 42, 43, 60, 61, 62, 64], "interfac": [1, 59], "collect": [1, 59], "commun": [1, 3, 12, 61, 62], "abl": [1, 53, 56, 57], "8x": 1, "speedup": [1, 12], "end": [1, 3, 12, 24, 25, 26, 27, 28, 29, 48, 49, 51, 54, 58, 62], "compar": [1, 2, 3], "non": [1, 12, 63], "counterpart": 1, "p4d": 1, "amazon": [1, 12, 53, 58, 59, 60], "ec2": [1, 60, 61, 62], "an": [1, 2, 3, 12, 14, 15, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 37, 38, 39, 42, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 64], "experiment": 1, "access": [1, 12, 56, 58, 61, 62], "add": [1, 2, 10, 11, 12, 24, 25, 29, 34, 35, 44, 45, 62], "next": [1, 3, 54, 63, 64], "releas": [1, 8], "hardwar": 1, "cluster": [1, 3, 12, 55, 56, 58, 59, 62, 64], "p3dn": 1, "24xlarg": [1, 56], "p5": 1, "48xlarg": 1, "enabl": [1, 12, 53, 59, 62], "secur": [1, 62], "group": [1, 53], "pleas": [1, 2, 3, 5, 10, 12, 46, 59, 60, 61, 62, 63, 64], "step": [1, 2, 11, 12, 49, 51, 53, 55, 57, 58, 59, 60, 61, 64], "prepar": [1, 3, 16, 17, 22, 23, 55, 57, 58, 59, 60, 61, 64], "you": [1, 2, 11, 12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "instal": [1, 56, 61, 62], "your": [1, 2, 10, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64], "document": [1, 12, 53, 56, 58, 60, 61, 62], "suggest": [1, 10, 12, 60, 61, 62, 63], "toolkit": [1, 2, 63, 64], "without": [1, 54, 58, 60, 61, 62], "preinstal": [1, 60], "command": [1, 2, 3, 12, 58, 59, 60, 61, 62, 63, 64], "sudo": [1, 53, 55, 57, 60], "apt": [1, 53, 55, 60], "get": [1, 10, 16, 17, 22, 23, 26, 31, 32, 33, 53, 57, 58, 60], "updat": [1, 12, 42, 53, 60], "io": [1, 54, 60], "git": [1, 53, 57, 58, 60, 62], "clone": [1, 2, 58, 62, 63, 64], "http": [1, 10, 43, 48, 53, 54, 57, 58, 60, 62], "github": [1, 53, 54, 57, 58, 59, 60, 62], "com": [1, 10, 53, 54, 56, 57, 58, 60, 62], "awslab": [1, 54, 57, 58, 60, 62], "cd": [1, 2, 55, 57, 58, 60, 62, 63], "path": [1, 2, 3, 10, 11, 12, 16, 17, 22, 23, 30, 31, 32, 33, 34, 36, 37, 38, 39, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 63, 64], "bash": [1, 53, 56, 57, 60, 61, 62], "build_docker_wholegraph": 1, "sh": [1, 57, 60, 62], "name": [1, 2, 3, 10, 11, 12, 16, 17, 22, 23, 42, 43, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64], "tag": [1, 57, 60, 62], "There": [1, 2, 3, 10, 12, 59, 60, 62, 63], "three": [1, 2, 3, 8, 10, 12, 14, 15, 20, 21, 31, 33, 60, 61, 62, 63, 64], "requir": [1, 2, 10, 11, 12, 13, 14, 18, 20, 36, 37, 38, 39, 53, 54, 55, 57, 60, 61, 62, 64], "absolut": [1, 12, 60, 62], "folder": [1, 2, 3, 10, 11, 12, 48, 49, 50, 51, 60, 62, 63, 64], "code": [1, 3, 4, 13, 57, 59, 61, 62], "could": [1, 2, 3, 12, 48, 49, 50, 51, 54, 58, 60, 61, 62, 63], "option": [1, 3, 10, 12, 31, 32, 33, 35, 40, 41, 42, 43, 44, 45, 46, 47, 54, 57, 62], "assign": [1, 10, 48, 49, 51, 54, 60, 62, 63], "built": [1, 3, 6, 57, 59, 60, 61, 62, 63, 64], "default": [1, 3, 10, 11, 12, 18, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 60, 62, 63, 64], "below": [1, 2, 3, 10, 12, 53, 55, 60, 61, 62, 63, 64], "check": [1, 3, 12, 24, 25, 26, 27, 28, 29, 53, 55, 58, 60, 62, 63, 64], "new": [1, 3, 11, 12, 41, 53, 58, 60, 61, 62], "successfulli": [1, 59, 60, 61, 62], "l": [1, 41, 42, 43, 46, 53, 56, 58, 60, 62], "If": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 24, 28, 41, 42, 46, 48, 49, 51, 54, 56, 58, 60, 61, 62, 63, 64], "succe": [1, 60, 61], "should": [1, 2, 3, 7, 9, 10, 11, 12, 15, 19, 21, 36, 37, 38, 39, 40, 44, 45, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64], "base": [1, 2, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 45, 48, 49, 50, 51, 53, 56, 59, 60, 62, 63], "previou": [1, 55, 60, 61], "make": [1, 3, 11, 26, 37, 39, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 61, 62, 63, 64], "sure": [1, 3, 26, 46, 55, 56, 61, 62, 63, 64], "privileg": 1, "host": [1, 12, 57, 60, 61, 62], "map": [1, 10, 12, 14, 18, 31, 32, 33, 54, 58, 61, 63, 64], "ipc": 1, "ulimit": 1, "memlock": 1, "stack": 1, "67108864": 1, "d": [1, 41, 53, 60, 61, 62], "t": [1, 10, 41, 43, 53, 57, 60, 62], "daemon": [1, 60, 61], "Then": [1, 2, 3, 12, 60, 61, 62, 63, 64], "connect": [1, 60, 61], "exec": [1, 60, 61], "bin": [1, 53, 60, 61, 64], "prompt": [1, 60], "chang": [1, 2, 3, 12, 53, 58, 60, 63], "like": [1, 3, 5, 8, 12, 46, 54, 56, 60, 61, 62, 63, 64], "root": [1, 42, 53, 55, 60, 61], "ip": [1, 2, 3, 12, 60, 63, 64], "softwar": [1, 59], "ensur": [1, 48, 49, 50, 51, 55, 56, 62], "thoroughli": 1, "improp": 1, "automat": [1, 3, 54, 61, 62, 63, 64], "revert": 1, "displai": 1, "error": [1, 2, 53, 56], "confirm": 1, "compon": [1, 3, 8, 58], "were": [1, 3, 12, 58, 62], "fi_info": 1, "p": [1, 61, 64], "fi_ep_rdm": 1, "return": [1, 3, 12, 31, 33], "inform": [1, 2, 3, 10, 12, 18, 32, 48, 57, 61, 62], "about": [1, 12, 53, 61, 63, 64], "libfabr": 1, "show": [1, 2, 3, 10, 63, 64], "g4dn": [1, 61, 64], "metal": 1, "domain": 1, "efa_0": 1, "rdm": 1, "version": [1, 2, 3, 53, 54, 55, 57, 60, 61, 62, 63, 64], "118": 1, "20": [1, 3, 12, 56], "type": [1, 2, 3, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 31, 33, 34, 35, 36, 41, 42, 43, 48, 49, 50, 51, 53, 54, 55, 56, 58, 61, 62, 63, 64], "protocol": 1, "fi_proto_efa": 1, "multipl": [1, 3, 10, 12, 37, 38, 39, 42, 53, 54, 58, 62, 63], "after": [1, 10, 12, 42, 55, 58, 61, 62, 64], "mpirun": 1, "while": [1, 58], "nccl_debug": [1, 12], "x": [1, 3, 56, 62], "info": [1, 12, 53, 62], "allow": [1, 2, 10, 11, 12, 48, 54, 55, 56, 58, 59, 61], "n": [1, 12, 41, 42, 43, 46, 48, 49, 50, 51, 60], "sum": [1, 3, 11, 54], "num_gpu": 1, "h": [1, 3, 12, 40, 41, 42, 43, 44, 45, 46, 47], "ip1": 1, "instance1": 1, "ip2": 1, "instance2": 1, "ip3": 1, "bind": 1, "none": [1, 3, 12, 14, 16, 17, 18, 20, 22, 23, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 63], "alltoall_perf_mpi": 1, "duint8": 1, "b8": 1, "e2g": 1, "f2": 1, "g1": 1, "tee": 1, "hold": 1, "resembl": [1, 53, 62], "screenshot": 1, "net": 1, "ofi": 1, "select": [1, 3, 10, 12, 28, 42, 48, 49, 50, 51, 56], "typic": 1, "store": [1, 10, 11, 12, 16, 17, 22, 23, 24, 25, 29, 31, 32, 33, 34, 36, 37, 54, 61, 62, 63], "node_feat": [1, 3, 16, 17, 37, 38, 39, 54, 61, 63, 64], "partit": [1, 3, 10, 12, 13, 16, 17, 22, 23, 31, 32, 33, 54, 55, 58, 60], "must": [1, 2, 3, 11, 12, 58, 63], "construct": [1, 3, 11, 13, 14, 18, 20, 61], "raw": [1, 3, 10, 53, 54, 61, 64], "data": [1, 8, 10, 12, 14, 15, 16, 17, 20, 21, 22, 23, 27, 28, 32, 42, 48, 49, 50, 51, 54, 55, 59, 60, 61], "distdgl": [1, 10, 58, 61, 62], "tutori": [1, 2, 3, 10, 57, 60, 61, 62], "convert_feat_to_wholegraph": 1, "py": [1, 2, 3, 54, 56, 58, 61, 62, 63, 64], "script": [1, 2, 3, 11, 53, 54, 55, 56, 58, 60, 62, 64], "point": [1, 10, 12, 58, 62], "specifi": [1, 2, 3, 10, 11, 12, 31, 32, 33, 34, 35, 42, 54, 61, 62, 63, 64], "transform": [1, 2, 40, 41, 58], "feat": [1, 2, 3, 10, 12, 22, 23, 34, 35, 40, 44, 45, 47, 61, 63], "python3": [1, 2, 3, 53, 57, 60, 61, 62, 63, 64], "ogbn": [1, 62, 64], "mag240m": 1, "2p": 1, "author": [1, 2, 3, 10, 11, 41, 61, 63], "feat1": 1, "feat2": 1, "institut": 1, "abov": [1, 2, 3, 57, 58, 60, 61, 62, 63, 64], "under": [1, 2, 10, 53, 54, 55, 56, 58, 59, 61, 62, 63], "input": [1, 2, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 55, 56, 61, 62, 64], "And": [1, 2, 3, 11, 12, 53, 61, 62, 63], "trim": 1, "attribut": 1, "leav": [1, 3, 64], "label": [1, 3, 10, 11, 12, 16, 17, 22, 23, 24, 25, 29, 37, 39, 54, 58, 61], "intact": 1, "keep": [1, 11, 12, 61], "origin": [1, 3, 10, 11, 34, 35, 58, 63], "bak": 1, "complet": [1, 2, 55, 56, 57, 61, 62], "outlin": 1, "becom": [1, 10, 46, 62, 63], "straightforward": 1, "process": [1, 2, 7, 9, 10, 12, 27, 28, 52, 53, 56, 59, 60, 62, 63], "onc": [1, 2, 3, 12, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64], "correctli": 1, "initi": [1, 3, 4, 12, 61, 62], "regular": [1, 3, 12], "within": [1, 3, 12, 40, 44, 45, 47, 54, 61, 62, 63], "seamless": 1, "doesn": [1, 53, 57], "addit": [1, 2, 10, 53, 55, 58, 59, 61], "system": [1, 12, 53, 55, 58, 60, 62], "detect": [1, 57], "avail": [1, 34, 35, 54, 55, 57, 58, 60, 61, 63], "m": [1, 2, 3, 41, 61, 63, 64], "gs_link_predict": [1, 61], "workspac": [1, 2, 3, 10, 12, 61, 63, 64], "ogbn_mag_lp": 1, "num_train": [1, 34, 36], "num_serv": 1, "num_sampl": 1, "part_config": [1, 3, 16, 17, 22, 23, 48, 49, 50, 51], "ogbn_mag_lp_2p": 1, "json": [1, 2, 3, 54, 55, 56, 58, 61, 64], "ip_config": [1, 3, 4, 30], "ip_list": [1, 2, 3, 4, 30, 61, 63, 64], "txt": [1, 2, 3, 4, 30, 61, 63, 64], "ssh_port": 1, "2222": [1, 2, 3, 60, 61, 63, 64], "graph_format": 1, "csc": [1, 12, 61], "coo": [1, 12, 61], "cf": [1, 2, 61, 63, 64], "training_script": [1, 12, 60, 61, 62, 64], "gsgnn_lp": [1, 61, 62], "mag_lp": [1, 61, 62], "mani": [2, 3, 12], "real": [2, 10, 61, 62], "world": 2, "content": [2, 24, 25, 29, 53, 58, 61, 62, 63, 64], "titl": [2, 10], "descript": [2, 3, 12, 58, 61, 62], "product": [2, 42, 60, 62], "question": 2, "comment": 2, "from": [2, 3, 8, 10, 12, 14, 16, 17, 18, 20, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 61, 62, 63], "lm": [2, 10, 12, 34, 36], "huggingfac": [2, 10], "emb": [2, 3, 12, 37, 38, 39, 48, 49, 50, 51, 62, 63], "embed": [2, 3, 8, 10, 11, 12, 18, 31, 32, 33, 34, 35, 36, 37, 38, 39, 50, 62, 63], "train": [2, 9, 10, 11, 13, 14, 17, 18, 20, 23, 24, 25, 27, 28, 29, 30, 32, 37, 38, 39, 48, 49, 50, 51, 53, 54, 55, 58, 59], "mode": [2, 3, 48, 59, 61, 62], "speed": [2, 3, 10, 53, 59], "fast": 2, "memori": [2, 3, 10, 12, 55, 56, 61], "consumpt": 2, "lower": [2, 3, 12], "case": [2, 3, 8, 12, 13, 27, 28, 34, 35, 37, 38, 39, 48, 49, 50, 51, 54, 56, 59, 62], "fit": [2, 14, 18, 20, 25, 26, 27, 28, 48, 49, 50, 51, 55], "well": [2, 37, 38, 39, 57, 60], "fail": [2, 3], "improv": [2, 12], "co": [2, 12], "gml": [2, 3, 6, 13, 59, 63, 64], "same": [2, 10, 12, 26, 36, 41, 42, 53, 54, 56, 58, 61, 62, 63], "consum": [2, 12, 55, 61], "much": [2, 53], "particularli": [2, 3, 64], "take": [2, 3, 12, 14, 18, 20, 37, 38, 39, 54, 55, 57, 61, 62, 63, 64], "longer": 2, "own": [2, 8, 10, 54, 58, 59, 62, 64], "minor": 2, "tool": [2, 3, 10, 11, 12, 53, 57, 60, 61, 62, 63, 64], "token": [2, 10, 11, 12, 62], "run": [2, 12, 14, 18, 20, 37, 48, 49, 51, 52, 57, 59, 60, 61, 63, 64], "docker": [2, 53, 55, 59, 61, 63, 64], "contain": [2, 3, 4, 8, 10, 12, 18, 19, 38, 48, 49, 50, 51, 54, 55, 58, 62, 63, 64], "refer": [2, 3, 10, 55, 61, 62, 63, 64], "environ": [2, 4, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64], "setup": [2, 4, 16, 17, 22, 52, 55, 56, 58, 59, 63, 64], "up": [2, 3, 10, 31, 32, 33, 48, 49, 50, 51, 53, 56, 58, 59, 61, 63], "pip": [2, 55, 62, 63, 64], "packag": [2, 4, 53, 54, 55, 63, 64], "replac": [2, 60, 61, 62, 63, 64], "occurr": [2, 63, 64], "ssh": [2, 3, 12, 61, 63, 64], "port": [2, 3, 12, 60, 62, 63, 64], "22": [2, 60, 62, 63, 64], "acm": [2, 3], "demonstr": [2, 3, 56, 57, 58, 61, 63, 64], "how": [2, 10, 11, 12, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64], "first": [2, 3, 8, 12, 14, 18, 20, 58, 59, 60, 61, 62, 63, 64], "go": [2, 63], "raw_w_text": 2, "format": [2, 11, 12, 27, 28, 31, 32, 33, 54, 55, 58, 61, 62, 64], "acm_data": [2, 63], "tmp": [2, 4, 10, 30, 37, 38, 39, 58, 63, 64], "acm_raw": [2, 63], "success": 2, "similar": [2, 3, 10, 54, 61, 62, 63], "But": [2, 3, 12], "few": [2, 58, 61], "extra": [2, 12, 36, 60], "line": [2, 3, 10, 12, 63], "list": [2, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 41, 42, 43, 48, 49, 50, 51, 54, 58, 62, 63], "column": [2, 10, 54, 58, 63], "thei": [2, 10, 12, 15, 19, 21, 54, 55, 58, 61, 63], "contruct": 2, "snippet": 2, "It": [2, 10, 12, 16, 17, 22, 23, 34, 35, 37, 38, 39, 48, 49, 50, 51, 53, 56, 58, 59, 61, 63, 64], "indic": [2, 3, 10, 12, 14, 16, 17, 18, 19, 20, 22, 32, 50, 54], "uncas": [2, 34, 36], "node_typ": [2, 3, 10, 34, 36, 63], "parquet": [2, 10, 12, 54, 55, 58, 63], "node_id_col": [2, 10, 63], "node_id": [2, 10, 54, 63], "feature_col": [2, 10, 63], "feature_nam": [2, 3, 10, 63], "tokenize_hf": [2, 10], "bert_model": [2, 10], "max_seq_length": [2, 10], "16": [2, 12, 34, 36], "gconstruct": [2, 10, 54, 55, 56, 58, 62, 63], "construct_graph": [2, 63], "conf": [2, 10, 63], "dir": [2, 10, 63], "acm_nc": [2, 3, 63], "num": [2, 3, 10, 11, 12, 44, 58, 61, 62, 63, 64], "part": [2, 3, 10, 11, 12, 58, 61, 62, 63, 64], "outcom": [2, 61, 62, 64], "notic": [2, 3, 62], "subject": [2, 3, 63], "input_id": 2, "attention_mask": 2, "token_type_id": 2, "full": [2, 3, 12, 40, 44, 45, 47, 57, 62], "acm_lm_nc": 2, "locat": [2, 54, 55, 58, 62], "use_your_own_data": [2, 63], "lm_model": 2, "node_lm_model": 2, "lm_type": [2, 34, 36], "model_nam": [2, 34, 36], "gradient_checkpoint": [2, 34, 36], "sever": [2, 40, 44, 45, 47, 61], "repos": 2, "choos": [2, 10, 12], "roberta": [2, 10], "albert": [2, 10], "camembert": [2, 10], "erni": [2, 10], "ibert": [2, 10], "luke": [2, 10], "mega": [2, 10], "mpnet": [2, 10], "nezha": [2, 10], "qdqbert": [2, 10], "roc_bert": [2, 10], "valu": [2, 3, 10, 11, 12, 24, 27, 28, 29, 37, 41, 54, 56, 58, 62, 63], "field": [2, 3, 10, 11, 12, 16, 17, 22, 23, 54, 61, 63], "here": [2, 3, 10, 12, 54, 55, 56, 60, 61, 64], "standalon": [2, 59, 62], "touch": [2, 63, 64], "echo": [2, 56, 63, 64], "127": [2, 60, 63, 64], "almost": 2, "except": [2, 3, 62], "gs_node_classif": [2, 61, 63, 64], "trainer": [2, 12, 14, 18, 20, 26, 48, 49, 50, 51, 61, 63, 64], "server": [2, 3, 12, 61, 63, 64], "sampler": [2, 3, 12, 31, 32, 33, 48, 49, 50, 51, 61, 63, 64], "save": [2, 3, 11, 26, 31, 32, 33, 37, 38, 39, 48, 49, 50, 51, 61, 62, 63, 64], "comput": [2, 3, 10, 12, 18, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 48, 49, 50, 51, 52, 56, 62, 64], "concaten": 2, "togeth": [2, 12], "either": [2, 3, 10, 12, 48, 49, 50, 51, 53, 54, 58, 63], "determin": [2, 12, 54, 58, 62], "mini": [2, 12, 14, 15, 18, 19, 20, 21, 31, 32, 33, 37, 38, 39, 48, 49, 50, 51], "batch": [2, 12, 14, 15, 18, 19, 20, 21, 31, 32, 33, 34, 36, 37, 38, 39, 48, 49, 50, 51, 62], "becaus": [2, 3, 11, 61, 62, 63, 64], "normal": [2, 3, 10, 40, 41, 42, 43, 44, 45, 46, 47], "larg": [2, 3, 10, 12, 46, 56, 59, 62, 63], "out": [2, 3], "oom": 2, "smaller": [2, 10], "number": [2, 3, 10, 11, 12, 18, 24, 25, 26, 27, 28, 29, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 62, 63], "reduc": [2, 12], "overal": [2, 12], "anoth": [2, 60], "encod": [2, 10, 12, 34, 35, 36, 40, 44, 45, 47, 54, 55, 58], "control": [2, 3, 11, 12], "whether": [2, 10, 12, 14, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 44, 45, 48, 49, 50, 51], "just": [2, 3, 43, 48, 49, 50, 51, 53, 54, 57, 58], "awar": 2, "ha": [3, 10, 12, 24, 25, 26, 27, 28, 29, 36, 42, 48, 49, 50, 51, 54, 55, 58, 60, 61, 62, 63, 64], "rgat": [3, 63], "further": 3, "explor": 3, "eas": 3, "scalabl": [3, 59, 61], "accord": [3, 18], "explain": [3, 10], "runnabl": 3, "hgt": [3, 40, 41], "befor": [3, 11, 12, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 55, 56, 61, 62, 64], "meet": 3, "framework": [3, 48, 59, 62], "come": [3, 59], "distribut": [3, 7, 9, 10, 12, 18, 22, 30, 34, 35, 36, 45, 52, 53, 55, 57, 58, 59, 60, 62, 64], "reason": [3, 48, 49, 50, 51], "via": [3, 12, 62], "guid": [3, 56, 57, 58, 61], "materi": 3, "exist": [3, 10, 54, 57, 58, 63], "popular": 3, "academ": 3, "enterpris": [3, 59, 61], "level": [3, 10, 31, 32, 33, 50, 53, 54, 61, 62], "rel": [3, 12, 54, 55], "lack": 3, "node": [3, 6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 48, 50, 51, 55, 56, 59, 61, 62, 64], "featur": [3, 8, 11, 12, 14, 16, 17, 18, 20, 22, 23, 30, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46, 55, 58, 59, 62, 63, 64], "therefor": [3, 10, 61, 62, 63, 64], "implementor": 3, "feed": [3, 12], "entir": [3, 10, 48, 49, 50, 51, 54], "along": [3, 53, 54, 63], "its": [3, 10, 12, 40, 44, 45, 47, 53, 54, 56, 58, 62, 63, 64], "due": [3, 61], "limit": [3, 12, 61, 63], "slow": 3, "order": [3, 12, 58, 62], "tackl": 3, "stochast": 3, "chapter": 3, "between": [3, 10, 12, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 61, 63, 64], "look": [3, 58, 61, 62, 63], "_mb": 3, "string": [3, 10, 12, 24, 25, 26, 29, 54, 58, 62, 63], "dist": [3, 16, 17, 23], "graphsag": [3, 46, 47], "rest": [3, 54, 62], "assum": [3, 12, 54, 56, 57, 58, 63], "execut": [3, 12, 53, 54, 55, 56, 58, 62], "section": [3, 5, 10, 54, 60, 61, 62], "plug": 3, "kei": [3, 10, 54, 61, 62, 63], "class": [3, 5, 6, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 64], "gsgnnnodemodelbas": 3, "gsgnnedgemodelbas": 3, "gsgnnlinkpredictionmodelbas": 3, "inherit": [3, 37, 38, 39], "depend": [3, 55, 57, 63, 64], "nn": [3, 12, 42, 43, 46], "def": [3, 37, 38, 39], "__init__": 3, "self": [3, 10, 12, 16, 17, 22, 37, 38, 39, 42, 43, 44, 49, 51, 54], "super": 3, "htg": 3, "forward": [3, 37, 38, 39, 62], "out_kei": 3, "ntype": [3, 11, 12, 41, 61, 63], "n_id": 3, "node_dict": 3, "f": [3, 60, 62], "gelu": 3, "adapt_w": 3, "inp": 3, "rang": [3, 59], "n_layer": 3, "gc": 3, "Its": [3, 54], "predict": [3, 6, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 48, 49, 50, 51, 54, 58, 61, 62, 63, 64], "As": [3, 53, 61, 62], "revis": 3, "shown": [3, 63, 64], "hgt_mb": 3, "block": [3, 10, 14, 15, 18, 19, 20, 21, 37, 38, 39, 56], "n_feats_dict": 3, "out_ntyp": 3, "emb_id": 3, "ntype_id_map": 3, "n_emb": 3, "ntype_emb": 3, "torch": [3, 12, 14, 18, 20, 30, 37, 38, 39, 42, 43, 45, 46, 60], "tensor": [3, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 42, 46, 63, 64], "num_nod": 3, "long": [3, 54], "devic": [3, 14, 16, 17, 18, 20, 22, 23, 31, 32, 33, 48, 49, 50, 51, 52], "els": 3, "dictionari": [3, 10, 48, 49, 50, 51, 54, 62, 63], "work": [3, 56, 57, 58, 59, 60, 62], "pytorch": [3, 12, 16, 17, 22, 23, 31, 32, 33, 48, 49, 50, 51, 60, 64], "extens": 3, "edge_feat": [3, 10, 16, 17, 37, 38, 39, 61, 63, 64], "input_nod": [3, 16, 17, 22, 23, 37, 38, 39], "create_optim": [3, 37, 38, 39], "whose": [3, 10, 61, 63, 64], "associ": [3, 11, 31, 32, 33, 48, 49, 50, 51, 63], "NOT": [3, 10, 42, 61, 63], "so": [3, 11, 12, 53, 55, 56, 57, 58, 61, 62, 63], "unlik": [3, 62], "common": [3, 54, 63], "logit": 3, "backward": [3, 49, 51], "oper": [3, 13, 60, 61, 62, 64], "instead": [3, 12, 55, 56, 61, 63], "outsid": 3, "ad": [3, 12, 42, 43, 46], "gsmodel": 3, "_loss_fn": 3, "classifylossfunc": 3, "cuda": [3, 12, 31, 32, 33, 48, 49, 50, 51], "expand": 3, "num_lay": [3, 12, 61, 63], "item": [3, 54], "pred_loss": 3, "alreadi": [3, 11, 63], "classif": [3, 8, 10, 11, 20, 24, 31, 33, 37, 48, 49, 51, 54, 58, 61, 62, 64], "regress": [3, 8, 10, 11, 31, 33, 48, 49, 51, 54, 62, 63], "link": [3, 6, 8, 11, 18, 19, 27, 28, 32, 38, 50, 54, 61, 62, 63], "easili": [3, 61], "import": [3, 4, 10, 14, 16, 17, 18, 20, 22, 23, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 61, 63], "free": [3, 59, 61], "even": [3, 12, 34, 35, 53], "variabl": [3, 54, 62], "result": [3, 8, 11, 12, 24, 25, 29, 31, 33, 37, 39, 42, 48, 49, 50, 51, 54, 61, 62, 64], "second": [3, 14, 18, 20, 58, 64], "probabl": [3, 12], "return_proba": [3, 12, 31, 33, 37, 39, 48, 49, 51], "otherwis": [3, 11, 12, 37, 39, 63], "purpos": 3, "_": [3, 41], "argmax": 3, "dim": 3, "softmax": [3, 41], "adam": [3, 12], "paramet": [3, 13, 40, 54, 58, 62, 63], "lr": [3, 12, 61, 63], "restore_model": [3, 37, 38, 39, 48, 49, 50, 51], "restore_model_path": [3, 12, 37, 38, 39, 61, 63], "save_model": [3, 37, 38, 39, 48, 49, 50, 51], "model_path": [3, 37, 38, 39, 48, 49, 50, 51], "restor": [3, 37, 38, 39, 48, 49, 50, 51, 63, 64], "too": [3, 11, 63], "unimpl": 3, "readi": [3, 41, 42, 43, 46, 53, 55, 61], "trainingon": 3, "method": [3, 5, 6, 8, 9, 10, 15, 19, 21, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 60, 63, 64], "infernec": [3, 59], "proper": [3, 56], "arg": [3, 53], "backend": [3, 4, 12, 30, 58, 61, 62, 63], "gloo": [3, 4, 12, 30, 61, 62, 63], "find": [3, 12, 58, 59, 63], "quick": [3, 59, 61, 63], "load": [3, 12, 37, 38, 39, 48, 49, 50, 51, 54, 61, 62], "gsgnnnodetraindata": [3, 20, 34, 35, 36, 40, 44, 45, 47, 48, 51], "gsgnnedgetraindata": [3, 14, 18, 49, 50], "train_data": 3, "graph_nam": [3, 10, 16, 17, 22, 23], "train_ntyp": [3, 23], "node_feat_field": [3, 16, 17, 22, 23], "label_field": [3, 12, 16, 17, 22, 23, 61, 63], "consist": [3, 62], "label_col": [3, 10, 63], "gsgnnnodedataload": [3, 22, 23, 48, 51], "train_idx": [3, 63], "fanout": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 48, 49, 50, 51, 61, 62, 63], "batch_siz": [3, 12, 14, 16, 17, 18, 20, 22, 23, 48, 49, 50, 51, 61, 63], "train_task": [3, 14, 18, 20], "eval_dataload": 3, "val_idx": [3, 63], "eval_batch_s": [3, 12, 61], "test_dataload": 3, "test_idx": [3, 16, 22, 63], "henc": [3, 59, 63], "index": [3, 60, 63], "extract": [3, 16, 17, 22, 23, 58, 63], "target": [3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 37, 41, 54, 56, 61, 63], "split_pct": [3, 10, 63], "properti": [3, 24, 25, 29, 31, 32, 33, 48, 49, 50, 51], "directli": [3, 4, 31, 32, 33, 50, 54, 58, 62], "graph_data": 3, "scikit": 3, "creation": [3, 61], "easi": [3, 13, 61, 63, 64], "edge_dict": 3, "n_inp_dict": 3, "nfeat_dim": 3, "n_hid": 3, "hidden_s": [3, 12, 61, 63], "n_out": 3, "num_head": [3, 12, 40, 41, 43, 44, 45], "use_norm": [3, 41], "alpha_l2norm": [3, 12, 35, 40, 44, 45, 47, 48, 49, 50, 51, 63], "gsgnnnodepredictiontrain": [3, 20, 48], "gsgnnaccevalu": [3, 25, 29], "eval_frequ": [3, 12, 24, 25, 26, 27, 28, 29], "eval_metr": [3, 12, 24, 25, 26, 29], "use_early_stop": [3, 12, 24, 25, 26, 27, 28, 29], "early_stop_burnin_round": [3, 12, 24, 25, 26, 27, 28, 29], "early_stop_round": [3, 12, 24, 25, 26, 27, 28, 29], "early_stop_strategi": [3, 12, 24, 25, 26, 27, 28, 29], "setup_evalu": [3, 31, 32, 33, 48, 49, 50, 51], "progress": [3, 26], "gssagemakertasktrack": 3, "setup_task_track": 3, "help": [3, 11, 53, 57, 59, 62, 64], "metric": [3, 12, 24, 25, 26, 27, 28, 29, 63], "accuraci": [3, 12], "f1": 3, "mrr": [3, 12, 27, 28], "etc": [3, 12, 58, 63], "serv": [3, 59], "log": [3, 12, 62, 64], "collector": 3, "last": [3, 12, 44, 45, 48, 49, 50, 51, 63], "train_load": [3, 48, 49, 50, 51], "num_epoch": [3, 12, 14, 18, 20, 48, 49, 50, 51, 61, 63], "val_load": [3, 48, 49, 50, 51], "test_load": [3, 48, 49, 50, 51], "save_model_path": [3, 12, 48, 49, 50, 51, 61, 63], "use_mini_batch_inf": [3, 12, 31, 32, 33, 48, 49, 50, 51, 63], "seen": 3, "artifact": [3, 12, 61, 62], "BUT": 3, "uncommonli": 3, "frequent": 3, "occur": 3, "parallel": [3, 55, 56], "inner": [3, 43], "mechan": [3, 40, 44, 45, 47], "One": [3, 12, 46, 58], "wai": [3, 12, 27, 28, 62, 63], "solv": 3, "trainabl": [3, 34, 36], "blow": 3, "reg_loss": 3, "l2": [3, 12], "dens": [3, 12, 37, 38, 39], "d_para": 3, "squar": [3, 42], "coeffici": [3, 12], "influenc": 3, "verbos": [3, 12, 54, 61, 63], "local_rank": [3, 4, 52], "although": [3, 54, 63], "anywher": 3, "A": [3, 8, 10, 12, 14, 15, 18, 19, 20, 21, 24, 25, 29, 34, 35, 36, 37, 38, 39, 41, 42, 48, 49, 50, 51, 54, 58, 61, 62, 63], "__name__": 3, "__main__": 3, "argpars": 3, "argumentpars": 3, "add_argu": 3, "str": [3, 12, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "lambda": 3, "suppress": 3, "print": [3, 12], "int": [3, 14, 18, 19, 20, 24, 25, 26, 27, 28, 29, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "rank": [3, 10, 26, 27, 28, 31, 32, 33, 48, 49, 50, 51, 52], "v2": 3, "accordingli": [3, 63], "variou": [3, 12, 58, 59, 61], "perspect": 3, "gsf": [3, 61, 62, 63], "model_encoder_typ": [3, 12, 61, 63], "50": [3, 63], "256": [3, 63], "null": [3, 61, 63], "topk_model_to_sav": [3, 12, 48, 49, 50, 51], "save_embeds_path": [3, 63], "save_prediction_path": [3, 12, 31, 33], "hyperparam": [3, 61, 63], "dropout": [3, 12, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 61, 63], "0001": [3, 12, 63], "1024": [3, 12, 48, 49, 50, 51, 63], "wd_l2norm": [3, 12, 61, 63], "num_bas": [3, 12, 42, 45, 61, 63], "use_self_loop": [3, 12, 44, 45, 61, 63], "sparse_optimizer_lr": [3, 12, 63], "1e": [3, 61, 63], "use_node_embed": [3, 12, 34, 35, 40, 44, 45, 47, 61, 63], "node_classif": [3, 12, 61, 63], "14": [3, 63], "read": [3, 42, 56, 59, 63], "gsconfig": 3, "parse_arg": 3, "still": [3, 53, 54, 58], "let": [3, 12, 56], "hgt_nc": 3, "relat": [3, 10, 12, 41, 42, 43, 44, 45, 54, 60, 62, 63], "customized_model": 3, "head": [3, 12, 40, 41, 43, 44], "8": [3, 10, 11, 12, 63, 64], "try": [3, 58], "readm": [3, 12], "setup_devic": [4, 31, 32, 33, 48, 49, 50, 51], "learn": [5, 6, 12, 13, 37, 38, 39, 46, 53, 54, 59, 60, 62, 64], "extend": [5, 6, 8, 15, 19, 21], "those": [5, 12, 62], "abstract": [5, 6, 8, 11, 25, 26, 37, 38, 39], "best": [6, 8, 12, 28, 48, 49, 50, 51, 59, 64], "practic": [6, 8, 63], "gsgnninstanceevalu": [6, 24, 29], "gsgnnlpevalu": [6, 27], "inferr": [7, 14, 18, 20, 31, 32, 33], "assembl": [7, 9], "pipelin": [7, 9, 10, 54, 55, 58, 59], "possibl": [7, 9, 53, 61], "alwai": [7, 9, 10, 58], "convert": [8, 10, 54, 55, 63], "textur": 8, "neural": [8, 12, 35, 64], "modelbas": 8, "simulten": 10, "increas": [10, 12], "remap": 10, "boolean": [10, 11, 41, 63], "decid": [10, 12, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 56], "renam": 10, "id": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64], "given": [10, 11, 12, 18, 31, 32, 33, 41, 48, 49, 50, 51, 54, 58, 60, 61], "accept": [10, 12, 54], "separ": [10, 12, 54, 58, 62], "space": [10, 12, 61, 62, 63], "skip": [10, 56], "nonexist": 10, "endpoint": 10, "don": [10, 60, 62], "ext": 10, "mem": 10, "directori": [10, 12, 53, 54, 55, 56, 57, 58], "ssd": 10, "extern": 10, "size": [10, 12, 14, 18, 20, 34, 35, 36, 40, 41, 42, 43, 44, 46, 61, 62], "64": 10, "describ": [10, 54, 55, 58, 62, 63], "highest": 10, "mark": 10, "schema": 10, "identif": [10, 54], "downstream": [10, 12, 54, 58, 63], "v0": [10, 63], "think": 10, "wildcard": 10, "file_nam": 10, "hdf5": [10, 63], "split": [10, 11, 12, 53, 54, 58, 61, 64], "similarli": [10, 58, 63], "source_id_col": [10, 63], "sourc": [10, 14, 18, 42, 54, 58, 62], "dest_id_col": [10, 63], "destin": [10, 14, 18, 42, 54, 58], "element": [10, 12, 24, 25, 29, 54, 62, 63], "write": [10, 11, 42, 56, 59, 61, 63], "prefix": [10, 54, 55, 56, 58], "out_dtyp": 10, "cast": 10, "appli": [10, 12, 42, 53, 54, 58], "now": [10, 12, 53, 56, 61], "flaot16": 10, "float32": 10, "actual": [10, 62], "task_typ": [10, 12, 63], "link_predict": [10, 12, 54, 62], "80": 10, "vector": [10, 54, 58], "multi": [10, 12, 24, 41, 43, 54, 62], "dimension": 10, "reconstruct": 10, "matrix": 10, "larger": [10, 12, 56, 60], "capac": [10, 61], "primit": 10, "integ": [10, 11, 12, 63], "float": [10, 11, 12, 24, 25, 26, 27, 28, 29, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54], "text": [10, 11, 12, 34, 36, 41, 59, 61], "dict": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 34, 35, 37, 38, 39, 48, 49, 50, 51], "bert": [10, 11, 12, 34, 36, 59], "maxim": 10, "sequenc": [10, 12, 63], "length": [10, 12], "bert_hf": 10, "numer": [10, 54, 58], "max_min": 10, "val": [10, 11, 12, 54], "min": 10, "max": [10, 12, 48, 49, 50, 51, 62], "maximum": [10, 12, 31, 33, 37, 39, 48, 49, 51], "minimum": 10, "max_min_norm": 10, "max_bound": 10, "min_bound": 10, "max_val": 10, "min_val": 10, "np": 10, "amax": 10, "amin": 10, "formula": 10, "equal": [10, 12, 45, 47], "mainli": [10, 62], "stage": 10, "gauss": 10, "gaussian": 10, "www": 10, "kaggl": 10, "c": 10, "porto": 10, "seguro": 10, "safe": [10, 56], "driver": 10, "discuss": 10, "44629": 10, "250927": 10, "rank_gauss": 10, "epsilon": 10, "inf": [10, 12], "categor": [10, 54], "categori": [10, 61], "to_categor": 10, "By": [10, 12, 18, 32, 37, 38, 39, 50, 62], "output_format": 10, "dglgraph": [10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 37, 38], "meta": [10, 64], "node_map": [10, 61, 63, 64], "pt": [10, 61, 63, 64], "edge_map": [10, 61, 63, 64], "partitoin": 10, "1d": 10, "shuffl": 10, "record": [10, 61, 63], "ogrigin": [10, 61, 63], "move": [10, 54, 58, 61, 63], "delet": [10, 56, 61, 63], "paper_id": 10, "dummi": [10, 16, 17, 22, 23], "paper_nod": 10, "paper_titl": 10, "512": 10, "src_paper_id": 10, "dest_paper_id": 10, "cite": [10, 54, 63], "paer": 10, "citation_tim": 10, "who": [11, 37, 38, 39, 58, 59, 63], "familiar": [11, 59, 63], "know": 11, "graphstorm": [11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 48, 49, 50, 51, 53, 56, 63, 64], "filepath": [11, 58, 61, 63, 64], "far": 11, "nlabel": [11, 61, 63], "nodetyp": 11, "labelnam": [11, 63], "etyp": [11, 12, 27, 28, 61], "canon": [11, 12, 28, 41, 63], "src_ntype": 11, "dst_ntype": 11, "elabel": 11, "pct": [11, 61], "percentag": [11, 54], "train_pct": 11, "val_pct": 11, "retain": 11, "rememb": [11, 63], "might": [11, 53, 62, 63], "nois": 11, "queri": [11, 12], "click": [11, 12], "asin": [11, 12], "purchas": 11, "rev": [11, 12, 53], "dozen": 12, "pars": [12, 54, 62], "overwrit": 12, "consid": 12, "hint": [12, 56, 58], "thread": 12, "omp": 12, "usernam": [12, 62], "issu": [12, 61], "structur": [12, 37, 38, 39, 54, 55, 58, 61, 63, 64], "csr": 12, "env": [12, 55, 62], "ld_library_path": 12, "extra_env": 12, "usr": 12, "lib64": 12, "No": [12, 56], "gnn": [12, 14, 15, 18, 20, 21, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 61, 63, 64], "involv": 12, "nccl": [12, 30], "compos": [12, 18], "convolut": [12, 42, 46], "attent": [12, 41, 43, 44], "mlp": 12, "learnabl": [12, 34, 35, 63], "final": [12, 58], "project": [12, 34, 35, 53, 55, 58], "node_feat_nam": [12, 63], "fname": 12, "b": [12, 42], "ntype0": 12, "feat0": 12, "ntype1": 12, "feata": 12, "note": [12, 26, 53, 58], "charact": 12, "put": [12, 61, 63], "start": [12, 24, 25, 26, 27, 28, 29, 56, 57, 58, 61, 63], "hyphon": 12, "attach": [12, 54], "mean": [12, 41, 46, 47, 48, 49, 50, 51], "hidden": [12, 40, 44, 45, 47, 62], "128": [12, 14, 16, 17, 18, 20, 22, 23, 34, 61, 62], "special": [12, 15, 19, 21], "filter": 12, "weight": [12, 42, 46], "matric": 12, "share": [12, 62], "divis": 12, "statu": [12, 64], "fine": [12, 57, 62], "tune": [12, 62], "see": [12, 53, 54, 55, 56, 57, 58, 62], "retriev": [12, 16, 17, 22, 23], "restore_optimizer_path": 12, "checkpoint": [12, 37, 38, 39, 62], "save_embed_path": [12, 31, 32, 33, 61], "save_model_frequ": [12, 48, 49, 50, 51], "iter": [12, 14, 15, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 62], "posit": [12, 18, 19, 27, 28, 38, 63], "everi": [12, 48, 49, 51, 53, 55, 58, 61], "1000": 12, "frequenc": [12, 24, 25, 26, 27, 28, 29], "top": [12, 41, 48, 49, 50, 51, 54], "disk": [12, 62], "huge": 12, "k": [12, 41, 48, 49, 50, 51], "topk": 12, "save_perf_results_path": [12, 48, 49, 50, 51], "perf": 12, "task_track": 12, "tracker": 12, "formal": [12, 62, 63], "report": 12, "sagemaker_task_track": 12, "captur": 12, "sagemak": [12, 58, 59, 60], "monitor": 12, "analyz": 12, "job": [12, 55, 61, 62, 63, 64], "cloudwatch": 12, "log_report_frequ": 12, "graphstom": 12, "restore_model_lay": 12, "graphml": 12, "ith": 12, "being": [12, 54], "0th": 12, "1st": [12, 48, 49, 50, 51], "etype2": 12, "etype3": 12, "etype1": 12, "th": 12, "srcntype": 12, "dstntype": 12, "rate": [12, 37, 38, 39, 41, 42, 43, 46, 54, 58], "max_grad_norm": [12, 48, 49, 50, 51], "gradient": [12, 48, 49, 50, 51], "clip": [12, 48, 49, 50, 51], "magnitud": 12, "prevent": 12, "explod": 12, "stabil": [12, 48, 49, 50, 51], "converg": 12, "grad": 12, "norm": [12, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "grad_norm_typ": [12, 48, 49, 50, 51], "global": [12, 53], "multipli": 12, "suppos": [12, 41, 42, 43, 46, 62], "2048": 12, "spars": [12, 37, 38, 39], "decai": 12, "wd": 12, "l2norm": 12, "re": [12, 53, 55, 56, 57, 58], "scale": [12, 55, 56, 61], "regularization_loss": 12, "00001": 12, "alpha": 12, "num_ffn_layers_in_input": [12, 35], "greater": 12, "zero": 12, "feedforward": [12, 35], "ffn": 12, "num_ffn_layers_in_gnn": [12, 40, 41, 42, 43, 44, 45, 46, 47], "num_ffn_layers_in_decod": 12, "effect": [12, 46], "mlpedgedecod": [12, 40], "mlpefeatedgedecod": 12, "input_activ": 12, "activ": [12, 34, 35, 41, 42, 43, 44, 45, 46, 47, 55], "relu": [12, 35, 41, 42, 43, 46, 47], "gnn_norm": 12, "batchnorm": 12, "layernorm": 12, "finish": [12, 56, 58, 64], "exit": [12, 60, 64], "earlier": 12, "trigger": 12, "criteria": 12, "round": [12, 24, 25, 26, 27, 28, 29], "call": [12, 25, 26, 27, 28, 42, 62], "strategi": [12, 24, 25, 26, 27, 28, 29], "consecutive_increas": [12, 24, 25, 26, 27, 28, 29], "score": [12, 24, 25, 26, 27, 28, 29, 41, 43, 48, 49, 50, 51, 53], "averag": [12, 42, 43], "average_increas": [12, 24, 25, 26, 27, 28, 29], "consecut": 12, "decreas": 12, "burn": [12, 24, 25, 26, 27, 28, 29], "period": 12, "100": [12, 62, 63], "burnin": 12, "eval": [12, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51], "10000": 12, "eval_fanout": [12, 61], "wast": 12, "resourc": [12, 56, 57, 58, 61, 62, 64], "prefer": [12, 54, 63], "recomput": 12, "thousand": 12, "middl": [12, 63], "sy": 12, "maxsiz": 12, "no_valid": [12, 61], "lm_tune_lr": [12, 63], "lm_train_nod": [12, 34, 36], "lm_infer_batch_s": [12, 34, 36], "32": 12, "freeze_lm_encoder_epoch": 12, "warmup": 12, "freez": [12, 48, 49, 50, 51], "rich": 12, "node_regress": 12, "edge_classif": 12, "edge_regress": 12, "treat": [12, 34, 54], "major": 12, "precision_recal": 12, "roc_auc": 12, "f1_score": 12, "per_class_f1_scor": 12, "rmse": 12, "mse": [12, 29], "mae": 12, "target_etyp": [12, 40, 63], "color": [12, 53], "cardin": 12, "bcewithlogitsloss": 12, "pos_weight": 12, "repres": 12, "answer": 12, "manual": 12, "rescal": 12, "imbalanc": 12, "crossentropyloss": 12, "imbal": 12, "estim": 12, "search": [12, 63], "src_node_typ": 12, "relation_typ": 12, "dst_node_typ": 12, "remove_target_edge_typ": [12, 14], "reverse_rel": 12, "tail": 12, "reverse_edge_type_map": 12, "both": [12, 14, 37, 38, 39, 53, 54, 56, 58, 59, 60, 63], "certain": [12, 26, 48, 49, 50, 51], "train_etyp": [12, 17, 49, 50, 63], "contrast": 12, "decoder_typ": 12, "densebidecod": 12, "mlpdecod": 12, "bi": 12, "linear": [12, 34, 35, 41, 42], "gcmc": 12, "simpli": [12, 53, 55], "multilay": 12, "perceptron": 12, "num_decoder_basi": 12, "basi": 12, "decoder_edge_feat": [12, 16, 17], "enhanc": [12, 59], "Or": 12, "count": [12, 55, 56, 58, 62], "price": 12, "fanm": 12, "eval_etyp": [12, 16, 17, 63], "care": [12, 55], "train_negative_sampl": 12, "neg": [12, 18, 19, 27, 28, 38, 63], "uniform": [12, 18], "joint": 12, "all_etype_uniform": 12, "all_etype_joint": 12, "eval_negative_sampl": 12, "num_negative_edg": [12, 18], "num_negative_edges_ev": [12, 27, 28], "lp_decoder_typ": [12, 27, 28, 61], "dot_product": [12, 61, 62], "distmult": 12, "lp": [12, 61, 62], "gamma": 12, "margin": 12, "12": [12, 61], "lp_loss_func": 12, "builtin": 12, "cross_entropi": 12, "logsigmoid": 12, "func": [12, 34, 35], "lp_edge_weight_for_loss": 12, "rel0": 12, "weight0": 12, "rel1": 12, "weight1": 12, "textual_data_path": 12, "textual": [12, 34, 48], "sub": [12, 54, 58, 64], "gsgnn_dt": 12, "md": 12, "max_distill_step": 12, "max_seq_len": 12, "seq": 12, "len": 12, "design": [13, 40, 44, 45, 47, 58, 59, 63, 64], "fulfil": 13, "target_idx": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 48, 49, 50, 51], "construct_feat_ntyp": [14, 18, 20], "construct_feat_fanout": [14, 18, 20], "gsgnnedgedataloaderbas": 14, "minibatch": [14, 18, 20], "batch_graph": 14, "gsgnnedgedata": [14, 15, 16, 17, 18, 19, 27, 28, 49], "bool": [14, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51], "15": [14, 16, 17, 18, 20, 22, 23, 61], "gsgnnedgepredictiontrain": 14, "ep_data": [14, 16, 17], "ep_dataload": [14, 16, 17], "ep_train": 14, "__iter__": [14, 15, 18, 19, 20, 21], "__next__": [14, 15, 18, 19, 20, 21], "compris": [14, 15, 20, 21], "edge_feat_field": [16, 17, 22, 23], "tupl": [16, 17, 24, 25, 28, 29], "gsgnnedgedataload": [16, 17, 49], "n1": [16, 17, 22, 23, 40], "e1": [16, 17], "n2": [16, 17], "get_edge_feat": [16, 17, 22, 23], "input_edg": [16, 17, 22, 23], "get_label": [16, 17, 22, 23], "eid": [16, 17], "get_node_feat": [16, 17, 22, 23], "prepare_data": [16, 17, 22, 23], "_test_idx": [16, 17, 22], "empti": [16, 17, 22, 54], "_train_idx": 17, "_val_idx": 17, "edge_mask_for_gnn_embed": [18, 32, 50], "gsgnnlinkpredictiondataloaderbas": 18, "pos_graph": [18, 38], "neg_graph": [18, 38], "random": [18, 62], "leak": [18, 32], "gsgnnlinkpredictiontrain": 18, "lp_data": 18, "lp_dataload": 18, "lp_trainer": 18, "gsgnnnodedataloaderbas": 20, "gsgnnnodedata": [20, 21, 22, 23], "np_data": [20, 22, 23, 34, 35, 36, 40, 44, 45, 47], "np_dataload": [20, 22, 23], "np_trainer": 20, "eval_ntyp": [22, 23], "nid": [22, 23], "seed": [22, 23], "distgraph": [22, 34, 35, 36, 45], "earli": [24, 25, 26, 27, 28, 29], "stop": [24, 25, 26, 27, 28, 29, 64], "condit": [24, 25, 26, 27, 28, 29], "compute_scor": [24, 25, 27, 28, 29], "pred": [24, 25, 29], "redict": [24, 25, 29], "do_ev": [24, 25, 26, 27, 28, 29], "total_it": [24, 25, 26, 27, 28, 29], "epoch_end": [24, 25, 26, 27, 28, 29], "total": [24, 25, 26, 27, 28, 29, 45, 47, 48, 49, 50, 51], "been": [24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 60, 61, 63], "taken": [24, 25, 26, 27, 28, 29], "val_pr": [24, 25, 29], "test_pr": [24, 25, 29], "val_label": [24, 25, 29], "test_label": [24, 25, 29], "inter": [24, 25, 26, 27, 28, 29, 62], "histori": [24, 25, 29], "gsgnnregressionevalu": [24, 25], "templat": [25, 26], "gsgnnlinkpredictionmodel": [25, 26, 27, 28, 50], "evalut": [25, 26, 27, 28], "eval_scor": [25, 26], "test_scor": [25, 26, 27, 28], "val_scor": [26, 27, 28, 48, 49, 50, 51], "todo": [27, 28], "futur": [27, 28], "accur": [27, 28], "val_mrr": [27, 28], "test_mrr": [27, 28], "major_etyp": 28, "gsgnnmrrlpevalu": 28, "use_wholegraph": 30, "context": 30, "wholegraph": 30, "gsinferr": [31, 32, 33], "wrapper": [31, 32, 33, 50, 58], "gsgnnnodemodel": [31, 32, 33, 34, 35, 36, 44, 45, 47, 48, 51], "loader": [31, 32, 33], "node_id_mapping_fil": [31, 32, 33], "edge_id_mapping_fil": 31, "save_embed_format": [31, 32, 33], "thing": [31, 32, 33], "gsedgedataload": 31, "algorithm": [31, 32, 33, 37, 38, 39, 62], "gsgnndata": 32, "gsgnnlinkpredictiontestdataload": 32, "gsnodedataload": [33, 48, 49, 50, 51], "node_lm_config": [34, 36], "feat_siz": [34, 35, 40, 44, 45, 47], "embed_s": [34, 35], "use_fp16": [34, 36], "cached_embed_path": [34, 36], "force_no_embed": [34, 35], "languag": [34, 36, 48, 49, 50, 51, 53], "heterogen": [34, 35, 36, 40, 41, 42, 58, 63], "combin": [34, 35, 37, 38, 39], "static": [34, 36, 53], "individu": [34, 35, 54, 55], "float16": [34, 36], "cach": [34, 36], "get_feat_s": [34, 35, 40, 44, 45, 47], "set_node_input_encod": [34, 35, 36, 40, 44, 45, 47], "ffn_activ": [35, 42, 46], "forc": 35, "callabl": [35, 41, 42, 43, 46], "gsgnnedgemodel": [35, 40, 49], "gslmnodeencoderinputlay": 36, "gsgnnedgemodelinterfac": 37, "gsgnnmodelbas": [37, 38, 39], "hyperparamet": [37, 38, 39, 41], "gsoptim": [37, 38, 39], "dense_opt": [37, 38, 39], "sparse_opt": [37, 38, 39], "lm_opt": [37, 38, 39], "target_edg": 37, "target_edge_feat": 37, "dglblock": [37, 38, 39], "model_layer_to_load": [37, 38, 39, 48, 49, 50, 51], "state": [37, 38, 39, 48, 49, 50, 51], "customgsgnnmodel": [37, 38, 39], "child": [37, 38, 39], "gsgnnlinkpredictionmodelinterfac": 38, "pos_edge_feat": 38, "neg_edge_feat": 38, "gsgnnnodemodelinterfac": 39, "hid_dim": [40, 41], "out_dim": [40, 41, 44, 45, 47], "num_hidden_lay": [40, 44, 45, 47], "hgtlayer": 40, "dglheterograph": [40, 44], "ngnn": [40, 41, 42, 43, 44, 45, 46, 47], "build": [40, 44, 45, 47, 53, 55, 59, 61, 63], "hgt_encod": [40, 41], "edge_decod": 40, "gsnodeencoderinputlay": [40, 44, 45, 47], "do_full_graph_infer": [40, 44, 45, 47], "gnn_encod": [40, 44, 45, 47], "set_gnn_encod": [40, 44, 45, 47], "set_decod": [40, 44, 45, 47], "n0": 40, "r1": 40, "num_ffn_lay": 40, "in_dim": 41, "canonical_etyp": [41, 42, 43], "fnn_activ": [41, 43], "v": [41, 55, 57, 60, 61, 62], "left": [41, 43, 46], "att": 41, "right": [41, 42, 43, 46, 60], "w": [41, 42, 43, 46], "phi": 41, "q": 41, "cdot": [41, 46], "frac": [41, 42], "mu_": 41, "tau": 41, "sqrt": [41, 42], "i_": 41, "send": 41, "msg": 41, "aggreg": [41, 42, 43, 46], "tild": 41, "sum_": [41, 42, 43], "foral": [41, 46], "mathcal": [41, 42, 43, 46], "sigma": [41, 42, 46], "hgtconv": 41, "cross": [41, 43], "wa": [41, 56, 58], "chosen": 41, "contribut": 41, "input_featur": [41, 42, 43, 46], "in_feat": [42, 43, 46], "out_feat": [42, 43, 46], "rel_nam": [42, 43], "bia": [42, 43, 46], "self_loop": [42, 43], "graphconv": 42, "ones": [42, 58], "mathemat": 42, "h_i": [42, 43], "j": [42, 43, 46], "c_": 42, "ji": [42, 46], "h_j": [42, 43, 46], "degre": 42, "e_": [42, 43, 46], "scalar": [42, 46, 58], "equival": 42, "formul": 42, "divid": 42, "receiv": 42, "rgcn_encod": [42, 45], "h_dim": [42, 43, 44, 45, 46, 47], "ffn_actic": [42, 43, 46], "arxiv": [43, 48], "org": [43, 48, 53, 57, 60], "ab": [43, 48], "1904": 43, "05811": 43, "__": 43, "gatconv": 43, "math": 43, "alpha_": 43, "ij": 43, "mathrm": [43, 46], "softmax_i": 43, "leakyrelu": 43, "vec": 43, "h_": [43, 46], "rgat_encod": [43, 44], "last_layer_act": [44, 45], "relationalattlay": 44, "node_decod": [44, 45, 47], "entityclassifi": [44, 45, 47], "conv": [45, 46, 47], "relgraphconvlay": 45, "selfloop": 45, "aggregator_typ": [46, 47], "layerfrom": 46, "induct": 46, "concat": 46, "broadcast": 46, "homogen": 46, "sage_encod": [46, 47], "gcn": 46, "pool": 46, "lstm": 46, "sageconv": 47, "glem": 48, "turn": 48, "better": [48, 61], "node_glem": 48, "2210": 48, "14709": 48, "my_dataset": [48, 49, 50, 51], "my_graph": [48, 49, 50, 51], "my_node_typ": [48, 51, 54], "target_nodes_tensor": [48, 51], "my_data_load": [48, 49, 50, 51], "my_model": [48, 49, 50, 51], "total_step": [48, 49, 50, 51], "freeze_input_layer_epoch": [48, 49, 50, 51], "altern": 48, "fulli": 48, "supervis": 48, "semi": 48, "commonli": [48, 49, 50, 51, 60, 63], "get_best_model_path": [48, 49, 50, 51], "remove_saved_model": [48, 49, 50, 51], "previous": [48, 49, 50, 51, 62], "save_topk_model": [48, 49, 50, 51], "i_th": [48, 49, 50, 51], "epoch_th": [48, 49, 50, 51], "evluat": [48, 49, 50, 51], "gsgnntrainer": [49, 50, 51], "main": [49, 50, 51, 53, 54], "against": [49, 50, 51], "edge_typ": [49, 50], "target_edges_tensor": [49, 50], "gsgnnlinkpredictiondataload": 50, "node_gnn": 51, "easier": 53, "jump": 53, "recommend": [53, 55, 58, 63], "pyspark": [53, 55, 58], "compat": [53, 58], "java": 53, "On": [53, 55], "maco": [53, 55], "brew": [53, 55], "openjdk": [53, 55], "linux": [53, 55, 57, 60, 62], "manag": [53, 55, 57, 58], "ubuntu": [53, 55, 60, 61], "yum": [53, 55], "corretto": [53, 55], "headless": [53, 55], "devel": [53, 55], "curl": [53, 57], "master": 53, "mac": 53, "imag": [53, 55, 56, 59, 61, 63], "close": [53, 62], "mix": 53, "conda": 53, "deactiv": 53, "until": [53, 56], "ssl": [53, 57], "dev": [53, 60, 61], "posix": 53, "cento": 53, "venv": [53, 55], "unit": [53, 58], "continu": 53, "pytest": 53, "virtual": [53, 55, 62], "shell": [53, 55, 60], "py3": 53, "opinion": 53, "formatt": 53, "review": 53, "pyproject": 53, "toml": 53, "preview": 53, "diff": 53, "auto": 53, "vscode": 53, "linter": 53, "complimentari": 53, "manner": [53, 59], "editor": 53, "annot": 53, "graphstorm_process": 53, "introduc": [53, 62], "necessari": 53, "ok": 53, "ignor": [53, 63], "silenc": 53, "inlin": 53, "sparingli": 53, "conform": [53, 58], "rcfile": 53, "pylintrc": 53, "repo": [53, 60], "psf": 53, "23": 53, "language_vers": 53, "pyi": 53, "entri": [53, 54, 58, 62], "repositori": [53, 58], "sinc": [53, 54, 56], "rm": [53, 56], "rf": 53, "gsprocess": [53, 54, 57], "intermedi": [54, 58], "blob": 54, "convert_gconstruct_config": 54, "readthedoc": 54, "en": 54, "latest": [54, 57], "html": [54, 60], "mostli": 54, "aim": 54, "develop": [54, 58, 59, 60, 62], "convers": 54, "v1": [54, 60], "arrai": 54, "miss": 54, "deriv": 54, "split_rat": 54, "physic": 54, "csv": [54, 55, 58], "concis": 54, "file_1": 54, "file_2": 54, "spec": 54, "caller": 54, "respons": 54, "engin": [54, 55, 57, 58], "filesystem": [54, 61], "s3": [54, 58, 62], "portabl": 54, "kept": 54, "relev": [54, 57, 58], "among": 54, "interacted_with": 54, "definit": 54, "action": 54, "comedi": 54, "kwarg": [54, 62], "arg_nam": 54, "op": [54, 58], "col": 54, "feature_on": 54, "feature_two": 54, "parent": 54, "composit": 54, "ll": [54, 55, 56, 57, 58], "appear": [54, 58], "written": [54, 63], "storag": [54, 56, 58, 62], "dest": 54, "massiv": [55, 56], "uniqu": [55, 58], "horizont": 55, "u": [55, 56, 57, 58, 59, 62], "billion": [55, 56, 63], "brief": 55, "pyenv": 55, "isol": 55, "recent": 55, "21": 55, "pull": [55, 57, 62], "least": [55, 61], "spark": [55, 56, 58], "runtim": [55, 58, 62], "jvm": 55, "jdk": 55, "tabular": [55, 58], "header": [55, 58], "caveat": 55, "done": [55, 56, 58], "filenam": [55, 56, 58, 62], "match": [55, 56, 58, 63], "produc": [55, 58], "assumpt": 55, "repartit": [55, 58], "fed": 55, "walkthrough": 55, "wrangl": [55, 58], "push": [55, 56, 62], "registri": [55, 62], "cover": [55, 59], "intern": [55, 60], "footnot": [55, 58], "row": [55, 58, 63, 64], "someth": 55, "cannot": 55, "guarante": [55, 58], "fix": 55, "aw": [56, 58, 60, 61, 62, 64], "usag": [56, 59], "bucket": [56, 58, 62], "requisit": 56, "credenti": [56, 57], "permiss": 56, "cli": [56, 57, 62], "my_bucket": 56, "enter": [56, 60], "region": [56, 57, 62], "west": [56, 57, 62], "sync": [56, 58], "small_heterogeneous_graph": [56, 58], "ecr": 56, "python": [56, 57, 58, 60, 62, 63, 64], "run_distributed_process": [56, 58], "ml": [56, 62], "t3": 56, "xlarg": [56, 62], "tini": 56, "r5": 56, "role": [56, 57, 62], "uri": [56, 62], "instruct": [56, 57, 58, 60, 61], "parametr": 56, "account": [56, 57, 62], "1234567890": [56, 57], "sagemaker_role_nam": 56, "dataset_s3_path": [56, 62], "output_bucket": 56, "dataset_nam": 56, "config_fil": 56, "instance_count": 56, "instance_typ": [56, 62], "num_fil": 56, "image_uri": [56, 62], "dkr": [56, 62], "amazonaw": [56, 57, 62], "arn": [56, 62], "iam": [56, 62], "servic": 56, "output_prefix": 56, "condition": 56, "yn": 56, "ye": 56, "recurs": [56, 62], "quiet": 56, "break": 56, "esac": 56, "wait": 56, "run_repartit": 56, "metadata": [56, 58, 62], "yourself": 56, "good": [56, 60], "num_inst": 56, "num_cores_per_inst": 56, "saw": 56, "node_data": [56, 58], "node_id_map": [56, 58], "2023": 56, "08": 56, "05": 56, "00": 56, "47": 56, "36": 56, "804": 56, "launch_argu": [56, 58], "11914": 56, "37": [56, 61], "545": 56, "perf_count": [56, 58], "12082": 56, "updated_row_counts_metadata": [56, 58], "throughout": 57, "o": [57, 60, 61], "navig": [57, 58], "offici": [57, 62], "site": 57, "facilit": [57, 60], "doc": [57, 62], "awscli": 57, "ex": 57, "x86_64": 57, "zip": 57, "awscliv2": 57, "unzip": 57, "build_gsprocessing_imag": 57, "dockerfil": 57, "aspect": 57, "push_gsprocessing_imag": 57, "latest_library_vers": 57, "r": 57, "particular": 58, "identifi": 58, "apart": 58, "decoupl": 58, "translat": 58, "pwd": 58, "home": 58, "cwd": 58, "edge_data": 58, "included_in": 58, "genr": 58, "benefit": 58, "mv": 58, "upload": 58, "my": 58, "inspir": 58, "movielen": 58, "director": 58, "direct": 58, "ag": 58, "gender": 58, "chunk": [58, 62], "meant": 58, "repartition_fil": 58, "measur": [58, 59], "profil": 58, "discov": 58, "src_int_id": 58, "dist_int_id": 58, "trace": 58, "back": 58, "node_str_id": 58, "node_int_id": 58, "had": 58, "At": 58, "simplifi": [58, 59], "infrastructur": 58, "hard": 58, "focu": 58, "partitit": 58, "request": [58, 62], "deploy": 59, "industri": 59, "billon": 59, "elimin": 59, "moreov": 59, "customiz": 59, "offer": 59, "program": 59, "bring": [59, 62], "beginn": 59, "experienc": [59, 63], "wish": 59, "veri": [59, 63], "modifi": 59, "boost": 59, "page": [59, 63], "redistribut": 59, "term": 59, "apach": 59, "licens": 59, "join": 59, "04": 60, "pip3": 60, "13": 60, "core": 60, "cu116": 60, "url": [60, 62], "download": [60, 61], "whl": 60, "cu117": 60, "ai": 60, "wheel": 60, "keygen": 60, "rsa": 60, "id_rsa": [60, 61], "cat": 60, "pub": [60, 61], "authorized_kei": [60, 61], "everyth": 60, "graphstrom": 60, "inference_script": 60, "examplar": 60, "obtain": 60, "deep": [60, 62], "ami": 60, "build_docker_oss4loc": 60, "prefac": 60, "solut": 60, "nf": 60, "shm": [60, 61], "ogb": [61, 62], "enough": 61, "short": 61, "ef": 61, "digitalocean": 61, "linod": 61, "tecmint": 61, "howtoforg": 61, "client": 61, "path_to_data": [61, 62], "privat": [61, 64], "insteand": 61, "public": [61, 63], "constraint": 61, "password": [61, 62], "open": 61, "pick": 61, "stricthostkeycheck": 61, "172": 61, "38": 61, "143": 61, "login": [61, 62], "exchang": 61, "insid": 61, "65536": 61, "gen_mag_dataset": 61, "savepath": 61, "partition_graph_lp": [61, 63], "balanc": 61, "ogbn_mag_lp_3p": [61, 62], "diagram": [61, 63], "part0": [61, 63, 64], "part1": 61, "part2": 61, "11": 61, "221": 61, "That": [61, 64], "conduct": 61, "tra": 61, "collabor": 61, "capabl": [61, 62], "hardli": 61, "nearli": 61, "800gb": 61, "r6a": 61, "32xlarg": 61, "1tb": 61, "300gb": 61, "ntask": 61, "ogbn_dataset": 61, "partition_graph": [61, 63, 64], "ogbn_papers100m_3p": 61, "hour": 61, "around": [61, 64], "700gb": 61, "peak": 61, "ident": 61, "ogbn_papers100m_nc_p3": 61, "evaluation_frequ": 61, "500": 61, "mini_batch_inf": 61, "001": 61, "sparse_optim": 61, "six": [61, 63], "minut": 61, "12xlarg": [61, 64], "48": 61, "intel": 61, "xeon": 61, "vcpu": 61, "t4": 61, "192gb": 61, "45": 61, "devop": 62, "guidelin": 62, "byoc": 62, "ak": 62, "sk": 62, "authent": 62, "east": 62, "stdin": 62, "763104351884": 62, "build_docker_sagemak": 62, "docker_typ": 62, "docker_nam": 62, "docker_tag": 62, "aws_account_id": 62, "888888888888": 62, "sm": 62, "submit": 62, "api": 62, "properli": 62, "c5": 62, "experi": 62, "deploi": 62, "tester": 62, "simul": 62, "cp": 62, "path_to_training_config": 62, "diffenc": 62, "launch_train": 62, "amazon_ecr_image_uri": 62, "train_entri": 62, "role_arn": 62, "path_to_save_trained_model": 62, "account_id": 62, "amazonsagemak": 62, "executionrol": 62, "20220627t143571": 62, "resum": 62, "launch_inf": 62, "infer_entri": 62, "path_to_save_generated_node_embed": 62, "path_to_save_prediction_result": 62, "difffer": 62, "plu": 62, "999": 62, "launch_partit": 62, "num_partit": 62, "output_path": 62, "partition_entri": 62, "metadata_fil": 62, "sometim": 62, "constructor": 62, "vpc": 62, "enclos": 62, "doubl": [62, 63], "quot": 62, "correct": [62, 63, 64], "argnam": 62, "liter": 62, "subnet": 62, "traffic": 62, "encrypt": 62, "launch_": 62, "arug": 62, "max_run": 62, "3600": 62, "volume_s": 62, "encrypt_inter_container_traff": 62, "1234": 62, "4567": 62, "volume_size_in_gb": 62, "launch_gconstruct": 62, "max_runtime_in_second": 62, "emul": 62, "never": 62, "great": 62, "intro": 62, "worker": 62, "pythonpath": 62, "export": 62, "path_to_graphstorm": 62, "spin": 62, "gf": 62, "algo": 62, "container_nam": 62, "hostnam": 62, "xxx": 62, "sm_training_env": 62, "current_host": 62, "world_siz": 62, "master_addr": 62, "aws_region": 62, "working_dir": 62, "opt": 62, "entrypoint": 62, "generate_sagemaker_docker_compos": 62, "pyyaml": 62, "commnd": 62, "secret": 62, "session": 62, "toekn": 62, "sagemaker_train": 62, "sagemaker_inf": 62, "logic": [62, 63], "aws_access_kei": 62, "aws_secret_access_kei": 62, "aws_session_token": 62, "graphstorm_docker_imag": 62, "map_lp": 62, "luanch": 62, "var": 62, "interact": 62, "assess": 62, "down": 62, "big": 63, "what": 63, "succeed": 63, "author_writing_pap": 63, "paper_cited_pap": 63, "paper_citing_pap": 63, "paper_i": 63, "about_subject": 63, "paper_written": 63, "by_author": 63, "subject_has_pap": 63, "examplari": 63, "source_id": 63, "dest_id": 63, "simpl": 63, "custom_split_filenam": 63, "49": 63, "99": 63, "30": 63, "59": 63, "60": 63, "69": 63, "70": 63, "51": 63, "52": 63, "correspondingli": 63, "eventu": 63, "heterograph": 63, "nodetypenam": 63, "featurenam": 63, "nodefeaturetensor": 63, "edgetypenam": 63, "edgefeaturetensor": 63, "predictnodetypenam": 63, "nodelabeltensor": 63, "predictedgetypenam": 63, "edgelabeltensor": 63, "trainingnodeindexetensor": 63, "validationnodeindexetensor": 63, "testnodeindexetensor": 63, "save_graph": 63, "convent": 63, "datasetnam": 63, "give": [63, 64], "ogbn_mag": 63, "acm_dgl": 63, "reus": 63, "forget": 63, "highli": 63, "truli": 63, "besid": 63, "white": 63, "rather": 63, "200": 63, "quickli": 64, "nc": 64, "ogbn_arxiv_nc_1p": 64, "gsgnn_np": 64, "arxiv_nc": 64, "node_sparse_emb": 64, "9": 64, "learnt": 64, "gprahstorm": 64, "ago": 64}, "objects": {"graphstorm.dataloading": [[14, 0, 1, "", "GSgnnEdgeDataLoader"], [15, 0, 1, "", "GSgnnEdgeDataLoaderBase"], [16, 0, 1, "", "GSgnnEdgeInferData"], [17, 0, 1, "", "GSgnnEdgeTrainData"], [18, 0, 1, "", "GSgnnLinkPredictionDataLoader"], [19, 0, 1, "", "GSgnnLinkPredictionDataLoaderBase"], [20, 0, 1, "", "GSgnnNodeDataLoader"], [21, 0, 1, "", "GSgnnNodeDataLoaderBase"], [22, 0, 1, "", "GSgnnNodeInferData"], [23, 0, 1, "", "GSgnnNodeTrainData"]], "graphstorm.dataloading.GSgnnEdgeDataLoader": [[14, 1, 1, "", "__iter__"], [14, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnEdgeDataLoaderBase": [[15, 1, 1, "", "__iter__"], [15, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnEdgeInferData": [[16, 1, 1, "", "get_edge_feats"], [16, 1, 1, "", "get_labels"], [16, 1, 1, "", "get_node_feats"], [16, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnEdgeTrainData": [[17, 1, 1, "", "get_edge_feats"], [17, 1, 1, "", "get_labels"], [17, 1, 1, "", "get_node_feats"], [17, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnLinkPredictionDataLoader": [[18, 1, 1, "", "__iter__"], [18, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase": [[19, 1, 1, "", "__iter__"], [19, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnNodeDataLoader": [[20, 1, 1, "", "__iter__"], [20, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnNodeDataLoaderBase": [[21, 1, 1, "", "__iter__"], [21, 1, 1, "", "__next__"]], "graphstorm.dataloading.GSgnnNodeInferData": [[22, 1, 1, "", "get_edge_feats"], [22, 1, 1, "", "get_labels"], [22, 1, 1, "", "get_node_feats"], [22, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnNodeTrainData": [[23, 1, 1, "", "get_edge_feats"], [23, 1, 1, "", "get_labels"], [23, 1, 1, "", "get_node_feats"], [23, 1, 1, "", "prepare_data"]], "graphstorm.eval": [[24, 0, 1, "", "GSgnnAccEvaluator"], [25, 0, 1, "", "GSgnnInstanceEvaluator"], [26, 0, 1, "", "GSgnnLPEvaluator"], [27, 0, 1, "", "GSgnnMrrLPEvaluator"], [28, 0, 1, "", "GSgnnPerEtypeMrrLPEvaluator"], [29, 0, 1, "", "GSgnnRegressionEvaluator"]], "graphstorm.eval.GSgnnAccEvaluator": [[24, 1, 1, "", "compute_score"], [24, 1, 1, "", "do_eval"], [24, 1, 1, "", "evaluate"], [24, 2, 1, "", "history"]], "graphstorm.eval.GSgnnInstanceEvaluator": [[25, 1, 1, "", "compute_score"], [25, 1, 1, "", "do_eval"], [25, 1, 1, "", "evaluate"], [25, 2, 1, "", "history"]], "graphstorm.eval.GSgnnLPEvaluator": [[26, 1, 1, "", "do_eval"], [26, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnMrrLPEvaluator": [[27, 1, 1, "", "compute_score"], [27, 1, 1, "", "do_eval"], [27, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator": [[28, 1, 1, "", "compute_score"], [28, 1, 1, "", "do_eval"], [28, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnRegressionEvaluator": [[29, 1, 1, "", "compute_score"], [29, 1, 1, "", "do_eval"], [29, 1, 1, "", "evaluate"], [29, 2, 1, "", "history"]], "graphstorm.gsf": [[30, 3, 1, "", "initialize"]], "graphstorm.inference": [[31, 0, 1, "", "GSgnnEdgePredictionInferrer"], [32, 0, 1, "", "GSgnnLinkPredictionInferrer"], [33, 0, 1, "", "GSgnnNodePredictionInferrer"]], "graphstorm.inference.GSgnnEdgePredictionInferrer": [[31, 2, 1, "", "device"], [31, 2, 1, "", "evaluator"], [31, 1, 1, "", "infer"], [31, 1, 1, "", "setup_device"], [31, 1, 1, "", "setup_evaluator"]], "graphstorm.inference.GSgnnLinkPredictionInferrer": [[32, 2, 1, "", "device"], [32, 2, 1, "", "evaluator"], [32, 1, 1, "", "infer"], [32, 1, 1, "", "setup_device"], [32, 1, 1, "", "setup_evaluator"]], "graphstorm.inference.GSgnnNodePredictionInferrer": [[33, 2, 1, "", "device"], [33, 2, 1, "", "evaluator"], [33, 1, 1, "", "infer"], [33, 1, 1, "", "setup_device"], [33, 1, 1, "", "setup_evaluator"]], "graphstorm.model": [[34, 0, 1, "", "GSLMNodeEncoderInputLayer"], [35, 0, 1, "", "GSNodeEncoderInputLayer"], [36, 0, 1, "", "GSPureLMNodeInputLayer"], [37, 0, 1, "", "GSgnnEdgeModelBase"], [38, 0, 1, "", "GSgnnLinkPredictionModelBase"], [39, 0, 1, "", "GSgnnNodeModelBase"], [40, 0, 1, "", "HGTEncoder"], [41, 0, 1, "", "HGTLayer"], [42, 0, 1, "", "RelGraphConvLayer"], [43, 0, 1, "", "RelationalAttLayer"], [44, 0, 1, "", "RelationalGATEncoder"], [45, 0, 1, "", "RelationalGCNEncoder"], [46, 0, 1, "", "SAGEConv"], [47, 0, 1, "", "SAGEEncoder"]], "graphstorm.model.GSgnnEdgeModelBase": [[37, 1, 1, "", "create_optimizer"], [37, 1, 1, "", "forward"], [37, 1, 1, "", "predict"], [37, 1, 1, "", "restore_model"], [37, 1, 1, "", "save_model"]], "graphstorm.model.GSgnnLinkPredictionModelBase": [[38, 1, 1, "", "create_optimizer"], [38, 1, 1, "", "forward"], [38, 1, 1, "", "restore_model"], [38, 1, 1, "", "save_model"]], "graphstorm.model.GSgnnNodeModelBase": [[39, 1, 1, "", "create_optimizer"], [39, 1, 1, "", "forward"], [39, 1, 1, "", "predict"], [39, 1, 1, "", "restore_model"], [39, 1, 1, "", "save_model"]], "graphstorm.trainer": [[48, 0, 1, "", "GLEMNodePredictionTrainer"], [49, 0, 1, "", "GSgnnEdgePredictionTrainer"], [50, 0, 1, "", "GSgnnLinkPredictionTrainer"], [51, 0, 1, "", "GSgnnNodePredictionTrainer"]], "graphstorm.trainer.GLEMNodePredictionTrainer": [[48, 2, 1, "", "device"], [48, 1, 1, "", "eval"], [48, 2, 1, "", "evaluator"], [48, 1, 1, "", "fit"], [48, 1, 1, "", "get_best_model_path"], [48, 2, 1, "", "optimizer"], [48, 1, 1, "", "remove_saved_model"], [48, 1, 1, "", "restore_model"], [48, 1, 1, "", "save_model"], [48, 1, 1, "", "save_topk_models"], [48, 1, 1, "", "setup_device"], [48, 1, 1, "", "setup_evaluator"]], "graphstorm.trainer.GSgnnEdgePredictionTrainer": [[49, 2, 1, "", "device"], [49, 1, 1, "", "eval"], [49, 2, 1, "", "evaluator"], [49, 1, 1, "", "fit"], [49, 1, 1, "", "get_best_model_path"], [49, 2, 1, "", "optimizer"], [49, 1, 1, "", "remove_saved_model"], [49, 1, 1, "", "restore_model"], [49, 1, 1, "", "save_model"], [49, 1, 1, "", "save_topk_models"], [49, 1, 1, "", "setup_device"], [49, 1, 1, "", "setup_evaluator"]], "graphstorm.trainer.GSgnnLinkPredictionTrainer": [[50, 2, 1, "", "device"], [50, 1, 1, "", "eval"], [50, 2, 1, "", "evaluator"], [50, 1, 1, "", "fit"], [50, 1, 1, "", "get_best_model_path"], [50, 2, 1, "", "optimizer"], [50, 1, 1, "", "remove_saved_model"], [50, 1, 1, "", "restore_model"], [50, 1, 1, "", "save_model"], [50, 1, 1, "", "save_topk_models"], [50, 1, 1, "", "setup_device"], [50, 1, 1, "", "setup_evaluator"]], "graphstorm.trainer.GSgnnNodePredictionTrainer": [[51, 2, 1, "", "device"], [51, 1, 1, "", "eval"], [51, 2, 1, "", "evaluator"], [51, 1, 1, "", "fit"], [51, 1, 1, "", "get_best_model_path"], [51, 2, 1, "", "optimizer"], [51, 1, 1, "", "remove_saved_model"], [51, 1, 1, "", "restore_model"], [51, 1, 1, "", "save_model"], [51, 1, 1, "", "save_topk_models"], [51, 1, 1, "", "setup_device"], [51, 1, 1, "", "setup_evaluator"]], "graphstorm.utils": [[52, 3, 1, "", "setup_device"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"graphstorm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 30, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 55, 57, 58, 59, 60, 61, 62], "advanc": [0, 59], "usag": 0, "prevent": 0, "inform": [0, 63], "leakag": 0, "link": [0, 1, 12], "predict": [0, 1, 12], "speedup": 0, "train": [0, 1, 3, 12, 56, 61, 62, 63, 64], "multipl": 0, "target": 0, "node": [0, 1, 2, 10, 12, 54, 58, 63], "type": 0, "us": [1, 2, 3, 53, 55, 57, 61, 62, 63], "wholegraph": 1, "motiv": 1, "setup": [1, 3, 57, 60, 61, 62], "docker": [1, 3, 57, 60, 62], "environ": [1, 3, 12, 60], "prerequisit": [1, 3, 60, 62], "build": [1, 57, 60, 62], "imag": [1, 57, 60, 62], "from": [1, 55, 60], "sourc": [1, 55, 60], "creat": [1, 53, 60, 61], "contain": [1, 57, 60, 61], "verifi": 1, "efa": 1, "nccl": 1, "configur": [1, 2, 3, 10, 12, 13, 54, 58, 60, 61, 63], "convert": [1, 3], "featur": [1, 2, 10, 54], "compat": [1, 62], "format": [1, 3, 10, 53, 63], "run": [1, 3, 53, 55, 56, 58, 62], "job": [1, 56, 57, 58], "text": 2, "prepar": [2, 62, 63], "raw": [2, 63], "data": [2, 3, 56, 58, 62, 63, 64], "construct": [2, 10, 63], "graph": [2, 3, 10, 11, 54, 59, 61, 62, 63], "languag": [2, 12], "model": [2, 3, 8, 12, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47], "launch": [2, 12, 56, 57, 61, 62, 63, 64], "trainig": 2, "without": 2, "fine": 2, "tune": 2, "bert": 2, "both": 2, "gnn": [2, 3, 8], "onli": 2, "your": [3, 63], "own": [3, 63], "dgl": [3, 63], "implement": 3, "modifi": [3, 63], "you": 3, "mini": 3, "batch": 3, "infer": [3, 7, 12, 62, 64], "learn": 3, "how": 3, "modif": 3, "requir": [3, 58, 63], "custom": [3, 63], "step": [3, 62, 63], "1": [3, 60, 62, 63], "2": [3, 60, 62, 63], "api": 3, "3": [3, 53, 55, 63], "flow": 3, "start": [3, 55, 59, 62, 64], "process": [3, 54, 55, 57, 58, 61], "": [3, 63], "iniatil": 3, "replac": 3, "dataload": [3, 5], "dataset": [3, 5, 54], "trainer": [3, 9], "wrap": 3, "attach": 3, "evalu": [3, 6, 12], "task": [3, 12, 62], "tracker": 3, "fit": 3, "function": 3, "4": 3, "handl": 3, "unus": 3, "weight": 3, "error": 3, "5": 3, "add": 3, "few": 3, "addit": [3, 62], "argument": [3, 10, 11, 12, 18, 62], "python": [3, 53, 55], "main": 3, "6": 3, "yaml": [3, 63], "file": [3, 56, 58, 61, 62, 63], "put": 3, "everyth": 3, "togeth": 3, "them": 3, "base": [5, 6, 8], "eval": 6, "input": [8, 10, 54, 58, 63], "layer": 8, "encod": 8, "construct_graph": 10, "py": [10, 11], "json": [10, 63], "explan": 10, "version": 10, "edg": [10, 12, 54, 63], "transform": [10, 54], "output": [10, 56, 58, 63], "an": [10, 54, 63], "exampl": [10, 14, 16, 17, 18, 20, 22, 23, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 63], "partit": [11, 56, 61, 62, 63, 64], "partition_graph": 11, "partition_graph_lp": 11, "built": 12, "specif": 12, "rgcn": 12, "rgat": 12, "save": 12, "restor": 12, "hyper": 12, "paramet": [12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56], "earli": 12, "stop": 12, "gener": [12, 62], "classif": [12, 63], "regress": 12, "distil": 12, "gsgnnedgedataload": 14, "return": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 48, 49, 50, 51, 52], "gsgnnedgedataloaderbas": 15, "gsgnnedgeinferdata": 16, "arguement": [16, 17, 22, 23], "gsgnnedgetraindata": 17, "gsgnnlinkpredictiondataload": 18, "gsgnnlinkpredictiondataloaderbas": 19, "gsgnnnodedataload": 20, "gsgnnnodedataloaderbas": 21, "gsgnnnodeinferdata": 22, "gsgnnnodetraindata": 23, "gsgnnaccevalu": 24, "gsgnninstanceevalu": 25, "gsgnnlpevalu": 26, "gsgnnmrrlpevalu": 27, "gsgnnperetypemrrlpevalu": 28, "gsgnnregressionevalu": 29, "gsf": 30, "initi": 30, "gsgnnedgepredictioninferr": 31, "gsgnnlinkpredictioninferr": 32, "gsgnnnodepredictioninferr": 33, "gslmnodeencoderinputlay": 34, "gsnodeencoderinputlay": 35, "gspurelmnodeinputlay": 36, "gsgnnedgemodelbas": 37, "gsgnnlinkpredictionmodelbas": 38, "gsgnnnodemodelbas": 39, "hgtencod": 40, "hgtlayer": 41, "note": [41, 42, 43, 46], "relgraphconvlay": 42, "relationalattlay": 43, "relationalgatencod": 44, "relationalgcnencod": 45, "sageconv": 46, "sageencod": 47, "glemnodepredictiontrain": 48, "gsgnnedgepredictiontrain": 49, "gsgnnlinkpredictiontrain": 50, "gsgnnnodepredictiontrain": 51, "util": 52, "setup_devic": 52, "develop": [53, 55], "guid": [53, 55], "instal": [53, 55, 57, 58, 60], "jdk": 53, "8": [53, 55], "11": [53, 55], "pyenv": 53, "9": [53, 55], "env": 53, "activ": 53, "poetri": [53, 55, 57], "depend": [53, 58, 60], "through": 53, "black": 53, "code": [53, 60], "option": [53, 58, 60, 63], "mypi": 53, "pylint": 53, "lint": 53, "pre": 53, "commit": 53, "hook": 53, "ensur": 53, "befor": 53, "object": 54, "content": 54, "support": 54, "oag": 54, "paper": 54, "get": [55, 59, 62], "gsprocess": [55, 56, 58], "java": 55, "local": [55, 58], "amazon": [55, 56, 57, 62], "sagemak": [55, 56, 57, 62], "distribut": [56, 61], "upload": [56, 62], "s3": 56, "The": [56, 63], "num": 56, "examin": [56, 58], "clone": [57, 60], "repositori": [57, 62], "set": 57, "up": [57, 62, 64], "aw": 57, "access": 57, "push": 57, "elast": 57, "registri": 57, "ecr": [57, 62], "script": [57, 63], "expect": 58, "rel": 58, "path": 58, "ar": 58, "welcom": 59, "document": 59, "tutori": [59, 63, 64], "scale": 59, "giant": 59, "topic": 59, "contribut": 59, "pip": 60, "packag": 60, "ssh": 60, "No": 60, "password": 60, "login": 60, "toolkit": 60, "cluster": 61, "instanc": 61, "share": 61, "system": 61, "mount": 61, "nf": 61, "folder": 61, "ip": 61, "address": 61, "check": 61, "port": 61, "statu": 61, "collect": 61, "list": 61, "One": 61, "larg": 61, "ogbn": 61, "papers100m": 61, "all": 61, "servic": 62, "pass": 62, "estim": 62, "processor": 62, "compos": 62, "clean": [62, 64], "label": 63, "split": 63, "acm": 63, "includ": 63, "standalon": 64, "mode": 64, "quick": 64, "download": 64, "ogb": 64, "arxiv": 64}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"GraphStorm Advanced Usages": [[0, "graphstorm-advanced-usages"]], "Prevent Information Leakage in Link Prediction": [[0, "prevent-information-leakage-in-link-prediction"]], "Speedup Link Prediction Training": [[0, "speedup-link-prediction-training"]], "Multiple Target Node Types Training": [[0, "multiple-target-node-types-training"]], "Use WholeGraph in GraphStorm": [[1, "use-wholegraph-in-graphstorm"]], "Motivation": [[1, "motivation"]], "Setup GraphStorm-WholeGraph Docker environment": [[1, "setup-graphstorm-wholegraph-docker-environment"]], "Prerequisite": [[1, "prerequisite"]], "Build a GraphStorm-WholeGraph Docker image from source": [[1, "build-a-graphstorm-wholegraph-docker-image-from-source"]], "Create a GraphStorm-WholeGraph container": [[1, "create-a-graphstorm-wholegraph-container"]], "Verify EFA and NCCL configuration": [[1, "verify-efa-and-nccl-configuration"]], "Convert node features to a WholeGraph-compatible format": [[1, "convert-node-features-to-a-wholegraph-compatible-format"]], "Run training jobs for link prediction using WholeGraph": [[1, "run-training-jobs-for-link-prediction-using-wholegraph"]], "Use Text as Node Features": [[2, "use-text-as-node-features"]], "Prepare Raw Data": [[2, "prepare-raw-data"]], "Construct Graph": [[2, "construct-graph"]], "GraphStorm Language Model Configuration": [[2, "graphstorm-language-model-configuration"]], "Launch GraphStorm Trainig without Fine-tuning BERT Models": [[2, "launch-graphstorm-trainig-without-fine-tuning-bert-models"]], "Launch GraphStorm Trainig for both BERT and GNN Models": [[2, "launch-graphstorm-trainig-for-both-bert-and-gnn-models"]], "Only Use BERT Models": [[2, "only-use-bert-models"]], "Use Your Own Models": [[3, "use-your-own-models"]], "Prerequisites": [[3, "prerequisites"], [60, "prerequisites"], [60, "id1"], [62, "prerequisites"]], "Use DGL to implement your GNN models": [[3, "use-dgl-to-implement-your-gnn-models"]], "Modify you GNN models to use mini-batch training/inference": [[3, "modify-you-gnn-models-to-use-mini-batch-training-inference"]], "Learn how to run GraphStorm in a Docker environment": [[3, "learn-how-to-run-graphstorm-in-a-docker-environment"]], "Modifications required for customer models": [[3, "modifications-required-for-customer-models"]], "Step 1: Convert your graph data into required format": [[3, "step-1-convert-your-graph-data-into-required-format"]], "Step 2: Modify your GNN model to use the GraphStorm APIs": [[3, "step-2-modify-your-gnn-model-to-use-the-graphstorm-apis"]], "Step 3. Modify the training/inference flow with the GraphStorm APIs": [[3, "step-3-modify-the-training-inference-flow-with-the-graphstorm-apis"]], "Start training process with GraphStorm\u2019s iniatilization": [[3, "start-training-process-with-graphstorm-s-iniatilization"]], "Replace DGL DataLoader with the GraphStorm\u2019s dataset and dataloader": [[3, "replace-dgl-dataloader-with-the-graphstorm-s-dataset-and-dataloader"]], "Use GraphStorm\u2019s model trainer to wrap your model and attach evaluator and task tracker to it": [[3, "use-graphstorm-s-model-trainer-to-wrap-your-model-and-attach-evaluator-and-task-tracker-to-it"]], "Use trainer\u2019s fit() function to run training": [[3, "use-trainer-s-fit-function-to-run-training"]], "Step 4. Handle the unused weights error": [[3, "step-4-handle-the-unused-weights-error"]], "Step 5. Add a few additional arguments for the Python main function": [[3, "step-5-add-a-few-additional-arguments-for-the-python-main-function"]], "Step 6. Setup GraphStorm configuration YAML file": [[3, "step-6-setup-graphstorm-configuration-yaml-file"]], "Put Everything Together and Run them": [[3, "put-everything-together-and-run-them"]], "graphstorm": [[4, "graphstorm"]], "graphstorm.dataloading": [[5, "graphstorm-dataloading"]], "Base DataLoaders": [[5, "base-dataloaders"]], "DataSets": [[5, "datasets"]], "DataLoaders": [[5, "dataloaders"]], "graphstorm.eval": [[6, "graphstorm-eval"]], "Base Evaluators": [[6, "base-evaluators"]], "Evaluators": [[6, "evaluators"]], "graphstorm.inference": [[7, "graphstorm-inference"]], "graphstorm.model": [[8, "graphstorm-model"]], "Base models": [[8, "base-models"]], "Input Layers": [[8, "input-layers"]], "Encoders and GNN Layers": [[8, "encoders-and-gnn-layers"]], "graphstorm.trainer": [[9, "graphstorm-trainer"]], "Trainers": [[9, "trainers"]], "Graph Construction": [[10, "graph-construction"]], "construct_graph.py arguments": [[10, "construct-graph-py-arguments"]], "Configuration JSON Explanations": [[10, "configuration-json-explanations"]], "version": [[10, "version"]], "nodes": [[10, "nodes"]], "edges": [[10, "edges"]], "Input formats": [[10, "input-formats"]], "Feature transformation": [[10, "feature-transformation"]], "Output": [[10, "output"]], "An example": [[10, "an-example"]], "Graph Partition": [[11, "graph-partition"]], "partition_graph.py arguments": [[11, "partition-graph-py-arguments"]], "partition_graph_lp.py arguments": [[11, "partition-graph-lp-py-arguments"]], "Training and Inference": [[12, "training-and-inference"]], "Launch Arguments": [[12, "launch-arguments"]], "Environment Configurations": [[12, "environment-configurations"]], "Model Configurations": [[12, "model-configurations"]], "Built-in Model Specific Configurations": [[12, "built-in-model-specific-configurations"]], "RGCN": [[12, "rgcn"]], "RGAT": [[12, "rgat"]], "Model Save/Restore Configurations": [[12, "model-save-restore-configurations"]], "Model Training Hyper-parameters Configurations": [[12, "model-training-hyper-parameters-configurations"]], "Early stop configurations": [[12, "early-stop-configurations"]], "Model Evaluation Configurations": [[12, "model-evaluation-configurations"]], "Language Model Specific Configurations": [[12, "language-model-specific-configurations"]], "Task Specific Configurations": [[12, "task-specific-configurations"]], "General Configurations": [[12, "general-configurations"]], "Classification and Regression Task": [[12, "classification-and-regression-task"]], "Node Classification/Regression Specific": [[12, "node-classification-regression-specific"]], "Edge Classification/Regression Specific": [[12, "edge-classification-regression-specific"]], "Link Prediction Task": [[12, "link-prediction-task"]], "Distillation Specific Configurations": [[12, "distillation-specific-configurations"]], "GraphStorm Configurations": [[13, "graphstorm-configurations"]], "GSgnnEdgeDataLoader": [[14, "gsgnnedgedataloader"]], "Parameters": [[14, "parameters"], [15, "parameters"], [16, "parameters"], [16, "id1"], [16, "id2"], [16, "id4"], [17, "parameters"], [17, "id1"], [17, "id2"], [17, "id4"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [22, "id1"], [22, "id2"], [22, "id4"], [23, "parameters"], [23, "id1"], [23, "id2"], [23, "id4"], [24, "parameters"], [24, "id1"], [24, "id2"], [24, "id4"], [25, "parameters"], [25, "id1"], [25, "id2"], [25, "id3"], [26, "parameters"], [26, "id1"], [26, "id2"], [27, "parameters"], [27, "id1"], [27, "id2"], [27, "id4"], [28, "parameters"], [28, "id1"], [28, "id2"], [28, "id4"], [29, "parameters"], [29, "id1"], [29, "id2"], [29, "id4"], [30, "parameters"], [31, "parameters"], [31, "id1"], [31, "id2"], [32, "parameters"], [32, "id1"], [32, "id2"], [33, "parameters"], [33, "id1"], [33, "id2"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [37, "id1"], [37, "id3"], [37, "id5"], [38, "parameters"], [38, "id1"], [38, "id3"], [39, "parameters"], [39, "id1"], [39, "id3"], [39, "id5"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [48, "id1"], [48, "id2"], [48, "id3"], [48, "id4"], [48, "id5"], [48, "id6"], [49, "parameters"], [49, "id1"], [49, "id2"], [49, "id3"], [49, "id4"], [49, "id5"], [49, "id6"], [50, "parameters"], [50, "id1"], [50, "id2"], [50, "id3"], [50, "id4"], [50, "id5"], [50, "id6"], [51, "parameters"], [51, "id1"], [51, "id2"], [51, "id3"], [51, "id4"], [51, "id5"], [51, "id6"], [52, "parameters"]], "Examples": [[14, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [20, "examples"], [22, "examples"], [23, "examples"], [37, "examples"], [37, "id4"], [38, "examples"], [38, "id2"], [39, "examples"], [39, "id4"], [54, "examples"]], "Returns": [[14, "returns"], [15, "returns"], [16, "returns"], [16, "id3"], [16, "id5"], [17, "returns"], [17, "id3"], [17, "id5"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [22, "id3"], [22, "id5"], [23, "returns"], [23, "id3"], [23, "id5"], [24, "returns"], [24, "id3"], [24, "id5"], [24, "id6"], [25, "returns"], [25, "id4"], [25, "id5"], [26, "returns"], [26, "id3"], [27, "returns"], [27, "id3"], [27, "id5"], [28, "returns"], [28, "id3"], [28, "id5"], [29, "returns"], [29, "id3"], [29, "id5"], [29, "id6"], [37, "returns"], [37, "id2"], [38, "returns"], [39, "returns"], [39, "id2"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"]], "GSgnnEdgeDataLoaderBase": [[15, "gsgnnedgedataloaderbase"]], "GSgnnEdgeInferData": [[16, "gsgnnedgeinferdata"]], "Arguement": [[16, "arguement"], [17, "arguement"], [22, "arguement"], [23, "arguement"]], "GSgnnEdgeTrainData": [[17, "gsgnnedgetraindata"]], "GSgnnLinkPredictionDataLoader": [[18, "gsgnnlinkpredictiondataloader"]], "Argument": [[18, "argument"]], "GSgnnLinkPredictionDataLoaderBase": [[19, "gsgnnlinkpredictiondataloaderbase"]], "GSgnnNodeDataLoader": [[20, "gsgnnnodedataloader"]], "GSgnnNodeDataLoaderBase": [[21, "gsgnnnodedataloaderbase"]], "GSgnnNodeInferData": [[22, "gsgnnnodeinferdata"]], "GSgnnNodeTrainData": [[23, "gsgnnnodetraindata"]], "GSgnnAccEvaluator": [[24, "gsgnnaccevaluator"]], "GSgnnInstanceEvaluator": [[25, "gsgnninstanceevaluator"]], "GSgnnLPEvaluator": [[26, "gsgnnlpevaluator"]], "GSgnnMrrLPEvaluator": [[27, "gsgnnmrrlpevaluator"]], "GSgnnPerEtypeMrrLPEvaluator": [[28, "gsgnnperetypemrrlpevaluator"]], "GSgnnRegressionEvaluator": [[29, "gsgnnregressionevaluator"]], "graphstorm.gsf.initialize": [[30, "graphstorm-gsf-initialize"]], "GSgnnEdgePredictionInferrer": [[31, "gsgnnedgepredictioninferrer"]], "GSgnnLinkPredictionInferrer": [[32, "gsgnnlinkpredictioninferrer"]], "GSgnnNodePredictionInferrer": [[33, "gsgnnnodepredictioninferrer"]], "graphstorm.model.GSLMNodeEncoderInputLayer": [[34, "graphstorm-model-gslmnodeencoderinputlayer"]], "Examples:": [[34, "examples"], [35, "examples"], [36, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"]], "graphstorm.model.GSNodeEncoderInputLayer": [[35, "graphstorm-model-gsnodeencoderinputlayer"]], "graphstorm.model.GSPureLMNodeInputLayer": [[36, "graphstorm-model-gspurelmnodeinputlayer"]], "GSgnnEdgeModelBase": [[37, "gsgnnedgemodelbase"]], "GSgnnLinkPredictionModelBase": [[38, "gsgnnlinkpredictionmodelbase"]], "GSgnnNodeModelBase": [[39, "gsgnnnodemodelbase"]], "graphstorm.model.HGTEncoder": [[40, "graphstorm-model-hgtencoder"]], "graphstorm.model.HGTLayer": [[41, "graphstorm-model-hgtlayer"]], "Note:": [[41, "note"], [42, "note"], [43, "note"], [46, "note"]], "graphstorm.model.RelGraphConvLayer": [[42, "graphstorm-model-relgraphconvlayer"]], "graphstorm.model.RelationalAttLayer": [[43, "graphstorm-model-relationalattlayer"]], "graphstorm.model.RelationalGATEncoder": [[44, "graphstorm-model-relationalgatencoder"]], "graphstorm.model.RelationalGCNEncoder": [[45, "graphstorm-model-relationalgcnencoder"]], "graphstorm.model.SAGEConv": [[46, "graphstorm-model-sageconv"]], "graphstorm.model.SAGEEncoder": [[47, "graphstorm-model-sageencoder"]], "GLEMNodePredictionTrainer": [[48, "glemnodepredictiontrainer"]], "Example": [[48, "example"], [49, "example"], [50, "example"], [51, "example"], [55, "example"]], "GSgnnEdgePredictionTrainer": [[49, "gsgnnedgepredictiontrainer"]], "GSgnnLinkPredictionTrainer": [[50, "gsgnnlinkpredictiontrainer"]], "GSgnnNodePredictionTrainer": [[51, "gsgnnnodepredictiontrainer"]], "graphstorm.utils.setup_device": [[52, "graphstorm-utils-setup-device"]], "Developer Guide": [[53, "developer-guide"]], "Install JDK 8, 11": [[53, "install-jdk-8-11"]], "Install pyenv": [[53, "install-pyenv"]], "Create a Python 3.9 env and activate it.": [[53, "create-a-python-3-9-env-and-activate-it"]], "Install poetry": [[53, "install-poetry"]], "Install dependencies through poetry": [[53, "install-dependencies-through-poetry"]], "Use black to format code [optional]": [[53, "use-black-to-format-code-optional"]], "Use mypy and pylint to lint code": [[53, "use-mypy-and-pylint-to-lint-code"]], "Use a pre-commit hook to ensure black and pylint run before commits": [[53, "use-a-pre-commit-hook-to-ensure-black-and-pylint-run-before-commits"]], "GraphStorm Processing Input Configuration": [[54, "graphstorm-processing-input-configuration"]], "graph configuration object": [[54, "graph-configuration-object"]], "Contents of an edges configuration object": [[54, "contents-of-an-edges-configuration-object"]], "Contents of a nodes configuration object": [[54, "contents-of-a-nodes-configuration-object"]], "Contents of a features configuration object": [[54, "contents-of-a-features-configuration-object"]], "Supported transformations": [[54, "supported-transformations"]], "OAG-Paper dataset": [[54, "oag-paper-dataset"]], "GraphStorm Processing Getting Started": [[55, "graphstorm-processing-getting-started"]], "Installation": [[55, "installation"]], "Install Python 3.9": [[55, "install-python-3-9"]], "Install GSProcessing from source": [[55, "install-gsprocessing-from-source"]], "Install GSProcessing using poetry": [[55, "install-gsprocessing-using-poetry"]], "Install Java 8 or 11": [[55, "install-java-8-or-11"]], "Running locally": [[55, "running-locally"]], "Using with Amazon SageMaker": [[55, "using-with-amazon-sagemaker"]], "Developer guide": [[55, "developer-guide"]], "Running distributed jobs on Amazon SageMaker": [[56, "running-distributed-jobs-on-amazon-sagemaker"]], "Upload data to S3": [[56, "upload-data-to-s3"]], "Launch the GSProcessing job on Amazon SageMaker": [[56, "launch-the-gsprocessing-job-on-amazon-sagemaker"]], "The --num-output-files parameter": [[56, "the-num-output-files-parameter"]], "Examine the output": [[56, "examine-the-output"]], "Run distributed partitioning and training on Amazon SageMaker": [[56, "run-distributed-partitioning-and-training-on-amazon-sagemaker"]], "GraphStorm Processing setup for Amazon SageMaker": [[57, "graphstorm-processing-setup-for-amazon-sagemaker"]], "Clone the GraphStorm repository": [[57, "clone-the-graphstorm-repository"]], "Install Docker": [[57, "install-docker"]], "Install Poetry": [[57, "install-poetry"]], "Set up AWS access": [[57, "set-up-aws-access"]], "Building the GraphStorm Processing image using Docker": [[57, "building-the-graphstorm-processing-image-using-docker"]], "Push the image to the Amazon Elastic Container Registry (ECR)": [[57, "push-the-image-to-the-amazon-elastic-container-registry-ecr"]], "Launch a SageMaker Processing job using the example scripts.": [[57, "launch-a-sagemaker-processing-job-using-the-example-scripts"]], "GraphStorm Processing Example": [[58, "graphstorm-processing-example"]], "Install example dependencies": [[58, "install-example-dependencies"]], "Expected file inputs and configuration": [[58, "expected-file-inputs-and-configuration"]], "Relative file paths required": [[58, "relative-file-paths-required"]], "Node files are optional": [[58, "node-files-are-optional"]], "Example data and configuration": [[58, "example-data-and-configuration"]], "Run a GSProcessing job locally": [[58, "run-a-gsprocessing-job-locally"]], "Examining the job output": [[58, "examining-the-job-output"]], "Welcome to the GraphStorm Documentation and Tutorials": [[59, "welcome-to-the-graphstorm-documentation-and-tutorials"]], "Getting Started": [[59, "getting-started"]], "Scale to Giant Graphs": [[59, "scale-to-giant-graphs"]], "Advanced Topics": [[59, "advanced-topics"]], "Contribution": [[59, "contribution"]], "Environment Setup": [[60, "environment-setup"]], "1. Setup GraphStorm with pip Packages": [[60, "setup-graphstorm-with-pip-packages"]], "Install GraphStorm": [[60, "install-graphstorm"]], "Install Dependencies": [[60, "install-dependencies"]], "Configure SSH No-password login": [[60, "configure-ssh-no-password-login"]], "Clone GraphStorm Toolkits (Optional)": [[60, "clone-graphstorm-toolkits-optional"]], "2. Setup GraphStorm Docker Environment": [[60, "setup-graphstorm-docker-environment"]], "Build a GraphStorm Docker image from source code": [[60, "build-a-graphstorm-docker-image-from-source-code"]], "Create a GraphStorm Container": [[60, "create-a-graphstorm-container"]], "Use GraphStorm in a Distributed Cluster": [[61, "use-graphstorm-in-a-distributed-cluster"]], "Create a GraphStorm Cluster": [[61, "create-a-graphstorm-cluster"], [61, "id4"]], "Setup the instance of a cluster": [[61, "setup-the-instance-of-a-cluster"]], "Setup of a shared file system for the cluster": [[61, "setup-of-a-shared-file-system-for-the-cluster"]], "Create GraphStorm container by mounting the NFS folder": [[61, "create-graphstorm-container-by-mounting-the-nfs-folder"]], "Setup the IP address file and check port status": [[61, "setup-the-ip-address-file-and-check-port-status"]], "Collect the IP list": [[61, "collect-the-ip-list"]], "Check port": [[61, "check-port"]], "Partition a Graph": [[61, "partition-a-graph"]], "Launch Training on One Container": [[61, "launch-training-on-one-container"]], "Train a Large Graph (OGBN-Papers100M)": [[61, "train-a-large-graph-ogbn-papers100m"]], "Process and Partition a Graph": [[61, "process-and-partition-a-graph"]], "Distribute Partitioned Graphs and Configurations to all Instances": [[61, "distribute-partitioned-graphs-and-configurations-to-all-instances"]], "Launch Training in One Container": [[61, "launch-training-in-one-container"]], "Use GraphStorm on SageMaker": [[62, "use-graphstorm-on-sagemaker"]], "Setup GraphStorm SageMaker Docker Image": [[62, "setup-graphstorm-sagemaker-docker-image"]], "Step 1: Build a SageMaker-compatible Docker image": [[62, "step-1-build-a-sagemaker-compatible-docker-image"]], "Step 2: Upload Docker Images to Amazon ECR Repository": [[62, "step-2-upload-docker-images-to-amazon-ecr-repository"]], "Run GraphStorm on SageMaker": [[62, "run-graphstorm-on-sagemaker"]], "Run GraphStorm with Amazon SageMaker service": [[62, "run-graphstorm-with-amazon-sagemaker-service"]], "Prepare graph data": [[62, "prepare-graph-data"]], "Launch training": [[62, "launch-training"]], "Launch inference": [[62, "launch-inference"], [64, "launch-inference"]], "Launch graph partitioning task": [[62, "launch-graph-partitioning-task"]], "Passing additional arguments to the SageMaker Estimator/Processor": [[62, "passing-additional-arguments-to-the-sagemaker-estimator-processor"]], "Run GraphStorm SageMaker with Docker Compose": [[62, "run-graphstorm-sagemaker-with-docker-compose"]], "Get Started": [[62, "get-started"]], "Generate a Docker Compose file": [[62, "generate-a-docker-compose-file"]], "Run GraphStorm on Docker Compose for Training": [[62, "run-graphstorm-on-docker-compose-for-training"]], "Run GraphStorm on Docker Compose for Inference": [[62, "run-graphstorm-on-docker-compose-for-inference"]], "Clean Up": [[62, "clean-up"], [64, "clean-up"]], "Use Your Own Data Tutorial": [[63, "use-your-own-data-tutorial"]], "Step 1: Prepare Your Own Graph Data": [[63, "step-1-prepare-your-own-graph-data"]], "Option 1: Required raw data format": [[63, "option-1-required-raw-data-format"]], "The input configuration JSON": [[63, "the-input-configuration-json"]], "Customized label split": [[63, "customized-label-split"]], "Input raw node/edge data files": [[63, "input-raw-node-edge-data-files"]], "Outputs of graph construction": [[63, "outputs-of-graph-construction"]], "Option 2: Required DGL graph": [[63, "option-2-required-dgl-graph"]], "Required DGL graph format": [[63, "required-dgl-graph-format"]], "The ACM graph data example": [[63, "the-acm-graph-data-example"]], "Partition the DGL ACM graph for node classification": [[63, "partition-the-dgl-acm-graph-for-node-classification"]], "Step 2: Modify the YAML configuration file to include your own data\u2019s information": [[63, "step-2-modify-the-yaml-configuration-file-to-include-your-own-data-s-information"]], "An example ACM  YAML file for node classification": [[63, "an-example-acm-yaml-file-for-node-classification"]], "Step 3: Launch training script on your own graphs": [[63, "step-3-launch-training-script-on-your-own-graphs"]], "Standalone Mode Quick Start Tutorial": [[64, "standalone-mode-quick-start-tutorial"]], "Download  and Partition OGB-arxiv Data": [[64, "download-and-partition-ogb-arxiv-data"]], "Launch Training": [[64, "launch-training"]]}, "indexentries": {"gsgnnedgedataloader (class in graphstorm.dataloading)": [[14, "graphstorm.dataloading.GSgnnEdgeDataLoader"]], "__iter__() (graphstorm.dataloading.gsgnnedgedataloader method)": [[14, "graphstorm.dataloading.GSgnnEdgeDataLoader.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnedgedataloader method)": [[14, "graphstorm.dataloading.GSgnnEdgeDataLoader.__next__"]], "gsgnnedgedataloaderbase (class in graphstorm.dataloading)": [[15, "graphstorm.dataloading.GSgnnEdgeDataLoaderBase"]], "__iter__() (graphstorm.dataloading.gsgnnedgedataloaderbase method)": [[15, "graphstorm.dataloading.GSgnnEdgeDataLoaderBase.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnedgedataloaderbase method)": [[15, "graphstorm.dataloading.GSgnnEdgeDataLoaderBase.__next__"]], "gsgnnedgeinferdata (class in graphstorm.dataloading)": [[16, "graphstorm.dataloading.GSgnnEdgeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[16, "graphstorm.dataloading.GSgnnEdgeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[16, "graphstorm.dataloading.GSgnnEdgeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[16, "graphstorm.dataloading.GSgnnEdgeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[16, "graphstorm.dataloading.GSgnnEdgeInferData.prepare_data"]], "gsgnnedgetraindata (class in graphstorm.dataloading)": [[17, "graphstorm.dataloading.GSgnnEdgeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[17, "graphstorm.dataloading.GSgnnEdgeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgetraindata method)": [[17, "graphstorm.dataloading.GSgnnEdgeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[17, "graphstorm.dataloading.GSgnnEdgeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgetraindata method)": [[17, "graphstorm.dataloading.GSgnnEdgeTrainData.prepare_data"]], "gsgnnlinkpredictiondataloader (class in graphstorm.dataloading)": [[18, "graphstorm.dataloading.GSgnnLinkPredictionDataLoader"]], "__iter__() (graphstorm.dataloading.gsgnnlinkpredictiondataloader method)": [[18, "graphstorm.dataloading.GSgnnLinkPredictionDataLoader.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnlinkpredictiondataloader method)": [[18, "graphstorm.dataloading.GSgnnLinkPredictionDataLoader.__next__"]], "gsgnnlinkpredictiondataloaderbase (class in graphstorm.dataloading)": [[19, "graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase"]], "__iter__() (graphstorm.dataloading.gsgnnlinkpredictiondataloaderbase method)": [[19, "graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnlinkpredictiondataloaderbase method)": [[19, "graphstorm.dataloading.GSgnnLinkPredictionDataLoaderBase.__next__"]], "gsgnnnodedataloader (class in graphstorm.dataloading)": [[20, "graphstorm.dataloading.GSgnnNodeDataLoader"]], "__iter__() (graphstorm.dataloading.gsgnnnodedataloader method)": [[20, "graphstorm.dataloading.GSgnnNodeDataLoader.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnnodedataloader method)": [[20, "graphstorm.dataloading.GSgnnNodeDataLoader.__next__"]], "gsgnnnodedataloaderbase (class in graphstorm.dataloading)": [[21, "graphstorm.dataloading.GSgnnNodeDataLoaderBase"]], "__iter__() (graphstorm.dataloading.gsgnnnodedataloaderbase method)": [[21, "graphstorm.dataloading.GSgnnNodeDataLoaderBase.__iter__"]], "__next__() (graphstorm.dataloading.gsgnnnodedataloaderbase method)": [[21, "graphstorm.dataloading.GSgnnNodeDataLoaderBase.__next__"]], "gsgnnnodeinferdata (class in graphstorm.dataloading)": [[22, "graphstorm.dataloading.GSgnnNodeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[22, "graphstorm.dataloading.GSgnnNodeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[22, "graphstorm.dataloading.GSgnnNodeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[22, "graphstorm.dataloading.GSgnnNodeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[22, "graphstorm.dataloading.GSgnnNodeInferData.prepare_data"]], "gsgnnnodetraindata (class in graphstorm.dataloading)": [[23, "graphstorm.dataloading.GSgnnNodeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[23, "graphstorm.dataloading.GSgnnNodeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodetraindata method)": [[23, "graphstorm.dataloading.GSgnnNodeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[23, "graphstorm.dataloading.GSgnnNodeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodetraindata method)": [[23, "graphstorm.dataloading.GSgnnNodeTrainData.prepare_data"]], "gsgnnaccevaluator (class in graphstorm.eval)": [[24, "graphstorm.eval.GSgnnAccEvaluator"]], "compute_score() (graphstorm.eval.gsgnnaccevaluator method)": [[24, "graphstorm.eval.GSgnnAccEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnaccevaluator method)": [[24, "graphstorm.eval.GSgnnAccEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnaccevaluator method)": [[24, "graphstorm.eval.GSgnnAccEvaluator.evaluate"]], "history (graphstorm.eval.gsgnnaccevaluator property)": [[24, "graphstorm.eval.GSgnnAccEvaluator.history"]], "gsgnninstanceevaluator (class in graphstorm.eval)": [[25, "graphstorm.eval.GSgnnInstanceEvaluator"]], "compute_score() (graphstorm.eval.gsgnninstanceevaluator method)": [[25, "graphstorm.eval.GSgnnInstanceEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnninstanceevaluator method)": [[25, "graphstorm.eval.GSgnnInstanceEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnninstanceevaluator method)": [[25, "graphstorm.eval.GSgnnInstanceEvaluator.evaluate"]], "history (graphstorm.eval.gsgnninstanceevaluator property)": [[25, "graphstorm.eval.GSgnnInstanceEvaluator.history"]], "gsgnnlpevaluator (class in graphstorm.eval)": [[26, "graphstorm.eval.GSgnnLPEvaluator"]], "do_eval() (graphstorm.eval.gsgnnlpevaluator method)": [[26, "graphstorm.eval.GSgnnLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnlpevaluator method)": [[26, "graphstorm.eval.GSgnnLPEvaluator.evaluate"]], "gsgnnmrrlpevaluator (class in graphstorm.eval)": [[27, "graphstorm.eval.GSgnnMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[27, "graphstorm.eval.GSgnnMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[27, "graphstorm.eval.GSgnnMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[27, "graphstorm.eval.GSgnnMrrLPEvaluator.evaluate"]], "gsgnnperetypemrrlpevaluator (class in graphstorm.eval)": [[28, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[28, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[28, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[28, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.evaluate"]], "gsgnnregressionevaluator (class in graphstorm.eval)": [[29, "graphstorm.eval.GSgnnRegressionEvaluator"]], "compute_score() (graphstorm.eval.gsgnnregressionevaluator method)": [[29, "graphstorm.eval.GSgnnRegressionEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnregressionevaluator method)": [[29, "graphstorm.eval.GSgnnRegressionEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnregressionevaluator method)": [[29, "graphstorm.eval.GSgnnRegressionEvaluator.evaluate"]], "history (graphstorm.eval.gsgnnregressionevaluator property)": [[29, "graphstorm.eval.GSgnnRegressionEvaluator.history"]], "initialize() (in module graphstorm.gsf)": [[30, "graphstorm.gsf.initialize"]], "gsgnnedgepredictioninferrer (class in graphstorm.inference)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer"]], "device (graphstorm.inference.gsgnnedgepredictioninferrer property)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer.device"]], "evaluator (graphstorm.inference.gsgnnedgepredictioninferrer property)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer.evaluator"]], "infer() (graphstorm.inference.gsgnnedgepredictioninferrer method)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer.infer"]], "setup_device() (graphstorm.inference.gsgnnedgepredictioninferrer method)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer.setup_device"]], "setup_evaluator() (graphstorm.inference.gsgnnedgepredictioninferrer method)": [[31, "graphstorm.inference.GSgnnEdgePredictionInferrer.setup_evaluator"]], "gsgnnlinkpredictioninferrer (class in graphstorm.inference)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer"]], "device (graphstorm.inference.gsgnnlinkpredictioninferrer property)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer.device"]], "evaluator (graphstorm.inference.gsgnnlinkpredictioninferrer property)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer.evaluator"]], "infer() (graphstorm.inference.gsgnnlinkpredictioninferrer method)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer.infer"]], "setup_device() (graphstorm.inference.gsgnnlinkpredictioninferrer method)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer.setup_device"]], "setup_evaluator() (graphstorm.inference.gsgnnlinkpredictioninferrer method)": [[32, "graphstorm.inference.GSgnnLinkPredictionInferrer.setup_evaluator"]], "gsgnnnodepredictioninferrer (class in graphstorm.inference)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer"]], "device (graphstorm.inference.gsgnnnodepredictioninferrer property)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer.device"]], "evaluator (graphstorm.inference.gsgnnnodepredictioninferrer property)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer.evaluator"]], "infer() (graphstorm.inference.gsgnnnodepredictioninferrer method)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer.infer"]], "setup_device() (graphstorm.inference.gsgnnnodepredictioninferrer method)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer.setup_device"]], "setup_evaluator() (graphstorm.inference.gsgnnnodepredictioninferrer method)": [[33, "graphstorm.inference.GSgnnNodePredictionInferrer.setup_evaluator"]], "gslmnodeencoderinputlayer (class in graphstorm.model)": [[34, "graphstorm.model.GSLMNodeEncoderInputLayer"]], "gsnodeencoderinputlayer (class in graphstorm.model)": [[35, "graphstorm.model.GSNodeEncoderInputLayer"]], "gspurelmnodeinputlayer (class in graphstorm.model)": [[36, "graphstorm.model.GSPureLMNodeInputLayer"]], "gsgnnedgemodelbase (class in graphstorm.model)": [[37, "graphstorm.model.GSgnnEdgeModelBase"]], "create_optimizer() (graphstorm.model.gsgnnedgemodelbase method)": [[37, "graphstorm.model.GSgnnEdgeModelBase.create_optimizer"]], "forward() (graphstorm.model.gsgnnedgemodelbase method)": [[37, "graphstorm.model.GSgnnEdgeModelBase.forward"]], "predict() (graphstorm.model.gsgnnedgemodelbase method)": [[37, "graphstorm.model.GSgnnEdgeModelBase.predict"]], "restore_model() (graphstorm.model.gsgnnedgemodelbase method)": [[37, "graphstorm.model.GSgnnEdgeModelBase.restore_model"]], "save_model() (graphstorm.model.gsgnnedgemodelbase method)": [[37, "graphstorm.model.GSgnnEdgeModelBase.save_model"]], "gsgnnlinkpredictionmodelbase (class in graphstorm.model)": [[38, "graphstorm.model.GSgnnLinkPredictionModelBase"]], "create_optimizer() (graphstorm.model.gsgnnlinkpredictionmodelbase method)": [[38, "graphstorm.model.GSgnnLinkPredictionModelBase.create_optimizer"]], "forward() (graphstorm.model.gsgnnlinkpredictionmodelbase method)": [[38, "graphstorm.model.GSgnnLinkPredictionModelBase.forward"]], "restore_model() (graphstorm.model.gsgnnlinkpredictionmodelbase method)": [[38, "graphstorm.model.GSgnnLinkPredictionModelBase.restore_model"]], "save_model() (graphstorm.model.gsgnnlinkpredictionmodelbase method)": [[38, "graphstorm.model.GSgnnLinkPredictionModelBase.save_model"]], "gsgnnnodemodelbase (class in graphstorm.model)": [[39, "graphstorm.model.GSgnnNodeModelBase"]], "create_optimizer() (graphstorm.model.gsgnnnodemodelbase method)": [[39, "graphstorm.model.GSgnnNodeModelBase.create_optimizer"]], "forward() (graphstorm.model.gsgnnnodemodelbase method)": [[39, "graphstorm.model.GSgnnNodeModelBase.forward"]], "predict() (graphstorm.model.gsgnnnodemodelbase method)": [[39, "graphstorm.model.GSgnnNodeModelBase.predict"]], "restore_model() (graphstorm.model.gsgnnnodemodelbase method)": [[39, "graphstorm.model.GSgnnNodeModelBase.restore_model"]], "save_model() (graphstorm.model.gsgnnnodemodelbase method)": [[39, "graphstorm.model.GSgnnNodeModelBase.save_model"]], "hgtencoder (class in graphstorm.model)": [[40, "graphstorm.model.HGTEncoder"]], "hgtlayer (class in graphstorm.model)": [[41, "graphstorm.model.HGTLayer"]], "relgraphconvlayer (class in graphstorm.model)": [[42, "graphstorm.model.RelGraphConvLayer"]], "relationalattlayer (class in graphstorm.model)": [[43, "graphstorm.model.RelationalAttLayer"]], "relationalgatencoder (class in graphstorm.model)": [[44, "graphstorm.model.RelationalGATEncoder"]], "relationalgcnencoder (class in graphstorm.model)": [[45, "graphstorm.model.RelationalGCNEncoder"]], "sageconv (class in graphstorm.model)": [[46, "graphstorm.model.SAGEConv"]], "sageencoder (class in graphstorm.model)": [[47, "graphstorm.model.SAGEEncoder"]], "glemnodepredictiontrainer (class in graphstorm.trainer)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer"]], "device (graphstorm.trainer.glemnodepredictiontrainer property)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.device"]], "eval() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.eval"]], "evaluator (graphstorm.trainer.glemnodepredictiontrainer property)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.evaluator"]], "fit() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.get_best_model_path"]], "optimizer (graphstorm.trainer.glemnodepredictiontrainer property)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.optimizer"]], "remove_saved_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.save_topk_models"]], "setup_device() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.setup_device"]], "setup_evaluator() (graphstorm.trainer.glemnodepredictiontrainer method)": [[48, "graphstorm.trainer.GLEMNodePredictionTrainer.setup_evaluator"]], "gsgnnedgepredictiontrainer (class in graphstorm.trainer)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer"]], "device (graphstorm.trainer.gsgnnedgepredictiontrainer property)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.device"]], "eval() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.eval"]], "evaluator (graphstorm.trainer.gsgnnedgepredictiontrainer property)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.evaluator"]], "fit() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.get_best_model_path"]], "optimizer (graphstorm.trainer.gsgnnedgepredictiontrainer property)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.optimizer"]], "remove_saved_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_topk_models"]], "setup_device() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.setup_device"]], "setup_evaluator() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[49, "graphstorm.trainer.GSgnnEdgePredictionTrainer.setup_evaluator"]], "gsgnnlinkpredictiontrainer (class in graphstorm.trainer)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer"]], "device (graphstorm.trainer.gsgnnlinkpredictiontrainer property)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.device"]], "eval() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.eval"]], "evaluator (graphstorm.trainer.gsgnnlinkpredictiontrainer property)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.evaluator"]], "fit() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.get_best_model_path"]], "optimizer (graphstorm.trainer.gsgnnlinkpredictiontrainer property)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.optimizer"]], "remove_saved_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_topk_models"]], "setup_device() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.setup_device"]], "setup_evaluator() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[50, "graphstorm.trainer.GSgnnLinkPredictionTrainer.setup_evaluator"]], "gsgnnnodepredictiontrainer (class in graphstorm.trainer)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer"]], "device (graphstorm.trainer.gsgnnnodepredictiontrainer property)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.device"]], "eval() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.eval"]], "evaluator (graphstorm.trainer.gsgnnnodepredictiontrainer property)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.evaluator"]], "fit() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.get_best_model_path"]], "optimizer (graphstorm.trainer.gsgnnnodepredictiontrainer property)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.optimizer"]], "remove_saved_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_topk_models"]], "setup_device() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.setup_device"]], "setup_evaluator() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[51, "graphstorm.trainer.GSgnnNodePredictionTrainer.setup_evaluator"]], "setup_device() (in module graphstorm.utils)": [[52, "graphstorm.utils.setup_device"]]}})