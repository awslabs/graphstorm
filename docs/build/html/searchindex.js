Search.setIndex({"docnames": ["advanced/advanced-usages", "advanced/language-models", "advanced/own-models", "api/graphstorm", "api/graphstorm.dataloading", "api/graphstorm.evaluator", "api/graphstorm.inferer", "api/graphstorm.model", "api/graphstorm.trainer", "configuration/configuration-gconstruction", "configuration/configuration-partition", "configuration/configuration-run", "configuration/index", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader", "generated/graphstorm.dataloading.GSgnnEdgeInferData", "generated/graphstorm.dataloading.GSgnnEdgeTrainData", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader", "generated/graphstorm.dataloading.GSgnnNodeDataLoader", "generated/graphstorm.dataloading.GSgnnNodeInferData", "generated/graphstorm.dataloading.GSgnnNodeTrainData", "generated/graphstorm.eval.GSgnnAccEvaluator", "generated/graphstorm.eval.GSgnnInstanceEvaluator", "generated/graphstorm.eval.GSgnnLPEvaluator", "generated/graphstorm.eval.GSgnnMrrLPEvaluator", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator", "generated/graphstorm.eval.GSgnnRegressionEvaluator", "generated/graphstorm.gsf.initialize", "generated/graphstorm.inference.GSgnnEdgePredictionInfer", "generated/graphstorm.inference.GSgnnLinkPredictionInfer", "generated/graphstorm.inference.GSgnnNodePredictionInfer", "generated/graphstorm.model.GSLMNodeEncoderInputLayer", "generated/graphstorm.model.GSNodeEncoderInputLayer", "generated/graphstorm.model.GSPureLMNodeInputLayer", "generated/graphstorm.model.RelGraphConvLayer", "generated/graphstorm.model.RelationalAttLayer", "generated/graphstorm.model.RelationalGATEncoder", "generated/graphstorm.model.RelationalGCNEncoder", "generated/graphstorm.model.SAGEConv", "generated/graphstorm.model.SAGEEncoder", "generated/graphstorm.trainer.GLEMNodePredictionTrainer", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer", "generated/graphstorm.trainer.GSgnnTrainer", "index", "install/env-setup", "scale/distributed", "scale/sagemaker", "tutorials/own-data", "tutorials/quick-start"], "filenames": ["advanced/advanced-usages.rst", "advanced/language-models.rst", "advanced/own-models.rst", "api/graphstorm.rst", "api/graphstorm.dataloading.rst", "api/graphstorm.evaluator.rst", "api/graphstorm.inferer.rst", "api/graphstorm.model.rst", "api/graphstorm.trainer.rst", "configuration/configuration-gconstruction.rst", "configuration/configuration-partition.rst", "configuration/configuration-run.rst", "configuration/index.rst", "generated/graphstorm.dataloading.GSgnnEdgeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnEdgeInferData.rst", "generated/graphstorm.dataloading.GSgnnEdgeTrainData.rst", "generated/graphstorm.dataloading.GSgnnLinkPredictionDataLoader.rst", "generated/graphstorm.dataloading.GSgnnNodeDataLoader.rst", "generated/graphstorm.dataloading.GSgnnNodeInferData.rst", "generated/graphstorm.dataloading.GSgnnNodeTrainData.rst", "generated/graphstorm.eval.GSgnnAccEvaluator.rst", "generated/graphstorm.eval.GSgnnInstanceEvaluator.rst", "generated/graphstorm.eval.GSgnnLPEvaluator.rst", "generated/graphstorm.eval.GSgnnMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.rst", "generated/graphstorm.eval.GSgnnRegressionEvaluator.rst", "generated/graphstorm.gsf.initialize.rst", "generated/graphstorm.inference.GSgnnEdgePredictionInfer.rst", "generated/graphstorm.inference.GSgnnLinkPredictionInfer.rst", "generated/graphstorm.inference.GSgnnNodePredictionInfer.rst", "generated/graphstorm.model.GSLMNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSNodeEncoderInputLayer.rst", "generated/graphstorm.model.GSPureLMNodeInputLayer.rst", "generated/graphstorm.model.RelGraphConvLayer.rst", "generated/graphstorm.model.RelationalAttLayer.rst", "generated/graphstorm.model.RelationalGATEncoder.rst", "generated/graphstorm.model.RelationalGCNEncoder.rst", "generated/graphstorm.model.SAGEConv.rst", "generated/graphstorm.model.SAGEEncoder.rst", "generated/graphstorm.trainer.GLEMNodePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnEdgePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnLinkPredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnNodePredictionTrainer.rst", "generated/graphstorm.trainer.GSgnnTrainer.rst", "index.rst", "install/env-setup.rst", "scale/distributed.rst", "scale/sagemaker.rst", "tutorials/own-data.rst", "tutorials/quick-start.rst"], "titles": ["GraphStorm Advanced Usages", "Use Text as Node Features", "Use Your Own Models", "graphstorm", "graphstorm.dataloading", "graphstorm.evaluator", "graphstorm.inferer", "graphstorm.model", "graphstorm.trainer", "Graph Construction", "Graph Partition", "Training and Inference", "GraphStorm Configurations", "GSgnnEdgeDataLoader", "GSgnnEdgeInferData", "GSgnnEdgeTrainData", "GSgnnLinkPredictionDataLoader", "GSgnnNodeDataLoader", "GSgnnNodeInferData", "GSgnnNodeTrainData", "GSgnnAccEvaluator", "GSgnnInstanceEvaluator", "GSgnnLPEvaluator", "GSgnnMrrLPEvaluator", "GSgnnPerEtypeMrrLPEvaluator", "GSgnnRegressionEvaluator", "graphstorm.gsf.initialize", "GSgnnEdgePredictionInfer", "GSgnnLinkPredictionInfer", "GSgnnNodePredictionInfer", "GSLMNodeEncoderInputLayer", "GSNodeEncoderInputLayer", "GSPureLMNodeInputLayer", "RelGraphConvLayer", "RelationalAttLayer", "RelationalGATEncoder", "RelationalGCNEncoder", "SAGEConv", "SAGEEncoder", "GLEMNodePredictionTrainer", "GSgnnEdgePredictionTrainer", "GSgnnLinkPredictionTrainer", "GSgnnNodePredictionTrainer", "GSgnnTrainer", "Welcome to the GraphStorm Documentation and Tutorials", "Environment Setup", "Use GraphStorm in a Distributed Cluster", "Use GraphStorm on SageMaker", "Use Your Own Data Tutorial", "Standalone Mode Quick Start Tutorial"], "terms": {"i": [0, 1, 2, 9, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "wide": [0, 44], "emploi": 0, "pre": [0, 1, 11, 48], "techniqu": 0, "gener": [0, 1, 2, 9, 10, 23, 24, 27, 28, 29, 30, 43, 48, 49], "high": [0, 9], "qualiti": 0, "entiti": 0, "represent": 0, "applic": [0, 10, 11, 47], "divers": 0, "busi": [0, 48], "howev": [0, 1, 11], "implement": [0, 11, 44, 48], "loop": [0, 1, 2, 11, 33, 34, 35], "task": [0, 1, 9, 10, 12, 17, 18, 19, 20, 27, 28, 29, 46, 47, 48, 49], "need": [0, 1, 2, 10, 11, 12, 44, 45, 46, 47, 48, 49], "carefulli": 0, "handl": [0, 46], "problem": [0, 2, 11], "caus": [0, 1, 2, 46], "1": [0, 1, 9, 10, 11, 20, 21, 22, 23, 24, 25, 27, 28, 29, 35, 36, 38, 39, 42, 43, 46, 49], "includ": [0, 1, 2, 11, 12, 33, 34, 39, 40, 41, 42, 43, 45, 47, 49], "target": [0, 2, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 46, 48], "edg": [0, 2, 10, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 27, 28, 40, 41, 44, 46, 47, 49], "messag": [0, 11, 13, 33, 34], "pass": [0, 2, 11, 13, 33, 47], "2": [0, 1, 9, 11, 20, 21, 22, 23, 24, 25, 27, 28, 29, 39, 40, 41, 42, 44, 46], "valid": [0, 2, 9, 10, 11, 15, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 47, 48, 49], "test": [0, 2, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 39, 40, 41, 42, 45, 46, 47, 48, 49], "dure": [0, 1, 9, 11, 13, 16, 20, 21, 22, 25], "thi": [0, 1, 2, 9, 10, 11, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "paper": [0, 1, 2, 9, 10, 46, 48], "provid": [0, 2, 9, 10, 11, 12, 44, 45, 46, 47, 48, 49], "more": [0, 1, 2, 11, 23, 24, 44, 46, 47, 48], "detail": [0, 2, 9, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 48], "support": [0, 1, 2, 9, 10, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 44, 45, 48], "avoid": [0, 9, 11, 16, 28], "theses": 0, "To": [0, 1, 2, 11, 46, 47], "user": [0, 1, 2, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25, 30, 31, 44, 45, 46, 47, 48, 49], "set": [0, 1, 2, 3, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "exclude_training_target": [0, 11, 13, 16], "true": [0, 1, 2, 9, 10, 11, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 42, 46, 48], "reverse_edge_types_map": [0, 11, 13, 16], "when": [0, 1, 2, 11, 23, 24, 30, 31, 39, 40, 41, 42, 46, 47], "launch": [0, 2, 10, 45], "These": [0, 2, 12, 48], "two": [0, 1, 2, 9, 10, 11, 20, 21, 22, 23, 24, 25, 28, 45, 46, 47, 48], "argument": [0, 1, 12, 45, 46, 47, 48, 49], "tell": [0, 47], "exclud": [0, 11, 13, 16], "correspond": [0, 2, 9, 11, 46, 47], "revers": [0, 9, 10, 11, 13, 16, 23, 24], "do": [0, 1, 2, 9, 11, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 46, 47, 48, 49], "explan": [0, 47, 48], "can": [0, 1, 2, 9, 10, 11, 14, 15, 18, 27, 28, 29, 30, 31, 41, 44, 45, 46, 47, 48, 49], "found": [0, 2, 48], "infer": [0, 1, 9, 10, 12, 14, 18, 26, 27, 28, 29, 39, 40, 41, 42, 44, 46, 48], "configur": [0, 14, 15, 18, 19, 30, 32, 44, 47], "model": [0, 9, 10, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "mask": [0, 9, 16, 28, 41], "val_mask": [0, 2, 9, 48], "test_mask": [0, 2, 9, 48], "respect": [0, 11], "also": [0, 1, 2, 9, 46, 48, 49], "all": [0, 1, 2, 11, 13, 24, 27, 29, 30, 31, 32, 39, 40, 41, 42, 43, 47, 48, 49], "other": [0, 1, 2, 11, 39, 40, 41, 42, 43, 46], "train_mask": [0, 2, 9, 16, 28, 41, 48], "reli": [0, 2, 22, 45, 47, 48, 49], "dgl": [0, 9, 10, 35, 36, 38, 45, 46, 49], "dataload": [0, 13, 14, 15, 16, 17, 18, 19, 28, 39, 40, 41, 42], "multilayerneighborsampl": 0, "sampl": [0, 2, 11, 13, 16, 17, 23, 24, 35, 36, 38, 48], "basic": [0, 2, 9, 46, 48], "onli": [0, 2, 9, 10, 11, 12, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49], "effici": [0, 11, 23, 24], "graph": [0, 11, 12, 14, 15, 16, 18, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 45, 49], "four": [0, 46, 47], "e": [0, 1, 2, 9, 10, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49], "fast_uniform": 0, "fast_joint": 0, "fast_localuniform": 0, "fast_localjoint": 0, "less": [0, 10, 12, 23, 24], "precis": 0, "neighbor": [0, 11, 13, 16, 17], "behavior": [0, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38], "specif": [0, 2, 47], "regardless": 0, "ani": [0, 1, 2, 9, 11, 14, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 48, 49], "begin": [0, 2], "later": [0, 2, 11, 45, 48], "remov": [0, 10, 11, 39, 40, 41, 42, 43], "In": [0, 1, 2, 9, 11, 12, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49], "theori": 0, "subgraph": [0, 35, 36, 38], "mai": [0, 1, 2, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49], "have": [0, 1, 2, 9, 10, 11, 14, 15, 18, 19, 30, 31, 32, 46, 47, 48, 49], "node": [0, 2, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 46, 47, 49], "than": [0, 9, 10, 11, 45, 46, 48], "expect": 0, "some": [0, 1, 2, 11, 46, 47, 48], "them": [0, 1, 9, 30, 31, 46, 47, 48], "would": [0, 47], "hundr": [0, 11], "million": 0, "small": [0, 2, 11, 46], "g": [0, 1, 2, 9, 10, 11, 14, 15, 18, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48, 49], "each": [0, 1, 9, 11, 13, 16, 17, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 48, 49], "10": [0, 1, 9, 11, 46, 47, 48, 49], "impact": 0, "neglig": 0, "With": [0, 1, 2, 47, 48], "0": [0, 1, 2, 9, 10, 11, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49], "4": [0, 1, 11, 45, 46, 47, 48], "4x": 0, "over": [0, 47], "localuniform": [0, 11], "layer": [0, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47], "rgcn": [0, 2, 46, 48, 49], "mag": [0, 46, 47], "dataset": [0, 10, 13, 16, 17, 19, 23, 24, 28, 41, 46, 48, 49], "g5": 0, "48x": 0, "instanc": [0, 2, 11, 45, 47, 49], "mani": [1, 2, 11], "real": [1, 9, 46, 47], "world": 1, "content": [1, 46, 47, 48, 49], "titl": [1, 9], "descript": [1, 2, 11, 46, 47], "product": [1, 45, 47], "question": 1, "comment": 1, "from": [1, 2, 9, 11, 39, 40, 41, 42, 43, 47, 48], "leverag": [1, 2, 44, 46, 47, 48], "lm": [1, 9, 11, 30, 32], "huggingfac": [1, 9], "emb": [1, 2, 11, 39, 40, 41, 42, 43, 47, 48], "embed": [1, 2, 9, 10, 11, 16, 27, 28, 29, 30, 31, 32, 41, 47, 48], "train": [1, 9, 10, 12, 13, 15, 16, 17, 19, 20, 23, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "There": [1, 2, 9, 11, 44, 45, 47, 48], "ar": [1, 2, 9, 10, 11, 14, 15, 16, 18, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49], "mode": [1, 2, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 46, 47], "input": [1, 2, 10, 11, 14, 15, 18, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49], "speed": [1, 2, 9, 44], "fast": 1, "memori": [1, 2, 9, 11, 46], "consumpt": 1, "lower": [1, 2, 11], "case": [1, 2, 11, 12, 23, 24, 30, 31, 39, 40, 41, 42, 43, 44, 47], "fit": [1, 21, 22, 23, 24, 39, 40, 41, 42], "well": [1, 45], "fail": [1, 2], "improv": [1, 11], "perform": [1, 2, 10, 11, 12, 27, 28, 29, 39, 40, 41, 42, 43, 44, 48, 49], "co": [1, 11], "gml": [1, 2, 12, 44, 48, 49], "same": [1, 9, 11, 22, 32, 46, 47, 48], "consum": [1, 11, 46], "much": 1, "particularli": [1, 2, 49], "gpu": [1, 2, 11, 45, 46, 47, 49], "take": [1, 2, 11, 46, 47, 48, 49], "longer": 1, "time": [1, 9, 11, 46, 48], "complet": [1, 46, 47], "follow": [1, 2, 9, 11, 15, 44, 45, 46, 47, 48, 49], "procedur": 1, "your": [1, 9, 44, 45, 46, 47, 49], "own": [1, 9, 44, 47, 49], "tutori": [1, 2, 9, 45, 46, 47], "minor": 1, "chang": [1, 2, 11, 45, 48], "step": [1, 10, 11, 44, 45, 46, 49], "tool": [1, 2, 9, 10, 11, 45, 46, 47, 48, 49], "token": [1, 9, 10, 47], "3": [1, 11, 20, 21, 22, 23, 24, 25, 29, 45, 46, 47], "If": [1, 2, 9, 10, 11, 13, 16, 17, 20, 24, 33, 45, 46, 47, 48, 49], "command": [1, 2, 11, 44, 45, 46, 47, 48, 49], "below": [1, 2, 9, 11, 45, 46, 47, 48, 49], "should": [1, 2, 9, 10, 11, 32, 45, 46, 47, 48, 49], "run": [1, 11, 13, 16, 17, 44, 45, 46, 48, 49], "docker": [1, 44, 46, 48, 49], "contain": [1, 2, 3, 9, 11, 39, 40, 41, 42, 43, 47, 48, 49], "pleas": [1, 2, 9, 11, 44, 45, 46, 47, 48, 49], "refer": [1, 2, 9, 46, 47, 48, 49], "environ": [1, 3, 44, 46, 47, 48, 49], "setup": [1, 3, 14, 15, 18, 44, 48, 49], "you": [1, 10, 11, 44, 45, 46, 47, 48, 49], "up": [1, 2, 9, 44, 46, 48], "pip": [1, 47, 48, 49], "packag": [1, 3, 48, 49], "replac": [1, 45, 46, 47, 48, 49], "occurr": [1, 48, 49], "2222": [1, 2, 45, 46, 48, 49], "ssh": [1, 2, 11, 46, 48, 49], "port": [1, 2, 11, 45, 47, 48, 49], "22": [1, 45, 47, 48, 49], "clone": [1, 47, 48, 49], "toolkit": [1, 48, 49], "acm": [1, 2], "demonstr": [1, 2, 46, 48, 49], "how": [1, 9, 10, 11, 44, 46, 47, 48, 49], "first": [1, 2, 11, 44, 45, 46, 47, 48, 49], "go": [1, 48], "exampl": [1, 2, 10, 11, 44, 45, 46, 47, 49], "folder": [1, 2, 9, 10, 11, 39, 40, 41, 42, 43, 45, 47, 48, 49], "cd": [1, 45, 47, 48], "Then": [1, 2, 11, 45, 46, 47, 48, 49], "creat": [1, 2, 47, 48, 49], "requir": [1, 9, 10, 11, 12, 13, 16, 17, 32, 45, 46, 47, 49], "raw_w_text": 1, "format": [1, 10, 11, 23, 24, 46, 49], "python3": [1, 2, 45, 46, 47, 48, 49], "m": [1, 2, 46, 48, 49], "acm_data": [1, 48], "py": [1, 2, 46, 47, 48, 49], "output": [1, 2, 10, 11, 32, 33, 34, 35, 36, 37, 38, 46, 47, 49], "path": [1, 2, 9, 10, 11, 14, 15, 18, 19, 26, 27, 28, 29, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], "tmp": [1, 9, 48, 49], "acm_raw": [1, 48], "type": [1, 2, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49], "onc": [1, 2, 11, 44, 46, 47, 48, 49], "success": 1, "file": [1, 9, 10, 11, 14, 15, 18, 19, 26, 27, 28, 29, 39, 40, 41, 42, 45, 49], "under": [1, 9, 44, 46, 47, 48], "similar": [1, 2, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 48], "But": [1, 2, 11], "config": [1, 2, 9, 11, 46, 48, 49], "json": [1, 2, 46, 49], "few": [1, 46], "extra": [1, 11, 32, 45], "line": [1, 2, 9, 11, 48], "list": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 47, 48], "column": [1, 9, 48], "specifi": [1, 2, 9, 10, 11, 30, 31, 46, 47, 48, 49], "thei": [1, 9, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 48], "process": [1, 9, 11, 23, 24, 44, 45, 48], "contruct": 1, "The": [1, 2, 3, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 39, 40, 41, 42, 43, 45, 46, 47, 49], "snippet": 1, "show": [1, 2, 9, 48, 49], "inform": [1, 2, 9, 11, 16, 28, 46, 47], "author": [1, 2, 9, 10, 46, 48], "It": [1, 9, 11, 14, 15, 18, 19, 30, 31, 39, 40, 41, 42, 43, 44, 46, 48, 49], "indic": [1, 2, 9, 11, 13, 14, 15, 16, 17, 18, 28, 41], "": [1, 9, 11, 13, 14, 15, 16, 17, 18, 19, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "name": [1, 2, 9, 10, 11, 14, 15, 18, 19, 33, 34, 45, 46, 47, 48, 49], "base": [1, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48], "uncas": 1, "node_typ": [1, 2, 9, 48], "parquet": [1, 9, 48], "node_id_col": [1, 9, 48], "node_id": [1, 9, 48], "feature_col": [1, 9, 48], "feat": [1, 2, 9, 11, 30, 31, 46, 48], "feature_nam": [1, 2, 9, 48], "transform": 1, "tokenize_hf": [1, 9], "bert_model": [1, 9], "max_seq_length": [1, 9], "16": [1, 11, 30, 32], "we": [1, 2, 10, 11, 13, 23, 24, 30, 31, 34, 41, 44, 45, 46, 47, 48], "gconstruct": [1, 48], "construct_graph": [1, 48], "conf": [1, 9, 48], "dir": [1, 9, 48], "acm_nc": [1, 2, 48], "num": [1, 2, 9, 10, 11, 35, 46, 47, 48, 49], "part": [1, 2, 9, 10, 11, 46, 48, 49], "outcom": [1, 46, 47, 49], "notic": [1, 2], "subject": [1, 2, 48], "three": [1, 2, 9, 11, 27, 29, 45, 46, 47, 48, 49], "addit": [1, 9, 44, 46, 47], "input_id": 1, "attention_mask": 1, "token_type_id": 1, "which": [1, 2, 9, 11, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "yaml": [1, 11, 45, 46, 47, 49], "an": [1, 2, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 45, 46, 47, 49], "full": [1, 2, 11], "acm_lm_nc": 1, "locat": [1, 47], "use_your_own_data": [1, 48], "lm_model": 1, "node_lm_model": 1, "lm_type": 1, "model_nam": 1, "gradient_checkpoint": 1, "current": [1, 2, 9, 10, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 45, 48, 49], "version": [1, 2, 45, 46, 47, 48, 49], "sever": [1, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46], "repos": 1, "choos": [1, 9, 11], "roberta": [1, 9], "albert": [1, 9], "camembert": [1, 9], "erni": [1, 9], "ibert": [1, 9], "luke": [1, 9], "mega": [1, 9], "mpnet": [1, 9], "nezha": [1, 9], "qdqbert": [1, 9], "roc_bert": [1, 9], "valu": [1, 2, 9, 10, 11, 20, 23, 24, 25, 47, 48], "must": [1, 2, 10, 11, 48], "one": [1, 2, 9, 10, 11, 46, 48, 49], "field": [1, 2, 9, 10, 11, 14, 15, 16, 18, 19, 46, 48], "here": [1, 2, 11, 46, 49], "abov": [1, 2, 45, 46, 47, 48, 49], "script": [1, 2, 10, 45, 47, 49], "ip_list": [1, 2, 46, 48, 49], "txt": [1, 2, 46, 48, 49], "standalon": [1, 44, 47], "touch": [1, 48, 49], "echo": [1, 48, 49], "127": [1, 45, 48, 49], "almost": 1, "except": [1, 2, 47], "gs_node_classif": [1, 46, 48, 49], "workspac": [1, 2, 9, 11, 46, 48, 49], "ip": [1, 2, 11, 45, 48, 49], "trainer": [1, 11, 13, 16, 17, 22, 39, 40, 41, 42, 43, 46, 48, 49], "server": [1, 2, 11, 46, 48, 49], "sampler": [1, 2, 11, 27, 28, 29, 39, 40, 41, 42, 46, 48, 49], "cf": [1, 46, 48, 49], "save": [1, 2, 10, 22, 27, 28, 29, 39, 40, 41, 42, 43, 46, 47, 48, 49], "comput": [1, 2, 9, 11, 16, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 49], "And": [1, 2, 10, 11, 46, 47, 48], "concaten": 1, "togeth": [1, 11], "add": [1, 9, 10, 11, 30, 31, 35, 36, 47], "either": [1, 2, 9, 11, 39, 40, 41, 42, 43, 48], "determin": [1, 47], "mini": [1, 11, 27, 28, 29, 39, 40, 41, 42], "batch": [1, 11, 13, 16, 17, 27, 28, 29, 30, 32, 39, 40, 41, 42, 47], "per": [1, 11, 16, 24, 46, 48], "becaus": [1, 2, 10, 46, 47, 48, 49], "normal": [1, 2, 9, 33, 34, 35, 36, 37, 38], "larg": [1, 2, 9, 11, 44, 47, 48], "could": [1, 2, 11, 39, 40, 41, 42, 43, 45, 46, 47, 48], "out": [1, 2], "oom": 1, "error": 1, "smaller": [1, 9], "number": [1, 2, 9, 10, 11, 16, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48], "reduc": [1, 11], "overal": [1, 11], "compar": [1, 2], "allow": [1, 9, 10, 11, 44], "anoth": [1, 45], "encod": [1, 9, 11, 30, 31, 35, 36], "control": [1, 2, 10, 11], "whether": [1, 9, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 35, 36, 39, 40, 41, 42], "want": [1, 2, 10, 11, 23, 24, 44, 47, 48], "just": [1, 2, 34, 39, 40, 41, 42, 43], "awar": 1, "ha": [2, 9, 11, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49], "built": [2, 44, 45, 46, 47, 48, 49], "rgat": [2, 48], "further": 2, "explor": 2, "differ": [2, 11, 14, 15, 18, 19, 23, 24, 32, 46, 48], "eas": 2, "scalabl": [2, 44, 46], "accord": 2, "explain": [2, 9], "runnabl": 2, "hgt": 2, "befor": [2, 10, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 46, 47, 49], "make": [2, 10, 22, 46, 47, 48, 49], "sure": [2, 22, 46, 47, 48, 49], "meet": 2, "framework": [2, 44, 47], "librari": [2, 47], "come": [2, 44], "distribut": [2, 9, 11, 18, 26, 30, 31, 32, 36, 44, 45, 47, 49], "For": [2, 9, 10, 11, 34, 44, 45, 46, 47, 48], "reason": [2, 39, 40, 41, 42, 43], "via": [2, 11, 47], "guid": [2, 46], "commun": [2, 11, 46, 47], "materi": 2, "check": [2, 11, 20, 21, 22, 23, 24, 25, 45, 47, 48, 49], "exist": [2, 9, 48], "were": [2, 11, 47], "popular": 2, "academ": 2, "enterpris": [2, 44, 46], "level": [2, 9, 46], "rel": [2, 11], "lack": 2, "featur": [2, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 47, 48, 49], "therefor": [2, 9, 46, 47, 48, 49], "implementor": 2, "feed": [2, 11], "entir": [2, 9, 39, 40, 41, 42, 43], "along": [2, 48], "its": [2, 9, 11, 47, 48, 49], "epoch": [2, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 46, 47, 48, 49], "deal": 2, "due": [2, 46], "limit": [2, 11, 46, 48], "slow": 2, "cpu": [2, 13, 14, 15, 16, 18, 19, 45, 47], "order": [2, 11, 47], "tackl": 2, "stochast": 2, "chapter": 2, "between": [2, 9, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 48, 49], "look": [2, 46, 47, 48], "end": [2, 11, 20, 21, 22, 23, 24, 25, 47], "_mb": 2, "string": [2, 9, 11, 20, 21, 22, 25, 47, 48], "like": [2, 11, 45, 46, 47, 48, 49], "dist": [2, 14, 15, 19], "graphsag": 2, "rest": [2, 47], "assum": [2, 11, 48], "execut": [2, 11, 47], "within": [2, 11, 46, 47, 48], "section": [2, 9, 46, 47], "prepar": [2, 14, 15, 18, 19, 44, 45, 46, 49], "plug": 2, "kei": [2, 9, 47, 48], "class": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49], "gsgnnnodemodelbas": 2, "gsgnnedgemodelbas": [2, 40], "gsgnnlinkpredictionmodelbas": [2, 41], "inherit": 2, "depend": [2, 48, 49], "nn": [2, 11, 33, 34, 37], "modul": [2, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38], "def": 2, "__init__": 2, "self": [2, 11, 14, 15, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38], "super": 2, "htg": 2, "forward": [2, 30, 31, 32, 33, 34, 35, 36, 37, 38], "out_kei": 2, "h": [2, 11, 35, 36, 38], "ntype": [2, 10, 11, 46, 48], "n_id": 2, "node_dict": 2, "f": [2, 45, 47], "gelu": 2, "adapt_w": 2, "inp": 2, "rang": [2, 44], "n_layer": 2, "gc": 2, "return": [2, 27, 29, 35, 36, 38, 43], "origin": [2, 9, 10, 30, 31, 48], "Its": 2, "predict": [2, 9, 10, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 39, 40, 41, 42, 46, 47, 48, 49], "As": [2, 46, 47], "revis": 2, "shown": [2, 48, 49], "hgt_mb": 2, "block": [2, 9, 35, 36, 38], "n_feats_dict": 2, "out_ntyp": 2, "none": [2, 11, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48], "emb_id": 2, "ntype_id_map": 2, "n_emb": 2, "ntype_emb": 2, "torch": [2, 11, 13, 16, 17, 26, 33, 34, 35, 36, 37, 38, 45], "tensor": [2, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48, 49], "num_nod": 2, "long": 2, "devic": [2, 13, 14, 15, 16, 17, 18, 19], "els": 2, "new": [2, 10, 11, 33, 34, 37, 45, 46, 47], "dictionari": [2, 9, 39, 40, 41, 42, 43, 48], "work": [2, 44, 45, 47], "pytorch": [2, 11, 14, 15, 18, 19, 39, 40, 41, 42, 43, 45, 49], "extens": 2, "node_feat": [2, 46, 48, 49], "edge_feat": [2, 9, 46, 48, 49], "label": [2, 9, 10, 11, 14, 15, 18, 19, 20, 21, 25, 46], "input_nod": [2, 14, 15, 18, 19, 30, 31, 32], "create_optim": 2, "whose": [2, 9, 46, 48, 49], "associ": [2, 10, 48], "doe": [2, 11, 29, 46, 49], "NOT": [2, 9, 46, 48], "so": [2, 10, 11, 46, 47, 48], "leav": [2, 49], "option": [2, 9, 11, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 47], "unlik": [2, 47], "common": [2, 48], "where": [2, 9, 11, 14, 15, 18, 19, 27, 28, 29, 39, 40, 41, 42, 43, 45, 47], "logit": 2, "loss": [2, 11, 16], "backward": 2, "oper": [2, 12, 45, 46, 47, 49], "instead": [2, 11, 46, 48], "outsid": 2, "our": [2, 47], "ad": [2, 11, 33, 34, 37], "gsmodel": 2, "compon": 2, "_loss_fn": 2, "classifylossfunc": 2, "multilabel": [2, 11, 20, 48], "fals": [2, 11, 13, 16, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 48], "cuda": [2, 11], "expand": 2, "num_lay": [2, 11, 46, 48], "item": 2, "pred_loss": 2, "target_ntyp": [2, 11, 46, 48], "alreadi": [2, 10, 48], "classif": [2, 9, 10, 20, 27, 29, 46, 47, 49], "regress": [2, 9, 10, 27, 29, 47, 48], "link": [2, 10, 16, 23, 24, 28, 41, 46, 47, 48], "easili": [2, 46], "import": [2, 9, 46, 48], "free": [2, 44, 46], "even": [2, 11, 30, 31], "variabl": [2, 47], "result": [2, 10, 11, 20, 21, 25, 27, 29, 39, 40, 41, 42, 46, 47, 49], "second": [2, 49], "probabl": [2, 11], "return_proba": [2, 27, 29, 39, 40, 42], "otherwis": [2, 10, 11, 48], "raw": [2, 9, 46, 49], "purpos": 2, "code": [2, 12, 44, 46, 47], "_": 2, "argmax": 2, "dim": 2, "softmax": 2, "defin": [2, 9, 10, 11, 20, 21, 22, 23, 24, 25, 47, 49], "optim": [2, 11, 39, 40, 41, 42, 43, 49], "adam": [2, 11], "paramet": [2, 12, 48], "lr": [2, 11, 46, 48], "restore_model": [2, 39, 40, 41, 42, 43], "restore_model_path": [2, 11, 46, 48], "save_model": [2, 39, 40, 41, 42, 43], "model_path": [2, 39, 40, 41, 42, 43], "restor": [2, 39, 40, 41, 42, 43, 48, 49], "too": [2, 10, 48], "unimpl": 2, "readi": [2, 46], "next": [2, 48, 49], "trainingon": 2, "method": [2, 9, 33, 34, 35, 36, 37, 38, 45, 48, 49], "infernec": [2, 44], "proper": 2, "initi": [2, 11, 46], "arg": 2, "ip_config": [2, 26], "backend": [2, 11, 26, 46, 47, 48], "gloo": [2, 11, 46, 47, 48], "address": [2, 45, 49], "machin": [2, 11, 12, 44, 45, 46, 47, 49], "cluster": [2, 11, 44, 47, 49], "find": [2, 44, 48], "quick": [2, 44, 46, 48], "load": [2, 11, 39, 40, 41, 42, 43, 46], "partit": [2, 9, 11, 12, 14, 15, 18, 19, 27, 28, 29, 45, 47], "gsgnnnodetraindata": 2, "gsgnnedgetraindata": [2, 41], "train_data": 2, "graph_nam": [2, 9, 14, 15, 18, 19], "part_config": [2, 14, 15, 18, 19], "train_ntyp": [2, 19], "node_feat_field": [2, 14, 15, 18, 19], "label_field": [2, 11, 14, 15, 18, 19, 46, 48], "consist": [2, 47], "label_col": [2, 9, 48], "gsgnnnodedataload": [2, 39, 42], "train_idx": [2, 48], "fanout": [2, 11, 13, 16, 17, 46, 47, 48], "batch_siz": [2, 11, 13, 16, 17, 46, 48], "train_task": [2, 13, 16, 17], "eval_dataload": 2, "val_idx": [2, 48], "eval_batch_s": [2, 11, 46], "test_dataload": 2, "test_idx": [2, 14, 18, 48], "henc": [2, 44, 48], "index": [2, 45, 48], "extract": [2, 14, 15, 18, 19, 48], "automat": [2, 46, 47, 48, 49], "construct": [2, 10, 12, 13, 16, 17, 46], "split_pct": [2, 9, 48], "properti": 2, "directli": [2, 27, 28, 29, 41], "graph_data": 2, "scikit": 2, "creation": [2, 46], "easi": [2, 12, 46, 48, 49], "edge_dict": 2, "n_inp_dict": 2, "nfeat_dim": 2, "n_hid": 2, "hidden_s": [2, 11, 46, 48], "n_out": 2, "num_class": [2, 11, 46, 48], "num_head": [2, 11, 34, 35], "use_norm": 2, "alpha_l2norm": [2, 11, 48], "gsgnnnodepredictiontrain": [2, 39], "get_rank": 2, "gsgnnaccevalu": 2, "eval_frequ": [2, 11, 20, 21, 22, 23, 24, 25], "eval_metr": [2, 11, 20, 21, 22, 25], "use_early_stop": [2, 11, 20, 21, 22, 23, 24, 25], "early_stop_burnin_round": [2, 11, 20, 21, 22, 23, 24, 25], "early_stop_round": [2, 11, 20, 21, 22, 23, 24, 25], "early_stop_strategi": [2, 11, 20, 21, 22, 23, 24, 25], "setup_evalu": 2, "progress": [2, 22], "gssagemakertasktrack": 2, "setup_task_track": 2, "help": [2, 10, 44, 47, 49], "metric": [2, 11, 20, 21, 22, 23, 24, 25, 48], "accuraci": [2, 11], "f1": 2, "mrr": [2, 11, 23, 24], "etc": [2, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48], "select": [2, 9, 11, 24, 39, 40, 41, 42], "serv": [2, 44], "log": [2, 11, 49], "collector": 2, "last": [2, 11, 35, 36, 39, 40, 41, 42, 43, 48], "train_load": [2, 39, 40, 41, 42], "num_epoch": [2, 11, 39, 40, 41, 42, 46, 48], "val_load": [2, 39, 40, 41, 42], "test_load": [2, 39, 40, 41, 42], "save_model_path": [2, 11, 39, 40, 41, 42, 43, 46, 48], "use_mini_batch_inf": [2, 11, 27, 29, 39, 40, 41, 42, 48], "seen": 2, "artifact": [2, 11, 46, 47], "BUT": 2, "uncommonli": 2, "singl": [2, 9, 11, 44, 46, 47, 49], "frequent": 2, "occur": 2, "multipl": [2, 9, 11, 47, 48], "parallel": 2, "inner": [2, 34], "mechan": [2, 30, 31, 32, 33, 34, 35, 36, 37, 38], "One": [2, 11, 37], "wai": [2, 11, 23, 24, 47, 48], "solv": 2, "regular": [2, 11], "trainabl": [2, 30, 32], "blow": 2, "reg_loss": 2, "l2": [2, 11], "dens": [2, 11, 30, 31, 32], "d_para": 2, "squar": 2, "sum": [2, 10], "coeffici": [2, 11], "influenc": 2, "verbos": [2, 11, 46, 48], "local_rank": 2, "although": [2, 48], "anywher": 2, "A": [2, 9, 11, 13, 16, 30, 31, 32, 39, 40, 41, 42, 43, 46, 47, 48], "__name__": 2, "__main__": 2, "argpars": 2, "argumentpars": 2, "add_argu": 2, "str": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "lambda": 2, "x": [2, 47], "default": [2, 9, 10, 11, 16, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49], "suppress": 2, "print": [2, 11], "int": [2, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "rank": [2, 9, 22, 23, 24, 27, 28, 29, 39, 40, 41, 42, 43], "v2": 2, "local": [2, 11, 14, 15, 18, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 48], "accordingli": [2, 48], "variou": [2, 11, 44, 46], "perspect": 2, "gsf": [2, 46, 47, 48], "model_encoder_typ": [2, 11, 46, 48], "50": [2, 48], "256": [2, 48], "null": [2, 46, 48], "topk_model_to_sav": [2, 11, 39, 40, 41, 42, 43], "7": [2, 45, 47, 49], "save_embeds_path": [2, 48], "save_prediction_path": [2, 11, 27, 29], "hyperparam": [2, 46, 48], "dropout": [2, 11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 48], "0001": [2, 11, 48], "20": [2, 11], "1024": [2, 11, 48], "wd_l2norm": [2, 11, 46, 48], "num_bas": [2, 11, 33, 36, 46, 48], "use_self_loop": [2, 11, 35, 36, 46, 48], "sparse_optimizer_lr": [2, 11, 48], "1e": [2, 46, 48], "use_node_embed": [2, 11, 30, 31, 46, 48], "node_classif": [2, 11, 46, 48], "14": [2, 48], "read": [2, 44, 48], "gsconfig": 2, "object": [2, 9, 13, 16, 17, 21, 22, 36, 43], "parse_arg": 2, "still": 2, "let": [2, 11], "hgt_nc": 2, "relat": [2, 9, 11, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48], "customized_model": 2, "head": [2, 11, 34, 35], "8": [2, 9, 10, 11, 48, 49], "try": 2, "readm": 2, "data": [9, 11, 14, 15, 16, 18, 19, 23, 24, 28, 39, 40, 41, 42, 44, 45, 46], "simulten": 9, "increas": [9, 11], "assign": [9, 45, 47, 48], "remap": 9, "boolean": [9, 10, 48], "decid": [9, 11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43], "renam": 9, "id": [9, 14, 15, 18, 19, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49], "given": [9, 10, 11, 27, 28, 29, 39, 40, 41, 42, 43, 46], "distdgl": [9, 46], "accept": [9, 11], "separ": [9, 11], "space": [9, 11, 46, 48], "skip": 9, "nonexist": 9, "endpoint": 9, "don": 9, "t": [9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45], "ext": 9, "mem": 9, "directori": 9, "store": [9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 46, 47, 48], "suggest": [9, 11, 45, 46, 47, 48], "us": [9, 10, 11, 12, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 49], "ssd": 9, "extern": 9, "size": [9, 11, 13, 16, 17, 30, 31, 32, 33, 34, 35, 37, 46, 47], "minim": 9, "dimens": [9, 11, 30, 31, 32, 35, 36, 38], "64": 9, "describ": [9, 47, 48], "get": [9, 14, 15, 18, 19, 22, 30, 31, 32, 45], "highest": 9, "most": [9, 12, 48], "think": 9, "wildcard": 9, "file_nam": 9, "pipelin": [9, 44], "hdf5": [9, 48], "split": [9, 10, 46, 49], "similarli": [9, 48], "source_id_col": [9, 48], "sourc": [9, 47], "dest_id_col": [9, 48], "destin": 9, "element": [9, 11, 47, 48], "write": [9, 10, 44, 46, 48], "prefix": 9, "becom": [9, 48], "out_dtyp": 9, "cast": 9, "appli": [9, 11, 33], "now": [9, 11, 46], "flaot16": 9, "float32": 9, "actual": [9, 47], "task_typ": [9, 11, 48], "link_predict": [9, 11, 47], "80": 9, "vector": 9, "multi": [9, 11, 20, 34, 47], "dimension": 9, "reconstruct": 9, "matrix": 9, "larger": [9, 11, 45], "capac": [9, 46], "primit": 9, "integ": [9, 10, 11, 48], "float": [9, 10, 11, 20, 21, 22, 23, 24, 25, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "point": [9, 11, 47], "text": [9, 10, 11, 30, 32, 44, 46], "dict": [9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "bert": [9, 10, 11, 44], "maxim": 9, "sequenc": [9, 48], "length": 9, "bert_hf": 9, "numer": 9, "max_min": 9, "val": [9, 10], "min": 9, "max": [9, 11, 39, 40, 41, 42], "maximum": [9, 27, 29, 39, 40, 42], "minimum": 9, "max_min_norm": 9, "max_bound": 9, "min_bound": 9, "gauss": 9, "map": [9, 11, 13, 16, 27, 28, 29, 46, 48, 49], "gaussian": 9, "http": [9, 45, 47], "www": 9, "kaggl": 9, "com": [9, 45, 47], "c": 9, "porto": 9, "seguro": 9, "safe": 9, "driver": 9, "discuss": 9, "44629": 9, "250927": 9, "rank_gauss": 9, "epsilon": 9, "inf": [9, 11], "convert": [9, 48], "categor": 9, "categori": [9, 46], "to_categor": 9, "By": [9, 11, 16, 28, 41, 47], "output_format": 9, "dglgraph": [9, 14, 15, 19], "meta": [9, 49], "after": [9, 11, 33, 46, 47, 49], "node_map": [9, 46, 48, 49], "pt": [9, 46, 48, 49], "edge_map": [9, 46, 48, 49], "partitoin": 9, "1d": 9, "shuffl": 9, "record": [9, 46, 48], "ogrigin": [9, 46, 48], "move": [9, 46, 48], "delet": [9, 46, 48], "paper_id": 9, "dummi": 9, "paper_nod": 9, "paper_titl": 9, "512": 9, "src_paper_id": 9, "dest_paper_id": 9, "cite": [9, 48], "paer": 9, "citation_tim": 9, "who": [10, 44, 48], "familiar": [10, 44, 48], "know": 10, "graphstorm": [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49], "filepath": [10, 46, 48, 49], "far": 10, "nlabel": [10, 46, 48], "nodetyp": 10, "labelnam": [10, 48], "etyp": [10, 11, 23, 24, 46], "canon": [10, 11, 24, 48], "src_ntype": 10, "dst_ntype": 10, "elabel": 10, "pct": [10, 46], "percentag": 10, "train_pct": 10, "val_pct": 10, "retain": 10, "abstract": [10, 21, 22], "keep": [10, 11, 46], "rememb": [10, 48], "might": [10, 48], "nois": 10, "queri": [10, 11], "click": [10, 11], "asin": [10, 11], "purchas": 10, "rev": [10, 11], "dozen": 11, "document": [11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47], "updat": [11, 45], "pars": 11, "overwrit": 11, "consid": 11, "hint": 11, "absolut": [11, 45, 47], "thread": 11, "omp": 11, "host": [11, 45, 46, 47], "usernam": [11, 47], "issu": [11, 46], "structur": [11, 46, 48, 49], "csr": 11, "csc": [11, 46], "coo": [11, 46], "env": [11, 47], "ld_library_path": 11, "nccl_debug": 11, "extra_env": 11, "usr": 11, "lib64": 11, "info": 11, "decod": [11, 23, 24, 39, 40, 41, 42, 43, 47], "No": 11, "gnn": [11, 16, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49], "involv": 11, "configuraiton": 11, "nccl": 11, "non": [11, 48], "compos": 11, "convolut": [11, 33, 37], "network": [11, 31, 34, 45, 46, 47, 49], "attent": [11, 34, 35], "mlp": 11, "learnabl": [11, 30, 31, 48], "final": 11, "project": [11, 30, 31], "node_feat_nam": [11, 48], "fname": 11, "b": 11, "ntype0": 11, "feat0": 11, "ntype1": 11, "feata": 11, "note": [11, 22], "charact": 11, "put": [11, 46, 48], "start": [11, 20, 21, 22, 23, 24, 25, 46, 48], "hyphon": 11, "attach": 11, "mean": [11, 37, 38, 39, 40, 41, 42, 43], "hidden": [11, 35, 36, 38, 47], "128": [11, 46, 47, 48], "special": 11, "filter": 11, "weight": [11, 16, 33], "matric": 11, "share": [11, 47], "divis": 11, "statu": [11, 49], "fine": 11, "tune": 11, "see": [11, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47], "retriev": [11, 14, 15, 18, 19], "restore_optimizer_path": 11, "checkpoint": 11, "save_embed_path": [11, 27, 28, 29, 46], "save_model_frequ": [11, 39, 40, 41, 42], "iter": [11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 47], "posit": [11, 16, 23, 24, 48], "n": [11, 39, 40, 41, 42, 45], "everi": 11, "1000": 11, "frequenc": [11, 20, 21, 22, 23, 24, 25], "top": [11, 39, 40, 41, 42, 43], "best": [11, 24, 39, 40, 41, 42, 43, 44, 49], "disk": [11, 47], "huge": 11, "k": [11, 39, 40, 41, 42, 43], "topk": 11, "save_perf_results_path": [11, 39, 40, 41, 42], "perf": 11, "task_track": 11, "tracker": 11, "formal": [11, 47, 48], "report": 11, "sagemaker_task_track": 11, "captur": 11, "those": [11, 47], "through": [11, 47], "sagemak": [11, 44, 45], "monitor": 11, "analyz": 11, "job": [11, 46, 47, 48, 49], "amazon": [11, 44, 45], "cloudwatch": 11, "log_report_frequ": 11, "graphstom": 11, "restore_model_lay": 11, "neural": [11, 31, 49], "graphml": 11, "equal": [11, 36, 38], "ith": 11, "being": 11, "0th": 11, "1st": [11, 39, 40, 41, 42, 43], "etype2": 11, "etype3": 11, "etype1": 11, "th": 11, "srcntype": 11, "dstntype": 11, "5": [11, 13, 16, 17, 46], "learn": [11, 12, 44, 45, 47, 49], "rate": [11, 33, 34, 37], "max_grad_norm": [11, 39, 40, 41, 42], "gradient": [11, 39, 40, 41, 42], "clip": [11, 39, 40, 41, 42], "magnitud": 11, "prevent": 11, "explod": 11, "stabil": [11, 39, 40, 41, 42], "converg": 11, "grad": [11, 30, 31, 32, 33, 34, 35, 36, 37, 38], "norm": [11, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "grad_norm_typ": [11, 39, 40, 41, 42], "global": 11, "multipli": 11, "suppos": [11, 47], "2048": 11, "spars": [11, 30, 31, 32], "decai": 11, "wd": 11, "l2norm": 11, "re": 11, "scale": [11, 46], "regularization_loss": 11, "00001": 11, "alpha": 11, "num_ffn_layers_in_input": [11, 31], "greater": 11, "zero": 11, "feedforward": [11, 31], "ffn": 11, "num_ffn_layers_in_gnn": [11, 33, 34, 35, 36, 37, 38], "num_ffn_layers_in_decod": 11, "effect": [11, 30, 31, 32, 33, 34, 35, 36, 37, 38], "mlpedgedecod": 11, "mlpefeatedgedecod": 11, "input_activ": 11, "activ": [11, 30, 31, 33, 34, 35, 36, 37, 38], "function": [11, 21, 22, 23, 24, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48], "relu": [11, 31, 33, 34, 37, 38], "gnn_norm": 11, "batchnorm": [11, 30, 31, 32, 33, 34, 35, 36, 37, 38], "layernorm": 11, "finish": [11, 49], "exit": [11, 45, 49], "earlier": 11, "trigger": 11, "criteria": 11, "round": [11, 20, 21, 22, 23, 24, 25], "call": [11, 21, 22, 23, 24, 47], "strategi": [11, 20, 21, 22, 23, 24, 25], "consecutive_increas": [11, 20, 21, 22, 23, 24, 25], "score": [11, 20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43], "averag": [11, 34], "average_increas": [11, 20, 21, 22, 23, 24, 25], "consecut": 11, "decreas": 11, "burn": [11, 20, 21, 22, 23, 24, 25], "period": 11, "100": [11, 48], "burnin": 11, "enabl": [11, 44], "speedup": 11, "eval": [11, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "10000": 11, "eval_fanout": [11, 46], "wast": 11, "resourc": [11, 46, 47, 49], "prefer": [11, 48], "recomput": 11, "thousand": 11, "middl": [11, 48], "sy": 11, "maxsiz": 11, "system": [11, 45, 47], "no_valid": [11, 46], "lm_tune_lr": [11, 48], "lm_train_nod": 11, "lm_infer_batch_s": [11, 30, 32], "32": 11, "freeze_lm_encoder_epoch": 11, "warmup": 11, "freez": [11, 39, 40, 41, 42], "rich": 11, "node_regress": 11, "edge_classif": 11, "edge_regress": 11, "treat": [11, 30], "major": 11, "precision_recal": 11, "roc_auc": 11, "f1_score": 11, "per_class_f1_scor": 11, "rmse": 11, "mse": [11, 25], "mae": 11, "access": [11, 46, 47], "target_etyp": [11, 48], "color": 11, "cardin": 11, "multilabel_weight": 11, "bcewithlogitsloss": 11, "pos_weight": 11, "repres": 11, "answer": 11, "imbalance_class_weight": 11, "manual": 11, "rescal": 11, "imbalanc": 11, "crossentropyloss": 11, "imbal": 11, "movi": 11, "search": [11, 48], "src_node_typ": 11, "relation_typ": 11, "dst_node_typ": 11, "remove_target_edge_typ": [11, 13], "reverse_rel": 11, "tail": 11, "reverse_edge_type_map": 11, "both": [11, 44, 45, 48], "certain": [11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "train_etyp": [11, 15, 48], "contrast": 11, "decoder_typ": 11, "densebidecod": 11, "mlpdecod": 11, "bi": 11, "linear": [11, 30, 31, 33], "gcmc": 11, "simpli": 11, "multilay": 11, "perceptron": 11, "num_decoder_basi": 11, "basi": 11, "decoder_edge_feat": [11, 13], "enhanc": [11, 44], "Or": 11, "count": [11, 47], "price": 11, "fanm": 11, "eval_etyp": [11, 14, 15, 48], "downstream": [11, 48], "care": 11, "about": [11, 46, 48, 49], "train_negative_sampl": 11, "neg": [11, 16, 23, 24, 48], "uniform": 11, "joint": 11, "all_etype_uniform": 11, "all_etype_joint": 11, "eval_negative_sampl": 11, "num_negative_edg": [11, 16], "num_negative_edges_ev": [11, 23, 24], "lp_decoder_typ": [11, 23, 24, 46], "dot_product": [11, 46, 47], "distmult": 11, "lp": [11, 46, 47], "gamma": 11, "margin": 11, "12": [11, 46], "lp_loss_func": 11, "builtin": 11, "cross_entropi": 11, "logsigmoid": 11, "func": [11, 30, 31], "lp_edge_weight_for_loss": [11, 16], "rel0": 11, "weight0": 11, "rel1": 11, "weight1": 11, "design": [12, 44, 48, 49], "fulfil": 12, "target_idx": [13, 16, 17], "construct_feat_ntyp": [13, 16, 17], "construct_feat_fanout": [13, 16, 17], "minibatch": [13, 16, 17], "gsgnnedgedata": [13, 14, 15, 16, 23, 24], "bool": [13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42], "edge_feat_field": [14, 15, 18, 19], "tupl": [14, 15, 24], "evalu": [14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49], "get_edge_feat": [14, 15, 18, 19], "input_edg": [14, 15, 18, 19], "get_label": [14, 15, 18, 19], "eid": [14, 15], "get_node_feat": [14, 15, 18, 19], "prepare_data": [14, 15, 18, 19], "_test_idx": [14, 15, 18], "empti": [14, 15, 18], "_train_idx": 15, "_val_idx": 15, "edge_mask_for_gnn_embed": [16, 28, 41], "uniformli": 16, "leak": [16, 28], "gsgnnnodedata": [17, 18, 19], "eval_ntyp": [18, 19], "nid": [18, 19], "seed": [18, 19], "distgraph": [18, 30, 31, 32, 36], "gsgnninstanceevalu": [20, 25], "earli": [20, 21, 22, 23, 24, 25], "stop": [20, 21, 22, 23, 24, 25, 49], "condit": [20, 21, 22, 23, 24, 25], "compute_scor": [20, 21, 23, 24, 25], "pred": [20, 21, 25], "redict": [20, 21, 25], "do_ev": [20, 21, 22, 23, 24, 25], "total_it": [20, 21, 22, 23, 24, 25], "epoch_end": [20, 21, 22, 23, 24, 25], "total": [20, 21, 22, 23, 24, 25, 36, 38, 39, 40, 41, 42], "been": [20, 21, 22, 23, 24, 25, 39, 40, 41, 42, 43, 45, 46, 48], "taken": [20, 21, 22, 23, 24, 25], "val_pr": [20, 21, 25], "test_pr": [20, 21, 25], "val_label": [20, 21, 25], "test_label": [20, 21, 25], "inter": [20, 21, 22, 23, 24, 25, 47], "templat": [21, 22], "gsgnnlinkpredictionmodel": [21, 22, 23, 24], "evalut": [21, 22, 23, 24], "eval_scor": [21, 22], "test_scor": [21, 22, 23, 24], "val_scor": [22, 23, 24, 39, 40, 41, 42, 43], "gsgnnlpevalu": 23, "todo": [23, 24], "futur": [23, 24], "accur": [23, 24], "val_mrr": [23, 24], "test_mrr": [23, 24], "major_etyp": 24, "gsgnnmrrlpevalu": 24, "context": 26, "gsinfer": [27, 28, 29], "highlevel": [27, 28, 29, 41], "wrapper": [27, 28, 29, 41], "gsgnnnodemodel": [27, 28, 29, 39, 42], "loader": [27, 28, 29], "node_id_mapping_fil": [27, 28, 29], "edge_id_mapping_fil": 27, "thing": [27, 28, 29], "gsedgedataload": 27, "algorithm": [27, 28, 29], "gsgnndata": 28, "gsgnnlinkpredictiontestdataload": 28, "gsnodedataload": [29, 39, 40, 41, 42], "node_lm_config": [30, 32], "feat_siz": [30, 31], "embed_s": [30, 31], "num_train": [30, 32], "gsnodeencoderinputlay": 30, "languag": [30, 31, 32, 39, 40, 41, 42], "heterogen": [30, 31, 32, 48], "textual": 30, "combin": [30, 31], "static": [30, 32], "individu": [30, 31], "avail": [30, 31, 46, 48], "particular": [30, 31, 32, 33, 34, 35, 36, 37, 38], "affect": [30, 31, 32, 33, 34, 35, 36, 37, 38], "equival": [30, 31, 32, 33, 34, 35, 36, 37, 38], "disabl": [30, 31, 32, 33, 34, 35, 36, 37, 38], "doc": [30, 31, 32, 33, 34, 35, 36, 37, 38, 47], "comparison": [30, 31, 32, 33, 34, 35, 36, 37, 38], "confus": [30, 31, 32, 33, 34, 35, 36, 37, 38], "input_feat": [30, 31, 32], "get_general_dense_paramet": [30, 31, 32], "get_lm_dense_paramet": [30, 31, 32], "get_sparse_param": [30, 31, 32], "force_no_embed": 31, "ffn_activ": [31, 33, 37], "gsnodeinputlay": [31, 32], "forc": 31, "callabl": [31, 33, 34, 37], "gslmnodeencoderinputlay": 32, "ignor": [32, 48], "in_feat": [33, 34, 37], "out_feat": [33, 34, 37], "rel_nam": [33, 34], "bia": [33, 34, 37], "self_loop": [33, 34], "ngnn": [33, 34, 35, 36, 37, 38], "ffn_actic": [33, 34, 37], "dglheterograph": [33, 34, 35, 37], "fnn_activ": 34, "aggreg": 34, "cross": 34, "h_dim": [35, 36, 38], "out_dim": [35, 36, 38], "num_hidden_lay": [35, 36, 38], "last_layer_act": [35, 36], "graphconvencod": [35, 36, 38], "mfg": [35, 36, 38], "conv": [36, 38], "selfloop": 36, "aggregator_typ": [37, 38], "sage": [37, 38], "gcn": 37, "pool": 37, "lstm": 37, "_n": [37, 38], "total_step": [39, 40, 41, 42], "validi": [39, 40, 41, 42], "freeze_input_layer_epoch": [39, 40, 41, 42], "commonli": [39, 40, 41, 42, 45, 48], "ensur": [39, 40, 41, 42], "get_best_model_path": [39, 40, 41, 42, 43], "remove_saved_model": [39, 40, 41, 42, 43], "previous": [39, 40, 41, 42, 43, 47], "model_layer_to_load": [39, 40, 41, 42, 43], "state": [39, 40, 41, 42, 43], "save_topk_model": [39, 40, 41, 42, 43], "i_th": [39, 40, 41, 42, 43], "epoch_th": [39, 40, 41, 42, 43], "evluat": [39, 40, 41, 42, 43], "gsgnntrainer": [40, 41, 42], "gsgnnedgedataload": 40, "gsgnnlinkpredictiondataload": 41, "gsgnn": 43, "gsgnnmodel": 43, "simplifi": 44, "develop": [44, 45, 47], "deploy": 44, "industri": 44, "measur": 44, "billon": 44, "collect": 44, "elimin": 44, "moreov": 44, "customiz": 44, "offer": 44, "program": 44, "interfac": 44, "custom": [44, 45, 47], "manner": 44, "bring": [44, 47], "beginn": 44, "cover": 44, "build": [44, 46, 48], "imag": [44, 46, 48], "successfulli": [44, 45, 46, 47], "usag": 44, "achiev": [44, 49], "experienc": [44, 48], "wish": 44, "veri": [44, 48], "modifi": 44, "boost": 44, "page": [44, 48], "softwar": 44, "redistribut": 44, "term": 44, "apach": 44, "licens": 44, "join": 44, "u": [44, 47], "github": [44, 45, 47], "packcag": 45, "signl": 45, "good": 45, "linux": [45, 47], "o": 45, "ubuntu": [45, 46], "04": 45, "python": [45, 47, 48, 49], "nvidia": [45, 46, 47], "pip3": 45, "v1": 45, "13": 45, "core": 45, "cu116": 45, "url": [45, 47], "download": [45, 46], "org": 45, "whl": 45, "cu117": 45, "ai": 45, "wheel": 45, "repo": 45, "html": 45, "intern": 45, "keygen": 45, "rsa": 45, "id_rsa": 45, "cat": 45, "pub": 45, "authorized_kei": 45, "everyth": 45, "right": 45, "enter": 45, "shell": 45, "facilit": 45, "graphstrom": 45, "training_script": [45, 46, 47, 49], "inference_script": 45, "examplar": 45, "obtain": 45, "git": [45, 47], "awslab": [45, 47], "aw": [45, 46, 47, 49], "ec2": [45, 46, 47], "without": [45, 46, 47], "preinstal": 45, "sudo": 45, "apt": 45, "io": 45, "deep": [45, 47], "ami": 45, "bash": [45, 46, 47], "build_docker_oss4loc": 45, "sh": [45, 47], "tag": [45, 47], "l": [45, 47], "succe": [45, 46], "previou": [45, 46], "v": [45, 46], "dev": [45, 46], "shm": [45, 46], "d": [45, 46], "daemon": [45, 46], "connect": [45, 46], "exec": [45, 46], "bin": [45, 46, 49], "prompt": 45, "root": 45, "ogb": [46, 47], "enough": 46, "short": 46, "instal": [46, 47], "ef": 46, "instruct": 46, "digitalocean": 46, "linod": 46, "tecmint": 46, "howtoforg": 46, "client": 46, "filesystem": 46, "path_to_data": [46, 47], "possibl": 46, "privat": [46, 49], "insteand": 46, "public": [46, 48], "constraint": 46, "password": [46, 47], "open": 46, "pick": 46, "p": [46, 49], "172": 46, "38": 46, "143": 46, "login": [46, 47], "65536": 46, "gen_mag_dataset": 46, "savepath": 46, "partition_graph_lp": [46, 48], "balanc": 46, "ogbn_mag_lp_3p": [46, 47], "diagram": [46, 48], "part0": [46, 48, 49], "part1": 46, "part2": 46, "37": 46, "11": 46, "221": 46, "gs_link_predict": 46, "gsgnn_lp": [46, 47], "mag_lp": [46, 47], "That": [46, 49], "conduct": 46, "tra": 46, "collabor": 46, "capabl": [46, 47], "hardli": 46, "nearli": 46, "800gb": 46, "r6a": 46, "32xlarg": 46, "1tb": 46, "least": 46, "300gb": 46, "better": 46, "ntask": 46, "ogbn_dataset": 46, "partition_graph": [46, 48, 49], "ogbn_papers100m_3p": 46, "hour": 46, "around": [46, 49], "700gb": 46, "peak": 46, "copi": [46, 47, 48], "ident": 46, "ogbn_papers100m_nc_p3": 46, "evaluation_frequ": 46, "500": 46, "mini_batch_inf": 46, "001": 46, "15": 46, "sparse_optim": 46, "six": [46, 48], "minut": 46, "g4dn": [46, 49], "12xlarg": [46, 49], "48": 46, "intel": 46, "xeon": 46, "vcpu": 46, "t4": 46, "192gb": 46, "45": 46, "ml": 47, "devop": 47, "elast": 47, "registri": 47, "s3": 47, "guidelin": 47, "byoc": 47, "account": 47, "ak": 47, "secur": 47, "sk": 47, "authent": 47, "cli": 47, "pull": 47, "region": 47, "east": 47, "stdin": 47, "763104351884": 47, "dkr": 47, "amazonaw": 47, "build_docker_sagemak": 47, "docker_typ": 47, "docker_nam": 47, "docker_tag": 47, "uri": 47, "aws_account_id": 47, "888888888888": 47, "sm": 47, "push": 47, "submit": 47, "api": 47, "request": 47, "properli": 47, "c5": 47, "xlarg": 47, "experi": 47, "deploi": 47, "mainli": 47, "tester": 47, "simul": 47, "util": 47, "storag": 47, "introduc": 47, "bucket": 47, "cp": 47, "recurs": 47, "path_to_training_config": 47, "diffenc": 47, "launch_train": 47, "amazon_ecr_image_uri": 47, "entri": 47, "train_entri": 47, "role": 47, "role_arn": 47, "path_to_save_trained_model": 47, "ogbn": [47, 49], "arn": 47, "iam": 47, "account_id": 47, "amazonsagemak": 47, "executionrol": 47, "20220627t143571": 47, "launch_inf": 47, "infer_entri": 47, "path_to_save_generated_node_embed": 47, "path_to_save_prediction_result": 47, "difffer": 47, "plu": 47, "999": 47, "emul": 47, "never": 47, "offici": 47, "great": 47, "intro": 47, "worker": 47, "virtual": 47, "close": 47, "pythonpath": 47, "export": 47, "path_to_graphstorm": 47, "spin": 47, "resembl": 47, "gf": 47, "algo": 47, "container_nam": 47, "hostnam": 47, "xxx": 47, "sm_training_env": 47, "current_host": 47, "world_siz": 47, "master_addr": 47, "aws_region": 47, "west": 47, "working_dir": 47, "opt": 47, "entrypoint": 47, "generate_sagemaker_docker_compos": 47, "pyyaml": 47, "commnd": 47, "secret": 47, "session": 47, "toekn": 47, "sagemaker_train": 47, "sagemaker_inf": 47, "logic": [47, 48], "aws_access_kei": 47, "aws_secret_access_kei": 47, "aws_session_token": 47, "graphstorm_docker_imag": 47, "map_lp": 47, "luanch": 47, "var": 47, "interact": 47, "assess": 47, "down": 47, "big": 48, "row": [48, 49], "what": 48, "succeed": 48, "author_writing_pap": 48, "paper_cited_pap": 48, "paper_citing_pap": 48, "paper_i": 48, "about_subject": 48, "paper_written": 48, "by_author": 48, "subject_has_pap": 48, "examplari": 48, "source_id": 48, "dest_id": 48, "written": 48, "simpl": 48, "custom_split_filenam": 48, "49": 48, "99": 48, "30": 48, "59": 48, "60": 48, "69": 48, "70": 48, "51": 48, "52": 48, "correspondingli": 48, "match": 48, "correct": [48, 49], "eventu": 48, "billion": 48, "heterograph": 48, "nodetypenam": 48, "featurenam": 48, "nodefeaturetensor": 48, "edgetypenam": 48, "edgefeaturetensor": 48, "predictnodetypenam": 48, "nodelabeltensor": 48, "predictedgetypenam": 48, "edgelabeltensor": 48, "trainingnodeindexetensor": 48, "validationnodeindexetensor": 48, "testnodeindexetensor": 48, "save_graph": 48, "convent": 48, "datasetnam": 48, "give": [48, 49], "ogbn_mag": 48, "acm_dgl": 48, "reus": 48, "forget": 48, "doubl": 48, "recommend": 48, "practic": 48, "highli": 48, "truli": 48, "besid": 48, "white": 48, "rather": 48, "200": 48, "bert_infer_b": 48, "quickli": 49, "nc": 49, "ogbn_arxiv_nc_1p": 49, "sub": 49, "gsgnn_np": 49, "arxiv_nc": 49, "node_sparse_emb": 49, "9": 49, "learnt": 49, "gprahstorm": 49, "ago": 49}, "objects": {"graphstorm.dataloading": [[13, 0, 1, "", "GSgnnEdgeDataLoader"], [14, 0, 1, "", "GSgnnEdgeInferData"], [15, 0, 1, "", "GSgnnEdgeTrainData"], [16, 0, 1, "", "GSgnnLinkPredictionDataLoader"], [17, 0, 1, "", "GSgnnNodeDataLoader"], [18, 0, 1, "", "GSgnnNodeInferData"], [19, 0, 1, "", "GSgnnNodeTrainData"]], "graphstorm.dataloading.GSgnnEdgeInferData": [[14, 1, 1, "", "get_edge_feats"], [14, 1, 1, "", "get_labels"], [14, 1, 1, "", "get_node_feats"], [14, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnEdgeTrainData": [[15, 1, 1, "", "get_edge_feats"], [15, 1, 1, "", "get_labels"], [15, 1, 1, "", "get_node_feats"], [15, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnNodeInferData": [[18, 1, 1, "", "get_edge_feats"], [18, 1, 1, "", "get_labels"], [18, 1, 1, "", "get_node_feats"], [18, 1, 1, "", "prepare_data"]], "graphstorm.dataloading.GSgnnNodeTrainData": [[19, 1, 1, "", "get_edge_feats"], [19, 1, 1, "", "get_labels"], [19, 1, 1, "", "get_node_feats"], [19, 1, 1, "", "prepare_data"]], "graphstorm.eval": [[20, 0, 1, "", "GSgnnAccEvaluator"], [21, 0, 1, "", "GSgnnInstanceEvaluator"], [22, 0, 1, "", "GSgnnLPEvaluator"], [23, 0, 1, "", "GSgnnMrrLPEvaluator"], [24, 0, 1, "", "GSgnnPerEtypeMrrLPEvaluator"], [25, 0, 1, "", "GSgnnRegressionEvaluator"]], "graphstorm.eval.GSgnnAccEvaluator": [[20, 1, 1, "", "compute_score"], [20, 1, 1, "", "do_eval"], [20, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnInstanceEvaluator": [[21, 1, 1, "", "compute_score"], [21, 1, 1, "", "do_eval"], [21, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnLPEvaluator": [[22, 1, 1, "", "do_eval"], [22, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnMrrLPEvaluator": [[23, 1, 1, "", "compute_score"], [23, 1, 1, "", "do_eval"], [23, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator": [[24, 1, 1, "", "compute_score"], [24, 1, 1, "", "do_eval"], [24, 1, 1, "", "evaluate"]], "graphstorm.eval.GSgnnRegressionEvaluator": [[25, 1, 1, "", "compute_score"], [25, 1, 1, "", "do_eval"], [25, 1, 1, "", "evaluate"]], "graphstorm.gsf": [[26, 2, 1, "", "initialize"]], "graphstorm.inference": [[27, 0, 1, "", "GSgnnEdgePredictionInfer"], [28, 0, 1, "", "GSgnnLinkPredictionInfer"], [29, 0, 1, "", "GSgnnNodePredictionInfer"]], "graphstorm.inference.GSgnnEdgePredictionInfer": [[27, 1, 1, "", "infer"]], "graphstorm.inference.GSgnnLinkPredictionInfer": [[28, 1, 1, "", "infer"]], "graphstorm.inference.GSgnnNodePredictionInfer": [[29, 1, 1, "", "infer"]], "graphstorm.model": [[30, 0, 1, "", "GSLMNodeEncoderInputLayer"], [31, 0, 1, "", "GSNodeEncoderInputLayer"], [32, 0, 1, "", "GSPureLMNodeInputLayer"], [33, 0, 1, "", "RelGraphConvLayer"], [34, 0, 1, "", "RelationalAttLayer"], [35, 0, 1, "", "RelationalGATEncoder"], [36, 0, 1, "", "RelationalGCNEncoder"], [37, 0, 1, "", "SAGEConv"], [38, 0, 1, "", "SAGEEncoder"]], "graphstorm.model.GSLMNodeEncoderInputLayer": [[30, 1, 1, "", "eval"], [30, 1, 1, "", "forward"], [30, 1, 1, "", "get_general_dense_parameters"], [30, 1, 1, "", "get_lm_dense_parameters"], [30, 1, 1, "", "get_sparse_params"]], "graphstorm.model.GSNodeEncoderInputLayer": [[31, 1, 1, "", "eval"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_general_dense_parameters"], [31, 1, 1, "", "get_lm_dense_parameters"], [31, 1, 1, "", "get_sparse_params"]], "graphstorm.model.GSPureLMNodeInputLayer": [[32, 1, 1, "", "eval"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_general_dense_parameters"], [32, 1, 1, "", "get_lm_dense_parameters"], [32, 1, 1, "", "get_sparse_params"]], "graphstorm.model.RelGraphConvLayer": [[33, 1, 1, "", "eval"], [33, 1, 1, "", "forward"]], "graphstorm.model.RelationalAttLayer": [[34, 1, 1, "", "eval"], [34, 1, 1, "", "forward"]], "graphstorm.model.RelationalGATEncoder": [[35, 1, 1, "", "eval"], [35, 1, 1, "", "forward"]], "graphstorm.model.RelationalGCNEncoder": [[36, 1, 1, "", "eval"], [36, 1, 1, "", "forward"]], "graphstorm.model.SAGEConv": [[37, 1, 1, "", "eval"], [37, 1, 1, "", "forward"]], "graphstorm.model.SAGEEncoder": [[38, 1, 1, "", "eval"], [38, 1, 1, "", "forward"]], "graphstorm.trainer": [[39, 0, 1, "", "GLEMNodePredictionTrainer"], [40, 0, 1, "", "GSgnnEdgePredictionTrainer"], [41, 0, 1, "", "GSgnnLinkPredictionTrainer"], [42, 0, 1, "", "GSgnnNodePredictionTrainer"], [43, 0, 1, "", "GSgnnTrainer"]], "graphstorm.trainer.GLEMNodePredictionTrainer": [[39, 1, 1, "", "eval"], [39, 1, 1, "", "fit"], [39, 1, 1, "", "get_best_model_path"], [39, 1, 1, "", "remove_saved_model"], [39, 1, 1, "", "restore_model"], [39, 1, 1, "", "save_model"], [39, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnEdgePredictionTrainer": [[40, 1, 1, "", "eval"], [40, 1, 1, "", "fit"], [40, 1, 1, "", "get_best_model_path"], [40, 1, 1, "", "remove_saved_model"], [40, 1, 1, "", "restore_model"], [40, 1, 1, "", "save_model"], [40, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnLinkPredictionTrainer": [[41, 1, 1, "", "eval"], [41, 1, 1, "", "fit"], [41, 1, 1, "", "get_best_model_path"], [41, 1, 1, "", "remove_saved_model"], [41, 1, 1, "", "restore_model"], [41, 1, 1, "", "save_model"], [41, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnNodePredictionTrainer": [[42, 1, 1, "", "eval"], [42, 1, 1, "", "fit"], [42, 1, 1, "", "get_best_model_path"], [42, 1, 1, "", "remove_saved_model"], [42, 1, 1, "", "restore_model"], [42, 1, 1, "", "save_model"], [42, 1, 1, "", "save_topk_models"]], "graphstorm.trainer.GSgnnTrainer": [[43, 1, 1, "", "get_best_model_path"], [43, 1, 1, "", "remove_saved_model"], [43, 1, 1, "", "restore_model"], [43, 1, 1, "", "save_model"], [43, 1, 1, "", "save_topk_models"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"graphstorm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 26, 44, 45, 46, 47], "advanc": [0, 44], "usag": 0, "prevent": 0, "inform": [0, 48], "leakag": 0, "link": [0, 11], "predict": [0, 11], "speedup": 0, "train": [0, 2, 11, 46, 47, 48, 49], "us": [1, 2, 46, 47, 48], "text": 1, "node": [1, 9, 11, 48], "featur": [1, 9], "prepar": [1, 47, 48], "raw": [1, 48], "data": [1, 2, 47, 48, 49], "construct": [1, 9, 48], "graph": [1, 2, 9, 10, 44, 46, 47, 48], "languag": [1, 11], "model": [1, 2, 7, 11], "configur": [1, 2, 9, 11, 12, 45, 46, 48], "launch": [1, 11, 46, 47, 48, 49], "trainig": 1, "without": 1, "fine": 1, "tune": 1, "bert": 1, "both": 1, "gnn": [1, 2], "onli": 1, "your": [2, 48], "own": [2, 48], "prerequisit": [2, 45, 47], "dgl": [2, 48], "implement": 2, "modifi": [2, 48], "you": 2, "mini": 2, "batch": 2, "infer": [2, 6, 11, 47, 49], "learn": 2, "how": 2, "run": [2, 47], "docker": [2, 45, 47], "environ": [2, 11, 45], "modif": 2, "requir": [2, 48], "custom": [2, 48], "step": [2, 47, 48], "1": [2, 45, 47, 48], "convert": 2, "format": [2, 9, 48], "2": [2, 45, 47, 48], "api": 2, "3": [2, 48], "flow": 2, "start": [2, 44, 47, 49], "process": [2, 46], "": [2, 48], "iniatil": 2, "replac": 2, "dataload": [2, 4], "dataset": 2, "trainer": [2, 8], "wrap": 2, "attach": 2, "evalu": [2, 5, 11], "task": [2, 11], "tracker": 2, "fit": 2, "function": [2, 3], "4": 2, "handl": 2, "unus": 2, "weight": 2, "error": 2, "5": 2, "add": 2, "few": 2, "addit": 2, "argument": [2, 9, 10, 11, 16], "python": 2, "main": 2, "6": 2, "setup": [2, 45, 46, 47], "yaml": [2, 48], "file": [2, 46, 47, 48], "put": 2, "everyth": 2, "togeth": 2, "them": 2, "input": [7, 9, 48], "encod": 7, "construct_graph": 9, "py": [9, 10], "json": [9, 48], "explan": 9, "edg": [9, 11, 48], "transform": 9, "output": [9, 48], "an": [9, 48], "exampl": [9, 48], "partit": [10, 46, 48, 49], "partition_graph": 10, "partition_graph_lp": 10, "built": 11, "specif": 11, "rgcn": 11, "rgat": 11, "save": 11, "restor": 11, "hyper": 11, "paramet": [11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "earli": 11, "stop": 11, "gener": [11, 47], "classif": [11, 48], "regress": 11, "gsgnnedgedataload": 13, "gsgnnedgeinferdata": 14, "return": [14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42], "arguement": [14, 15, 18, 19], "gsgnnedgetraindata": 15, "gsgnnlinkpredictiondataload": 16, "gsgnnnodedataload": 17, "gsgnnnodeinferdata": 18, "gsgnnnodetraindata": 19, "gsgnnaccevalu": 20, "gsgnninstanceevalu": 21, "gsgnnlpevalu": 22, "gsgnnmrrlpevalu": 23, "gsgnnperetypemrrlpevalu": 24, "gsgnnregressionevalu": 25, "gsf": 26, "initi": 26, "gsgnnedgepredictioninf": 27, "gsgnnlinkpredictioninf": 28, "gsgnnnodepredictioninf": 29, "gslmnodeencoderinputlay": 30, "gsnodeencoderinputlay": 31, "gspurelmnodeinputlay": 32, "relgraphconvlay": 33, "relationalattlay": 34, "relationalgatencod": 35, "relationalgcnencod": 36, "sageconv": 37, "sageencod": 38, "glemnodepredictiontrain": 39, "gsgnnedgepredictiontrain": 40, "gsgnnlinkpredictiontrain": 41, "gsgnnnodepredictiontrain": 42, "gsgnntrainer": 43, "welcom": 44, "document": 44, "tutori": [44, 48, 49], "get": [44, 47], "scale": 44, "giant": 44, "topic": 44, "contribut": 44, "pip": 45, "packag": 45, "instal": 45, "depend": 45, "ssh": 45, "No": 45, "password": 45, "login": 45, "clone": 45, "toolkit": 45, "option": [45, 48], "build": [45, 47], "imag": [45, 47], "from": 45, "sourc": 45, "code": 45, "creat": [45, 46], "contain": [45, 46], "distribut": 46, "cluster": 46, "instanc": 46, "share": 46, "system": 46, "mount": 46, "nf": 46, "folder": 46, "ip": 46, "address": 46, "check": 46, "port": 46, "statu": 46, "collect": 46, "list": 46, "One": 46, "larg": 46, "ogbn": 46, "papers100m": 46, "all": 46, "sagemak": 47, "compat": 47, "upload": 47, "amazon": 47, "ecr": 47, "repositori": 47, "servic": 47, "compos": 47, "clean": [47, 49], "up": [47, 49], "The": 48, "label": 48, "split": 48, "acm": 48, "includ": 48, "script": 48, "standalon": 49, "mode": 49, "quick": 49, "download": 49, "ogb": 49, "arxiv": 49}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"GraphStorm Advanced Usages": [[0, "graphstorm-advanced-usages"]], "Prevent Information Leakage in Link Prediction": [[0, "prevent-information-leakage-in-link-prediction"]], "Speedup Link Prediction Training": [[0, "speedup-link-prediction-training"]], "Use Text as Node Features": [[1, "use-text-as-node-features"]], "Prepare Raw Data": [[1, "prepare-raw-data"]], "Construct Graph": [[1, "construct-graph"]], "GraphStorm Language Model Configuration": [[1, "graphstorm-language-model-configuration"]], "Launch GraphStorm Trainig without Fine-tuning BERT Models": [[1, "launch-graphstorm-trainig-without-fine-tuning-bert-models"]], "Launch GraphStorm Trainig for both BERT and GNN Models": [[1, "launch-graphstorm-trainig-for-both-bert-and-gnn-models"]], "Only Use BERT Models": [[1, "only-use-bert-models"]], "Use Your Own Models": [[2, "use-your-own-models"]], "Prerequisites": [[2, "prerequisites"], [45, "prerequisites"], [45, "id1"], [47, "prerequisites"]], "Use DGL to implement your GNN models": [[2, "use-dgl-to-implement-your-gnn-models"]], "Modify you GNN models to use mini-batch training/inference": [[2, "modify-you-gnn-models-to-use-mini-batch-training-inference"]], "Learn how to run GraphStorm in a Docker environment": [[2, "learn-how-to-run-graphstorm-in-a-docker-environment"]], "Modifications required for customer models": [[2, "modifications-required-for-customer-models"]], "Step 1: Convert your graph data into required format": [[2, "step-1-convert-your-graph-data-into-required-format"]], "Step 2: Modify your GNN model to use the GraphStorm APIs": [[2, "step-2-modify-your-gnn-model-to-use-the-graphstorm-apis"]], "Step 3. Modify the training/inference flow with the GraphStorm APIs": [[2, "step-3-modify-the-training-inference-flow-with-the-graphstorm-apis"]], "Start training process with GraphStorm\u2019s iniatilization": [[2, "start-training-process-with-graphstorm-s-iniatilization"]], "Replace DGL DataLoader with the GraphStorm\u2019s dataset and dataloader": [[2, "replace-dgl-dataloader-with-the-graphstorm-s-dataset-and-dataloader"]], "Use GraphStorm\u2019s model trainer to wrap your model and attach evaluator and task tracker to it": [[2, "use-graphstorm-s-model-trainer-to-wrap-your-model-and-attach-evaluator-and-task-tracker-to-it"]], "Use trainer\u2019s fit() function to run training": [[2, "use-trainer-s-fit-function-to-run-training"]], "Step 4. Handle the unused weights error": [[2, "step-4-handle-the-unused-weights-error"]], "Step 5. Add a few additional arguments for the Python main function": [[2, "step-5-add-a-few-additional-arguments-for-the-python-main-function"]], "Step 6. Setup GraphStorm configuration YAML file": [[2, "step-6-setup-graphstorm-configuration-yaml-file"]], "Put Everything Together and Run them": [[2, "put-everything-together-and-run-them"]], "graphstorm": [[3, "graphstorm"]], "Functions": [[3, "functions"]], "graphstorm.dataloading": [[4, "graphstorm-dataloading"]], "graphstorm.evaluator": [[5, "graphstorm-evaluator"]], "graphstorm.inferer": [[6, "graphstorm-inferer"]], "graphstorm.model": [[7, "graphstorm-model"]], "Input": [[7, "input"]], "Encoder": [[7, "encoder"]], "graphstorm.trainer": [[8, "graphstorm-trainer"]], "Graph Construction": [[9, "graph-construction"]], "construct_graph.py arguments": [[9, "construct-graph-py-arguments"]], "Configuration JSON Explanations": [[9, "configuration-json-explanations"]], "nodes": [[9, "nodes"]], "edges": [[9, "edges"]], "Input formats": [[9, "input-formats"]], "Feature transformation": [[9, "feature-transformation"]], "Output": [[9, "output"]], "An example": [[9, "an-example"]], "Graph Partition": [[10, "graph-partition"]], "partition_graph.py arguments": [[10, "partition-graph-py-arguments"]], "partition_graph_lp.py arguments": [[10, "partition-graph-lp-py-arguments"]], "Training and Inference": [[11, "training-and-inference"]], "Launch Arguments": [[11, "launch-arguments"]], "Environment Configurations": [[11, "environment-configurations"]], "Model Configurations": [[11, "model-configurations"]], "Built-in Model Specific Configurations": [[11, "built-in-model-specific-configurations"]], "RGCN": [[11, "rgcn"]], "RGAT": [[11, "rgat"]], "Model Save/Restore Configurations": [[11, "model-save-restore-configurations"]], "Model Training Hyper-parameters Configurations": [[11, "model-training-hyper-parameters-configurations"]], "Early stop configurations": [[11, "early-stop-configurations"]], "Model Evaluation Configurations": [[11, "model-evaluation-configurations"]], "Language Model Specific Configurations": [[11, "language-model-specific-configurations"]], "Task Specific Configurations": [[11, "task-specific-configurations"]], "General Configurations": [[11, "general-configurations"]], "Classification and Regression Task": [[11, "classification-and-regression-task"]], "Node Classification/Regression Specific": [[11, "node-classification-regression-specific"]], "Edge Classification/Regression Specific": [[11, "edge-classification-regression-specific"]], "Link Prediction Task": [[11, "link-prediction-task"]], "GraphStorm Configurations": [[12, "graphstorm-configurations"]], "GSgnnEdgeDataLoader": [[13, "gsgnnedgedataloader"]], "Parameters": [[13, "parameters"], [14, "parameters"], [14, "id1"], [14, "id2"], [14, "id4"], [15, "parameters"], [15, "id1"], [15, "id2"], [15, "id4"], [17, "parameters"], [18, "parameters"], [18, "id1"], [18, "id2"], [18, "id4"], [19, "parameters"], [19, "id1"], [19, "id2"], [19, "id4"], [20, "parameters"], [20, "id1"], [20, "id2"], [20, "id4"], [21, "parameters"], [21, "id1"], [21, "id2"], [21, "id3"], [22, "parameters"], [22, "id1"], [22, "id2"], [23, "parameters"], [23, "id1"], [23, "id2"], [23, "id4"], [24, "parameters"], [24, "id1"], [24, "id2"], [24, "id4"], [25, "parameters"], [25, "id1"], [25, "id2"], [25, "id4"], [26, "parameters"], [27, "parameters"], [27, "id1"], [28, "parameters"], [28, "id1"], [29, "parameters"], [29, "id1"], [30, "parameters"], [30, "id1"], [31, "parameters"], [31, "id1"], [32, "parameters"], [32, "id1"], [33, "parameters"], [33, "id1"], [34, "parameters"], [34, "id1"], [35, "parameters"], [36, "parameters"], [36, "id1"], [37, "parameters"], [37, "id1"], [38, "parameters"], [38, "id1"], [39, "parameters"], [39, "id1"], [39, "id2"], [39, "id3"], [39, "id4"], [39, "id5"], [40, "parameters"], [40, "id1"], [40, "id2"], [40, "id3"], [40, "id4"], [40, "id5"], [41, "parameters"], [41, "id1"], [41, "id2"], [41, "id3"], [41, "id4"], [41, "id5"], [42, "parameters"], [42, "id1"], [42, "id2"], [42, "id3"], [42, "id4"], [42, "id5"], [43, "parameters"], [43, "id1"], [43, "id2"], [43, "id3"]], "GSgnnEdgeInferData": [[14, "gsgnnedgeinferdata"]], "Returns": [[14, "returns"], [14, "id3"], [14, "id5"], [15, "returns"], [15, "id3"], [15, "id5"], [18, "returns"], [18, "id3"], [18, "id5"], [19, "returns"], [19, "id3"], [19, "id5"], [20, "returns"], [20, "id3"], [20, "id5"], [21, "returns"], [21, "id4"], [22, "returns"], [22, "id3"], [23, "returns"], [23, "id3"], [23, "id5"], [24, "returns"], [24, "id3"], [24, "id5"], [25, "returns"], [25, "id3"], [25, "id5"], [30, "returns"], [30, "id2"], [30, "id3"], [30, "id4"], [31, "returns"], [31, "id2"], [31, "id3"], [32, "returns"], [32, "id2"], [32, "id3"], [32, "id4"], [33, "returns"], [34, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"]], "Arguement": [[14, "arguement"], [15, "arguement"], [18, "arguement"], [19, "arguement"]], "GSgnnEdgeTrainData": [[15, "gsgnnedgetraindata"]], "GSgnnLinkPredictionDataLoader": [[16, "gsgnnlinkpredictiondataloader"]], "Argument": [[16, "argument"]], "GSgnnNodeDataLoader": [[17, "gsgnnnodedataloader"]], "GSgnnNodeInferData": [[18, "gsgnnnodeinferdata"]], "GSgnnNodeTrainData": [[19, "gsgnnnodetraindata"]], "GSgnnAccEvaluator": [[20, "gsgnnaccevaluator"]], "GSgnnInstanceEvaluator": [[21, "gsgnninstanceevaluator"]], "GSgnnLPEvaluator": [[22, "gsgnnlpevaluator"]], "GSgnnMrrLPEvaluator": [[23, "gsgnnmrrlpevaluator"]], "GSgnnPerEtypeMrrLPEvaluator": [[24, "gsgnnperetypemrrlpevaluator"]], "GSgnnRegressionEvaluator": [[25, "gsgnnregressionevaluator"]], "graphstorm.gsf.initialize": [[26, "graphstorm-gsf-initialize"]], "GSgnnEdgePredictionInfer": [[27, "gsgnnedgepredictioninfer"]], "GSgnnLinkPredictionInfer": [[28, "gsgnnlinkpredictioninfer"]], "GSgnnNodePredictionInfer": [[29, "gsgnnnodepredictioninfer"]], "GSLMNodeEncoderInputLayer": [[30, "gslmnodeencoderinputlayer"]], "GSNodeEncoderInputLayer": [[31, "gsnodeencoderinputlayer"]], "GSPureLMNodeInputLayer": [[32, "gspurelmnodeinputlayer"]], "RelGraphConvLayer": [[33, "relgraphconvlayer"]], "RelationalAttLayer": [[34, "relationalattlayer"]], "RelationalGATEncoder": [[35, "relationalgatencoder"]], "RelationalGCNEncoder": [[36, "relationalgcnencoder"]], "SAGEConv": [[37, "sageconv"]], "SAGEEncoder": [[38, "sageencoder"]], "GLEMNodePredictionTrainer": [[39, "glemnodepredictiontrainer"]], "GSgnnEdgePredictionTrainer": [[40, "gsgnnedgepredictiontrainer"]], "GSgnnLinkPredictionTrainer": [[41, "gsgnnlinkpredictiontrainer"]], "GSgnnNodePredictionTrainer": [[42, "gsgnnnodepredictiontrainer"]], "GSgnnTrainer": [[43, "gsgnntrainer"]], "Welcome to the GraphStorm Documentation and Tutorials": [[44, "welcome-to-the-graphstorm-documentation-and-tutorials"]], "Getting Started": [[44, "getting-started"]], "Scale to Giant Graphs": [[44, "scale-to-giant-graphs"]], "Advanced Topics": [[44, "advanced-topics"]], "Contribution": [[44, "contribution"]], "Environment Setup": [[45, "environment-setup"]], "1. Setup GraphStorm with pip Packages": [[45, "setup-graphstorm-with-pip-packages"]], "Install GraphStorm": [[45, "install-graphstorm"]], "Install Dependencies": [[45, "install-dependencies"]], "Configure SSH No-password login": [[45, "configure-ssh-no-password-login"]], "Clone GraphStorm Toolkits (Optional)": [[45, "clone-graphstorm-toolkits-optional"]], "2. Setup GraphStorm Docker Environment": [[45, "setup-graphstorm-docker-environment"]], "Build a GraphStorm Docker image from source code": [[45, "build-a-graphstorm-docker-image-from-source-code"]], "Create a GraphStorm Container": [[45, "create-a-graphstorm-container"]], "Use GraphStorm in a Distributed Cluster": [[46, "use-graphstorm-in-a-distributed-cluster"]], "Create a GraphStorm Cluster": [[46, "create-a-graphstorm-cluster"], [46, "id4"]], "Setup the instance of a cluster": [[46, "setup-the-instance-of-a-cluster"]], "Setup of a shared file system for the cluster": [[46, "setup-of-a-shared-file-system-for-the-cluster"]], "Create GraphStorm container by mounting the NFS folder": [[46, "create-graphstorm-container-by-mounting-the-nfs-folder"]], "Setup the IP address file and check port status": [[46, "setup-the-ip-address-file-and-check-port-status"]], "Collect the IP list": [[46, "collect-the-ip-list"]], "Check port": [[46, "check-port"]], "Partition a Graph": [[46, "partition-a-graph"]], "Launch Training on One Container": [[46, "launch-training-on-one-container"]], "Train a Large Graph (OGBN-Papers100M)": [[46, "train-a-large-graph-ogbn-papers100m"]], "Process and Partition a Graph": [[46, "process-and-partition-a-graph"]], "Distribute Partitioned Graphs and Configurations to all Instances": [[46, "distribute-partitioned-graphs-and-configurations-to-all-instances"]], "Launch Training in One Container": [[46, "launch-training-in-one-container"]], "Use GraphStorm on SageMaker": [[47, "use-graphstorm-on-sagemaker"]], "Setup GraphStorm SageMaker Docker Image": [[47, "setup-graphstorm-sagemaker-docker-image"]], "Step 1: Build a SageMaker-compatible Docker image": [[47, "step-1-build-a-sagemaker-compatible-docker-image"]], "Step 2: Upload Docker Images to Amazon ECR Repository": [[47, "step-2-upload-docker-images-to-amazon-ecr-repository"]], "Run GraphStorm on SageMaker": [[47, "run-graphstorm-on-sagemaker"]], "Run GraphStorm with Amazon SageMaker service": [[47, "run-graphstorm-with-amazon-sagemaker-service"]], "Prepare graph data": [[47, "prepare-graph-data"]], "Launch training": [[47, "launch-training"]], "Launch inference": [[47, "launch-inference"], [49, "launch-inference"]], "Run GraphStorm SageMaker with Docker Compose": [[47, "run-graphstorm-sagemaker-with-docker-compose"]], "Get Started": [[47, "get-started"]], "Generate a Docker Compose file": [[47, "generate-a-docker-compose-file"]], "Run GraphStorm on Docker Compose for Training": [[47, "run-graphstorm-on-docker-compose-for-training"]], "Run GraphStorm on Docker Compose for Inference": [[47, "run-graphstorm-on-docker-compose-for-inference"]], "Clean Up": [[47, "clean-up"], [49, "clean-up"]], "Use Your Own Data Tutorial": [[48, "use-your-own-data-tutorial"]], "Step 1: Prepare Your Own Graph Data": [[48, "step-1-prepare-your-own-graph-data"]], "Option 1: Required raw data format": [[48, "option-1-required-raw-data-format"]], "The input configuration JSON": [[48, "the-input-configuration-json"]], "Customized label split": [[48, "customized-label-split"]], "Input raw node/edge data files": [[48, "input-raw-node-edge-data-files"]], "Outputs of graph construction": [[48, "outputs-of-graph-construction"]], "Option 2: Required DGL graph": [[48, "option-2-required-dgl-graph"]], "Required DGL graph format": [[48, "required-dgl-graph-format"]], "The ACM graph data example": [[48, "the-acm-graph-data-example"]], "Partition the DGL ACM graph for node classification": [[48, "partition-the-dgl-acm-graph-for-node-classification"]], "Step 2: Modify the YAML configuration file to include your own data\u2019s information": [[48, "step-2-modify-the-yaml-configuration-file-to-include-your-own-data-s-information"]], "An example ACM  YAML file for node classification": [[48, "an-example-acm-yaml-file-for-node-classification"]], "Step 3: Launch training script on your own graphs": [[48, "step-3-launch-training-script-on-your-own-graphs"]], "Standalone Mode Quick Start Tutorial": [[49, "standalone-mode-quick-start-tutorial"]], "Download  and Partition OGB-arxiv Data": [[49, "download-and-partition-ogb-arxiv-data"]], "Launch Training": [[49, "launch-training"]]}, "indexentries": {"gsgnnedgedataloader (class in graphstorm.dataloading)": [[13, "graphstorm.dataloading.GSgnnEdgeDataLoader"]], "gsgnnedgeinferdata (class in graphstorm.dataloading)": [[14, "graphstorm.dataloading.GSgnnEdgeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[14, "graphstorm.dataloading.GSgnnEdgeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[14, "graphstorm.dataloading.GSgnnEdgeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[14, "graphstorm.dataloading.GSgnnEdgeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgeinferdata method)": [[14, "graphstorm.dataloading.GSgnnEdgeInferData.prepare_data"]], "gsgnnedgetraindata (class in graphstorm.dataloading)": [[15, "graphstorm.dataloading.GSgnnEdgeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[15, "graphstorm.dataloading.GSgnnEdgeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnedgetraindata method)": [[15, "graphstorm.dataloading.GSgnnEdgeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnedgetraindata method)": [[15, "graphstorm.dataloading.GSgnnEdgeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnedgetraindata method)": [[15, "graphstorm.dataloading.GSgnnEdgeTrainData.prepare_data"]], "gsgnnlinkpredictiondataloader (class in graphstorm.dataloading)": [[16, "graphstorm.dataloading.GSgnnLinkPredictionDataLoader"]], "gsgnnnodedataloader (class in graphstorm.dataloading)": [[17, "graphstorm.dataloading.GSgnnNodeDataLoader"]], "gsgnnnodeinferdata (class in graphstorm.dataloading)": [[18, "graphstorm.dataloading.GSgnnNodeInferData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[18, "graphstorm.dataloading.GSgnnNodeInferData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[18, "graphstorm.dataloading.GSgnnNodeInferData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[18, "graphstorm.dataloading.GSgnnNodeInferData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodeinferdata method)": [[18, "graphstorm.dataloading.GSgnnNodeInferData.prepare_data"]], "gsgnnnodetraindata (class in graphstorm.dataloading)": [[19, "graphstorm.dataloading.GSgnnNodeTrainData"]], "get_edge_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[19, "graphstorm.dataloading.GSgnnNodeTrainData.get_edge_feats"]], "get_labels() (graphstorm.dataloading.gsgnnnodetraindata method)": [[19, "graphstorm.dataloading.GSgnnNodeTrainData.get_labels"]], "get_node_feats() (graphstorm.dataloading.gsgnnnodetraindata method)": [[19, "graphstorm.dataloading.GSgnnNodeTrainData.get_node_feats"]], "prepare_data() (graphstorm.dataloading.gsgnnnodetraindata method)": [[19, "graphstorm.dataloading.GSgnnNodeTrainData.prepare_data"]], "gsgnnaccevaluator (class in graphstorm.eval)": [[20, "graphstorm.eval.GSgnnAccEvaluator"]], "compute_score() (graphstorm.eval.gsgnnaccevaluator method)": [[20, "graphstorm.eval.GSgnnAccEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnaccevaluator method)": [[20, "graphstorm.eval.GSgnnAccEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnaccevaluator method)": [[20, "graphstorm.eval.GSgnnAccEvaluator.evaluate"]], "gsgnninstanceevaluator (class in graphstorm.eval)": [[21, "graphstorm.eval.GSgnnInstanceEvaluator"]], "compute_score() (graphstorm.eval.gsgnninstanceevaluator method)": [[21, "graphstorm.eval.GSgnnInstanceEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnninstanceevaluator method)": [[21, "graphstorm.eval.GSgnnInstanceEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnninstanceevaluator method)": [[21, "graphstorm.eval.GSgnnInstanceEvaluator.evaluate"]], "gsgnnlpevaluator (class in graphstorm.eval)": [[22, "graphstorm.eval.GSgnnLPEvaluator"]], "do_eval() (graphstorm.eval.gsgnnlpevaluator method)": [[22, "graphstorm.eval.GSgnnLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnlpevaluator method)": [[22, "graphstorm.eval.GSgnnLPEvaluator.evaluate"]], "gsgnnmrrlpevaluator (class in graphstorm.eval)": [[23, "graphstorm.eval.GSgnnMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[23, "graphstorm.eval.GSgnnMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[23, "graphstorm.eval.GSgnnMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnmrrlpevaluator method)": [[23, "graphstorm.eval.GSgnnMrrLPEvaluator.evaluate"]], "gsgnnperetypemrrlpevaluator (class in graphstorm.eval)": [[24, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator"]], "compute_score() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnperetypemrrlpevaluator method)": [[24, "graphstorm.eval.GSgnnPerEtypeMrrLPEvaluator.evaluate"]], "gsgnnregressionevaluator (class in graphstorm.eval)": [[25, "graphstorm.eval.GSgnnRegressionEvaluator"]], "compute_score() (graphstorm.eval.gsgnnregressionevaluator method)": [[25, "graphstorm.eval.GSgnnRegressionEvaluator.compute_score"]], "do_eval() (graphstorm.eval.gsgnnregressionevaluator method)": [[25, "graphstorm.eval.GSgnnRegressionEvaluator.do_eval"]], "evaluate() (graphstorm.eval.gsgnnregressionevaluator method)": [[25, "graphstorm.eval.GSgnnRegressionEvaluator.evaluate"]], "initialize() (in module graphstorm.gsf)": [[26, "graphstorm.gsf.initialize"]], "gsgnnedgepredictioninfer (class in graphstorm.inference)": [[27, "graphstorm.inference.GSgnnEdgePredictionInfer"]], "infer() (graphstorm.inference.gsgnnedgepredictioninfer method)": [[27, "graphstorm.inference.GSgnnEdgePredictionInfer.infer"]], "gsgnnlinkpredictioninfer (class in graphstorm.inference)": [[28, "graphstorm.inference.GSgnnLinkPredictionInfer"]], "infer() (graphstorm.inference.gsgnnlinkpredictioninfer method)": [[28, "graphstorm.inference.GSgnnLinkPredictionInfer.infer"]], "gsgnnnodepredictioninfer (class in graphstorm.inference)": [[29, "graphstorm.inference.GSgnnNodePredictionInfer"]], "infer() (graphstorm.inference.gsgnnnodepredictioninfer method)": [[29, "graphstorm.inference.GSgnnNodePredictionInfer.infer"]], "gslmnodeencoderinputlayer (class in graphstorm.model)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer"]], "eval() (graphstorm.model.gslmnodeencoderinputlayer method)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer.eval"]], "forward() (graphstorm.model.gslmnodeencoderinputlayer method)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gslmnodeencoderinputlayer method)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gslmnodeencoderinputlayer method)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gslmnodeencoderinputlayer method)": [[30, "graphstorm.model.GSLMNodeEncoderInputLayer.get_sparse_params"]], "gsnodeencoderinputlayer (class in graphstorm.model)": [[31, "graphstorm.model.GSNodeEncoderInputLayer"]], "eval() (graphstorm.model.gsnodeencoderinputlayer method)": [[31, "graphstorm.model.GSNodeEncoderInputLayer.eval"]], "forward() (graphstorm.model.gsnodeencoderinputlayer method)": [[31, "graphstorm.model.GSNodeEncoderInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gsnodeencoderinputlayer method)": [[31, "graphstorm.model.GSNodeEncoderInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gsnodeencoderinputlayer method)": [[31, "graphstorm.model.GSNodeEncoderInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gsnodeencoderinputlayer method)": [[31, "graphstorm.model.GSNodeEncoderInputLayer.get_sparse_params"]], "gspurelmnodeinputlayer (class in graphstorm.model)": [[32, "graphstorm.model.GSPureLMNodeInputLayer"]], "eval() (graphstorm.model.gspurelmnodeinputlayer method)": [[32, "graphstorm.model.GSPureLMNodeInputLayer.eval"]], "forward() (graphstorm.model.gspurelmnodeinputlayer method)": [[32, "graphstorm.model.GSPureLMNodeInputLayer.forward"]], "get_general_dense_parameters() (graphstorm.model.gspurelmnodeinputlayer method)": [[32, "graphstorm.model.GSPureLMNodeInputLayer.get_general_dense_parameters"]], "get_lm_dense_parameters() (graphstorm.model.gspurelmnodeinputlayer method)": [[32, "graphstorm.model.GSPureLMNodeInputLayer.get_lm_dense_parameters"]], "get_sparse_params() (graphstorm.model.gspurelmnodeinputlayer method)": [[32, "graphstorm.model.GSPureLMNodeInputLayer.get_sparse_params"]], "relgraphconvlayer (class in graphstorm.model)": [[33, "graphstorm.model.RelGraphConvLayer"]], "eval() (graphstorm.model.relgraphconvlayer method)": [[33, "graphstorm.model.RelGraphConvLayer.eval"]], "forward() (graphstorm.model.relgraphconvlayer method)": [[33, "graphstorm.model.RelGraphConvLayer.forward"]], "relationalattlayer (class in graphstorm.model)": [[34, "graphstorm.model.RelationalAttLayer"]], "eval() (graphstorm.model.relationalattlayer method)": [[34, "graphstorm.model.RelationalAttLayer.eval"]], "forward() (graphstorm.model.relationalattlayer method)": [[34, "graphstorm.model.RelationalAttLayer.forward"]], "relationalgatencoder (class in graphstorm.model)": [[35, "graphstorm.model.RelationalGATEncoder"]], "eval() (graphstorm.model.relationalgatencoder method)": [[35, "graphstorm.model.RelationalGATEncoder.eval"]], "forward() (graphstorm.model.relationalgatencoder method)": [[35, "graphstorm.model.RelationalGATEncoder.forward"]], "relationalgcnencoder (class in graphstorm.model)": [[36, "graphstorm.model.RelationalGCNEncoder"]], "eval() (graphstorm.model.relationalgcnencoder method)": [[36, "graphstorm.model.RelationalGCNEncoder.eval"]], "forward() (graphstorm.model.relationalgcnencoder method)": [[36, "graphstorm.model.RelationalGCNEncoder.forward"]], "sageconv (class in graphstorm.model)": [[37, "graphstorm.model.SAGEConv"]], "eval() (graphstorm.model.sageconv method)": [[37, "graphstorm.model.SAGEConv.eval"]], "forward() (graphstorm.model.sageconv method)": [[37, "graphstorm.model.SAGEConv.forward"]], "sageencoder (class in graphstorm.model)": [[38, "graphstorm.model.SAGEEncoder"]], "eval() (graphstorm.model.sageencoder method)": [[38, "graphstorm.model.SAGEEncoder.eval"]], "forward() (graphstorm.model.sageencoder method)": [[38, "graphstorm.model.SAGEEncoder.forward"]], "glemnodepredictiontrainer (class in graphstorm.trainer)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer"]], "eval() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.eval"]], "fit() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.glemnodepredictiontrainer method)": [[39, "graphstorm.trainer.GLEMNodePredictionTrainer.save_topk_models"]], "gsgnnedgepredictiontrainer (class in graphstorm.trainer)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnedgepredictiontrainer method)": [[40, "graphstorm.trainer.GSgnnEdgePredictionTrainer.save_topk_models"]], "gsgnnlinkpredictiontrainer (class in graphstorm.trainer)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnlinkpredictiontrainer method)": [[41, "graphstorm.trainer.GSgnnLinkPredictionTrainer.save_topk_models"]], "gsgnnnodepredictiontrainer (class in graphstorm.trainer)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer"]], "eval() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.eval"]], "fit() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.fit"]], "get_best_model_path() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnnnodepredictiontrainer method)": [[42, "graphstorm.trainer.GSgnnNodePredictionTrainer.save_topk_models"]], "gsgnntrainer (class in graphstorm.trainer)": [[43, "graphstorm.trainer.GSgnnTrainer"]], "get_best_model_path() (graphstorm.trainer.gsgnntrainer method)": [[43, "graphstorm.trainer.GSgnnTrainer.get_best_model_path"]], "remove_saved_model() (graphstorm.trainer.gsgnntrainer method)": [[43, "graphstorm.trainer.GSgnnTrainer.remove_saved_model"]], "restore_model() (graphstorm.trainer.gsgnntrainer method)": [[43, "graphstorm.trainer.GSgnnTrainer.restore_model"]], "save_model() (graphstorm.trainer.gsgnntrainer method)": [[43, "graphstorm.trainer.GSgnnTrainer.save_model"]], "save_topk_models() (graphstorm.trainer.gsgnntrainer method)": [[43, "graphstorm.trainer.GSgnnTrainer.save_topk_models"]]}})